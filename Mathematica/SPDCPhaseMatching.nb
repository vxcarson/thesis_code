(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    301719,       6148]
NotebookOptionsPosition[    296154,       6056]
NotebookOutlinePosition[    296681,       6075]
CellTagsIndexPosition[    296638,       6072]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{
   "$Path", ",", "\"\<C:\\\\path\\\\to\\\\directory\\\\of\\\\Functions\>\""}],
    "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.947858431202114*^9, 3.9478584577167296`*^9}, {
   3.947858620799543*^9, 3.947858628892618*^9}, {3.948452873582793*^9, 
   3.948452883553621*^9}, 3.951856733103142*^9, {3.951918136151245*^9, 
   3.9519181469286585`*^9}, {3.9519186775941887`*^9, 3.951918701835946*^9}, {
   3.9519187360093975`*^9, 3.951918759536208*^9}, {3.951943652516838*^9, 
   3.9519436883168077`*^9}},ExpressionUUID->"7c603647-fa24-43a3-be3a-\
5fef5e7cede8"],

Cell[BoxData[{
 RowBox[{"<<", "SPDCFunctions.m"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "GeneralFunctions.m"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "QuantityFunctions.m"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "OpticsFunctions.m"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "DataFunctions.m"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "PlotFunctions.m"}]}], "Input",
 CellChangeTimes->{{3.947857511153677*^9, 3.94785751116963*^9}, {
  3.9478585039957314`*^9, 3.947858511419843*^9}, {3.947858583250186*^9, 
  3.947858590277558*^9}, {3.9479563771309223`*^9, 3.947956385897948*^9}, {
  3.9484528371872168`*^9, 3.948452841672*^9}, {3.948473163834116*^9, 
  3.9484731755010166`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"abd133ed-f7dd-4261-9d44-7964b08ec3f8"],

Cell[CellGroupData[{

Cell["Functions (run this whole section)", "Subsection",
 CellChangeTimes->{{3.905349324490597*^9, 3.905349332634765*^9}, {
  3.951858463448866*^9, 
  3.9518584761299896`*^9}},ExpressionUUID->"15b8c5c0-7ec1-45a5-a386-\
c19f8f6d1053"],

Cell[BoxData[
 RowBox[{
  RowBox[{"inches", "=", "2.54"}], ";"}]], "Input",
 CellChangeTimes->{{3.906540976896587*^9, 3.9065409980395308`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"014a68db-75fd-4942-9915-b1e93ff5eaa2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SnellsAngle", "[", 
   RowBox[{"\[Theta]1_", ",", "n1_", ",", "n2_"}], "]"}], ":=", 
  RowBox[{"ArcSin", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n1", "/", "n2"}], ")"}], 
    RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.905332624357787*^9, 3.9053327795312157`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"aab7163a-2cb0-4746-ab7e-c266da2bcfc4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ticks", "[", 
   RowBox[{"min_", ",", "max_"}], "]"}], ":=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Style", "[", 
         RowBox[{"i", ",", "12"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{".04", ",", "0"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Ceiling", "[", "min", "]"}], ",", 
        RowBox[{"Floor", "[", "max", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"j", "+", ".5"}], ",", ",", 
        RowBox[{"{", 
         RowBox[{".02", ",", "0"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"Round", "[", "min", "]"}], ",", 
        RowBox[{"Round", "[", 
         RowBox[{"max", "-", "1"}], "]"}], ",", "1"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.905782367882402*^9, 3.905782502595088*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"dc84118d-0222-4e5f-ab57-d992d2f63bc2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tickIntegerDegrees", "[", 
    RowBox[{"min_", ",", "max_"}], "]"}], ":=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<\[Degree]\>\""}], 
           ",", "10"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{".02", ",", "0"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Round", "[", 
          RowBox[{"min", ",", "2"}], "]"}], ",", 
         RowBox[{"Round", "[", 
          RowBox[{"max", ",", "2"}], "]"}], ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"j", ",", ",", 
         RowBox[{"{", 
          RowBox[{".01", ",", "0"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{"min", ",", "2"}], "]"}], "-", "1"}], ",", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{"max", ",", "2"}], "]"}], "+", "1"}], ",", "2"}], "}"}]}], 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9057822609085426`*^9, 3.905782277399028*^9}, {
   3.905782450441703*^9, 3.9057824570573006`*^9}, {3.905782493369506*^9, 
   3.905782497863099*^9}, {3.905782531491846*^9, 3.905782533504201*^9}, {
   3.9057825858647795`*^9, 3.9057825894856434`*^9}, {3.905782631594137*^9, 
   3.9057826677062855`*^9}, 3.905782736137574*^9, {3.9057827739804697`*^9, 
   3.905782782590764*^9}, {3.905782847043353*^9, 3.9057828505141344`*^9}, {
   3.9057829182135506`*^9, 3.9057829234683123`*^9}, {3.905782954964019*^9, 
   3.905782956796487*^9}, {3.9057832725978446`*^9, 3.9057832870215273`*^9}, {
   3.905783359050668*^9, 3.905783361004348*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"8b034e8e-4367-4d7f-9cf5-c7219b8fa8b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tick5Degrees", "[", 
   RowBox[{"min_", ",", "max_"}], "]"}], ":=", 
  RowBox[{"Join", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<\[Degree]\>\""}], 
          ",", "10"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{".02", ",", "0"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Round", "[", 
         RowBox[{"min", ",", "5"}], "]"}], ",", 
        RowBox[{"Round", "[", 
         RowBox[{"max", ",", "5"}], "]"}], ",", "5"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"j", ",", ",", 
        RowBox[{"{", 
         RowBox[{".01", ",", "0"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{"min", ",", "1"}], "]"}], "-", "1"}], ",", 
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{"max", ",", "1"}], "]"}], "+", "1"}], ",", "1"}], "}"}]}], 
     "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.906215506190312*^9, 3.906215533440218*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"6ce33d65-b235-444c-b716-bef9e8901171"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tickDegrees", "[", 
    RowBox[{"min_", ",", "max_", ",", "majorTicks_", ",", "minorTicks_"}], 
    "]"}], ":=", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<\[Degree]\>\""}], 
           ",", "10"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{".02", ",", "0"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"min", ",", "majorTicks"}], "]"}], ",", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"max", ",", "majorTicks"}], "]"}], ",", "majorTicks"}], 
        "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"j", ",", ",", 
         RowBox[{"{", 
          RowBox[{".01", ",", "0"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"min", ",", "minorTicks"}], "]"}], ",", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"max", ",", "minorTicks"}], "]"}], ",", "minorTicks"}], 
        "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.9061969607503386`*^9, {3.9061970083150797`*^9, 3.906197102839122*^9}, {
   3.9062155457224684`*^9, 3.906215575923565*^9}, {3.9062179890052986`*^9, 
   3.906217993447772*^9}, 3.9062180390418425`*^9, {3.9062363958397756`*^9, 
   3.9062364861902633`*^9}, {3.9062365384131203`*^9, 3.90623654526723*^9}, 
   3.9062369003053427`*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"61d3e7ee-87b8-4824-9c18-48fd96c57f4e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tickDegreesBothSides", "[", 
    RowBox[{"min_", ",", "max_", ",", "majorTicks_", ",", "minorTicks_"}], 
    "]"}], ":=", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<\[Degree]\>\""}], 
           ",", "10"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{".02", ",", 
           RowBox[{"-", ".02"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"min", ",", "majorTicks"}], "]"}], ",", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"max", ",", "majorTicks"}], "]"}], ",", "majorTicks"}], 
        "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"j", ",", ",", 
         RowBox[{"{", 
          RowBox[{".01", ",", 
           RowBox[{"-", ".01"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"min", ",", "minorTicks"}], "]"}], ",", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"max", ",", "minorTicks"}], "]"}], ",", "minorTicks"}], 
        "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9062178805658407`*^9, 3.906217960979219*^9}, {
   3.9062180227081733`*^9, 3.906218065510558*^9}, {3.9062365671431236`*^9, 
   3.906236613403158*^9}, 3.9062368936897345`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"c01e2efe-ea96-429e-ba0d-1e7ed0da08a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tickDivDegreesBothSides", "[", 
    RowBox[{"min_", ",", "max_", ",", "majorTicks_", ",", 
     RowBox[{"minorDiv_", "?", "IntegerQ"}], ",", 
     RowBox[{"midDiv_", "?", "IntegerQ"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<\[Degree]\>\""}], 
           ",", "10"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{".02", ",", "0"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"min", ",", "majorTicks"}], "]"}], ",", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"max", ",", "majorTicks"}], "]"}], ",", "majorTicks"}], 
        "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"minorDiv", ">", "0"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"j", ",", ",", 
           RowBox[{"{", 
            RowBox[{".01", ",", "0"}], "}"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Floor", "[", 
            RowBox[{"min", ",", "majorTicks"}], "]"}], ",", 
           RowBox[{"Ceiling", "[", 
            RowBox[{"max", ",", "majorTicks"}], "]"}], ",", 
           FractionBox["majorTicks", 
            RowBox[{"minorDiv", "+", "1"}]]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"midDiv", ">", "0"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"j", ",", ",", 
           RowBox[{"{", 
            RowBox[{".015", ",", "0"}], "}"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Floor", "[", 
            RowBox[{"min", ",", "majorTicks"}], "]"}], ",", 
           RowBox[{"Ceiling", "[", 
            RowBox[{"max", ",", "majorTicks"}], "]"}], ",", 
           FractionBox["majorTicks", 
            RowBox[{"midDiv", "+", "1"}]]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.9061969607503386`*^9, {3.9061970083150797`*^9, 3.906197102839122*^9}, {
   3.9062155457224684`*^9, 3.906215575923565*^9}, {3.9062179890052986`*^9, 
   3.906217993447772*^9}, 3.9062180390418425`*^9, {3.9062362794630985`*^9, 
   3.906236286314664*^9}, {3.906236624744563*^9, 3.906236625382923*^9}, {
   3.906236687459498*^9, 3.9062366995800695`*^9}, {3.9062368497717147`*^9, 
   3.906236851493142*^9}, 3.9062368905268517`*^9, {3.9062378735810375`*^9, 
   3.9062378873737855`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"210c91b7-f728-47c6-86da-4e00f6ee6af0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tickDivDegreesBothSides", "[", 
    RowBox[{"min_", ",", "max_", ",", "majorTicks_", ",", 
     RowBox[{"minorDiv_", "?", "IntegerQ"}], ",", 
     RowBox[{"midDiv_", "?", "IntegerQ"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<\[Degree]\>\""}], 
           ",", "10"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{".02", ",", 
           RowBox[{"-", ".02"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"min", ",", "majorTicks"}], "]"}], ",", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"max", ",", "majorTicks"}], "]"}], ",", "majorTicks"}], 
        "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"minorDiv", ">", "0"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"j", ",", ",", 
           RowBox[{"{", 
            RowBox[{".01", ",", 
             RowBox[{"-", ".01"}]}], "}"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Floor", "[", 
            RowBox[{"min", ",", "majorTicks"}], "]"}], ",", 
           RowBox[{"Ceiling", "[", 
            RowBox[{"max", ",", "majorTicks"}], "]"}], ",", 
           FractionBox["majorTicks", 
            RowBox[{"minorDiv", "+", "1"}]]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"midDiv", ">", "0"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"j", ",", ",", 
           RowBox[{"{", 
            RowBox[{".015", ",", 
             RowBox[{"-", ".015"}]}], "}"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Floor", "[", 
            RowBox[{"min", ",", "majorTicks"}], "]"}], ",", 
           RowBox[{"Ceiling", "[", 
            RowBox[{"max", ",", "majorTicks"}], "]"}], ",", 
           FractionBox["majorTicks", 
            RowBox[{"midDiv", "+", "1"}]]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9062178805658407`*^9, 3.906217960979219*^9}, {
   3.9062180227081733`*^9, 3.906218065510558*^9}, {3.9062367073630147`*^9, 
   3.9062367205046024`*^9}, {3.906236755958864*^9, 3.906236761267945*^9}, {
   3.906236795800462*^9, 3.9062368451085176`*^9}, {3.906236878511648*^9, 
   3.9062368874495926`*^9}, 3.9062369343242216`*^9, {3.906237016089468*^9, 
   3.906237061908734*^9}, 3.9062370956660285`*^9, 3.906237174540765*^9, {
   3.9062375067853394`*^9, 3.9062375086503377`*^9}, {3.906237608171631*^9, 
   3.9062376213523936`*^9}, {3.906237678988266*^9, 3.9062377073978233`*^9}, {
   3.9062378360469103`*^9, 3.9062378576790957`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"26402c9c-d873-4b64-abfd-149730ce16c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Function", " ", "to", " ", "find", " ", "intersection", " ", "points", 
    " ", "of", " ", "line", " ", "and", " ", "ellipse"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"findEllipseIntersection", "[", 
     RowBox[{"point_", ",", "a_", ",", "b_", ",", "center_", ",", 
      RowBox[{"r_", ":", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x", ",", "y", ",", "xc", ",", "yc", ",", "t", ",", "X", ",", "Y", ",",
         "tSolutions", ",", "intersectionPoints"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Extract", " ", "coordinates"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], "=", "point"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xc", ",", "yc"}], "}"}], "=", "center"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Parameterize", " ", "the", " ", "line"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"X", "[", "t_", "]"}], ":=", 
        RowBox[{"xc", "+", 
         RowBox[{"t", " ", 
          RowBox[{"(", 
           RowBox[{"x", "-", "xc"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Y", "[", "t_", "]"}], ":=", 
        RowBox[{"yc", "+", 
         RowBox[{"t", " ", 
          RowBox[{"(", 
           RowBox[{"y", "-", "yc"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Solve", " ", "for", " ", "t", " ", "using", " ", "the", " ", 
         "ellipse", " ", "equation"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"tSolutions", "=", 
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{
                RowBox[{"X", "[", "t", "]"}], "-", "xc"}], "a"], ")"}], "2"], 
            "+", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{
                RowBox[{"Y", "[", "t", "]"}], "-", "yc"}], "b"], ")"}], 
             "2"]}], "==", 
           SuperscriptBox["r", "2"]}], ",", "t"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Compute", " ", "intersection", " ", "points"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"intersectionPoints", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"X", "[", "#", "]"}], ",", 
            RowBox[{"Y", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"t", "/.", " ", "tSolutions"}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", "intersectionPoints"}]}], "\[IndentingNewLine]",
      "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "distanceToEllipseIntersection", "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"distanceToEllipseIntersection", "[", 
     RowBox[{
     "point_", ",", "ratio_", ",", "center_", ",", "side_", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"radius", "->", "1"}], ",", 
          RowBox[{"threshold", "->", 
           RowBox[{"1", "/", "100"}]}]}], "}"}], "]"}]}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"distanceToEllipseIntersection", "[", 
     RowBox[{"point", ",", "1", ",", 
      SuperscriptBox["ratio", 
       RowBox[{"-", "1"}]], ",", "center", ",", "side", ",", "opts"}], 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Function", " ", "to", " ", "compute", " ", "distance", " ", "to", " ", 
     "left", " ", "or", " ", "right", " ", "intersection"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"distanceToEllipseIntersection", "[", 
     RowBox[{
     "point_", ",", "a_", ",", "b_", ",", "center_", ",", "side_", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"radius", "->", "1"}], ",", 
          RowBox[{"threshold", "->", 
           RowBox[{"1", "/", "100"}]}]}], "}"}], "]"}]}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "p", ",", "r", ",", "xc", ",", "yc", ",", "thrsh", ",", 
        "intersectionPoints", ",", "selectedPoint"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Extract", " ", "ellipse", " ", "center"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xc", ",", "yc"}], "}"}], "=", "center"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p", "=", "point"}], ";", "\[IndentingNewLine]", 
       RowBox[{"r", "=", 
        RowBox[{"OptionValue", "[", "radius", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "If", " ", "point", " ", "is", " ", "too", " ", "close", " ", "to", 
         " ", "center", " ", "move", " ", "it", " ", "further", " ", "away", 
         " ", "for", " ", "finding", " ", "intersection", " ", "points"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"thrsh", "=", 
        RowBox[{"OptionValue", "[", "threshold", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", "xc"}], "]"}], "<", 
          RowBox[{"a", " ", "r", " ", "thrsh"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"p", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+=", 
          RowBox[{
           RowBox[{"Sign", "[", 
            RowBox[{
             RowBox[{"p", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", "xc"}], "]"}], "a", " ", 
           "r", " ", "thrsh"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Find", " ", "all", " ", "intersection", " ", "points"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"intersectionPoints", "=", 
        RowBox[{"findEllipseIntersection", "[", 
         RowBox[{"p", ",", "a", ",", "b", ",", "center", ",", "r"}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Select", " ", "left", " ", "or", " ", "right", " ", "intersection"}],
         "*)"}], "\[IndentingNewLine]", 
       RowBox[{"selectedPoint", "=", 
        RowBox[{"Switch", "[", 
         RowBox[{"side", ",", "\[IndentingNewLine]", "1", ",", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"intersectionPoints", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ">=", "xc"}], "&"}]}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"-", "1"}], ",", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"intersectionPoints", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "<=", "xc"}], "&"}]}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          "\"\<Right\>\"", ",", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"intersectionPoints", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ">", "xc"}], "&"}]}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"(*", 
           RowBox[{"x", ">", "xc"}], "*)"}], "\[IndentingNewLine]", 
          "\"\<Left\>\"", ",", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"intersectionPoints", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "<", "xc"}], "&"}]}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"(*", 
           RowBox[{"x", "<", "xc"}], "*)"}], "\[IndentingNewLine]", 
          "\"\<Top\>\"", ",", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"intersectionPoints", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ">", "yc"}], "&"}]}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"(*", 
           RowBox[{"y", ">", "yc"}], "*)"}], "\[IndentingNewLine]", 
          "\"\<Bottom\>\"", ",", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"intersectionPoints", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "<", "yc"}], "&"}]}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"(*", 
           RowBox[{"y", "<", "yc"}], "*)"}], "_", ",", "\[IndentingNewLine]", 
          RowBox[{"Missing", "[", "\"\<InvalidSide\>\"", "]"}]}], 
         RowBox[{"(*", 
          RowBox[{"Invalid", " ", "side"}], "*)"}], "\[IndentingNewLine]", 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Compute", " ", "distance", " ", "if", " ", "a", " ", "valid", " ", 
         "point", " ", "was", " ", "selected"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"selectedPoint", "===", 
          RowBox[{"Missing", "[", "\"\<InvalidSide\>\"", "]"}]}], ",", 
         "\[IndentingNewLine]", "selectedPoint", 
         RowBox[{"(*", 
          RowBox[{
          "Return", " ", "error", " ", "if", " ", "side", " ", "is", " ", 
           "invalid"}], "*)"}], ",", "\[IndentingNewLine]", 
         RowBox[{"EuclideanDistance", "[", 
          RowBox[{"point", ",", "selectedPoint"}], "]"}]}], " ", 
        RowBox[{"(*", 
         RowBox[{"Compute", " ", "distance"}], "*)"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.9459449820760584`*^9, 3.9459449821096516`*^9}, {
   3.9459451168169594`*^9, 3.9459452386254973`*^9}, {3.945945270263591*^9, 
   3.945945347854768*^9}, {3.945945383553463*^9, 3.9459454193932514`*^9}, {
   3.945945536279623*^9, 3.9459455822914047`*^9}, {3.9459457495020213`*^9, 
   3.945945754810993*^9}, {3.945945825871629*^9, 3.945946264362095*^9}, {
   3.9459463011320767`*^9, 3.9459465653542213`*^9}, {3.945946660711478*^9, 
   3.945946778172632*^9}, {3.945946814212*^9, 3.9459468238794622`*^9}, {
   3.9459475054633446`*^9, 3.9459475099329042`*^9}, {3.945948709858412*^9, 
   3.945948775008059*^9}, {3.945953288790324*^9, 3.945953300773568*^9}, {
   3.9461210473131905`*^9, 3.946121071710631*^9}, {3.94612115009758*^9, 
   3.9461211678008585`*^9}, {3.946121220455583*^9, 3.946121275492903*^9}, {
   3.9461213194496913`*^9, 3.9461213222342277`*^9}, {3.946121365617391*^9, 
   3.9461213768989987`*^9}, 3.9465958826086283`*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"bd562b65-3504-4d52-ac47-d104af03b32f"]
}, Closed]],

Cell[CellGroupData[{

Cell["SPDC Phase matching", "Subsection",
 CellChangeTimes->{{3.9052491092181067`*^9, 3.9052491207144585`*^9}, {
  3.905591769868561*^9, 
  3.9055917699765987`*^9}},ExpressionUUID->"0424b37f-a75e-40f1-b597-\
479ffe9c32e4"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3U9oU1seB/C0igylaHAtJeMfBMEady6EZlYyI0J4+qi6Ma/olHHhBN+I
iNCCGxcBwwP3WdlNFwF3XdgsXKSDaEEUFw22VVGKisQYa2tt3/fdHx7Ou0n6
YnJzz70n3w9YkmiTY/K7v/zOueee8/eR//70795IJPLr3/Djp1+u/uPy5V+u
nYzizs+Xfv3P6KUL5/956X8XRi9cPjKyBQ/+hj8V/Pnj9gYRERERERERERER
EREREREREREREREREREREVE4raysrK2tmW4FkcdSqVQ2mzXdCqIWzc7OFuoZ
Hx+PxWJzc3OmG0j0w1BsJJPJWD0RRzqdNt1GIs/k83nENksRssyNGzeKxaLp
VhAREZHlKpXK5ORkLpc7f/787Oys6eYQeQPBjKhOJpORSAQdRtPNIfJSOp3m
apxkn3g8nkgkTLeCyEsfPnyIRqM8EUOWQY2NOoQ9R7IMcnUsFkPeVo/MOgw2
iah9qK5RY6u7SOCI6nw+Pz09bbBVRO2Yn59HHSJzQpC0C4WC3EAOHx4eNtw4
olYhMyOwEc8S1aogQd5mxqbwGh8fl54jJ/KRTVByoMBGeLO3SNZAgR2NRlOp
FIoQhDdu6GMjRCGlCmy5i9hGAjfaIiIPIEXrI9i4iwQutxHtHz9+dP37ubm5
xcVFX5tI9OOSyaQ+gq0Hdi6X0wMbXUv8LUoXHAUoyH1uJ1HzlpeXUYfoUYrQ
lThH9Kq+ZLVaTafTiURCEjt+IuYNNJeoOdJzVAX2hhO0CGA8gtDF38qDqD3k
WnU8jpocqbvNDiYOmXPnzuE5x8bGhoeH0Yb2n5NIt7KyUvdBfQGoiYkJxN78
dz/6EohY+UUcFKOjo3v27Ont7UVUo7afnp7OZDKyyANeAt8dDG/yDQJSFd7N
QD2T1Kj1SZS+vj7kfxXDSOD4Ffkr/GOGN/nj7du3emCr+SSNyCTYRoaGhhYW
Fmp/CyldLk8TDG/yAWIVSTXnQAL/y5CrzdLi1KlTm/+uHt5SnHj53yBqz61b
t2qjGodGk7+O8FbFCbuWFAQomJFyd+zY4YpqPPijwSlPpcKbV66REa4+4LFj
x1RUt3OaXn9aZm/yk1QOiDpVGMuooHpk885mM1zZu3tq7wcPHoyNjZluRddB
xKp4qx2pQ08TD3o4G9b1paCPGdpKFhBoPzNQk5aWlhDSkpMlpGvP3SwvLz97
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
    "], {{0, 87.}, {145.79999999999998`, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{120., 120.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{145.79999999999998`, 87.},
  PlotRange->{{0, 145.79999999999998`}, {0, 87.}}]], "Text",
 CellChangeTimes->{
  3.905592191643011*^9, {3.9055923191057906`*^9, 3.9055923235087585`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"7972487b-a4cc-4a20-91db-cc2968284825"],

Cell[BoxData[
 GraphicsBox[{
   TagBox[RasterBox[CompressedData["
1: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
wWCsWbMGntvu3btrGBhnzpyB45s2barxEXjbkydPQH2+fv0KOquiojIH9EXU
1NDK0tJSUAcqSw/cxePHj+synyoq0OvXyMgI+5KgkqtX4xkK8V6ADDe4fPny
2rz+X74fjIfk5GT+rjV+/vz5N1Gk/wJTYfz48fDlgqkWwG3oBdFKMeeSRyD0
bCv33RVN5ElwME5cGRcntgZzddjUyrKysgMHDsjLy0PvUSx8587X978pYEEk
ZmeDnXZPVQ1srK+84eKzoHdDhw5t06ZNjWS5TCZz27ZtzZo1u3TpUo2PQH8L
/rubmxuq2iIKXBVdXV1uy843amjl69evmzdvTmXpMTMzqzVrU3k5VsnFi7FE
qqig5cuRv7+YqyQF1PktVYi2GODbikRrQKOrL5jlbuKSaKWYc9zlFfRs+x1F
sHQdY26O2rbFszCim5FnHza18uHDh/DOv//+u3qcvPAIC8NCCXIpolz0Z1z9
hsyy2W7NzQKZqKgoJSUlDQ2NGsdpNNrUqVPB/IiNja3xr4MHD2pra1NDmuDO
d+7cGaSTJUbZ2dkgW6wwy5SUFH9/f0FtplyN6loJl1NXV6dGXxUVFePj43/x
AShwTAxeGyslhSPDDQ1RerpEGJAUcI+HDh0yh+YsUpYsWVI9JYJwAGWcOXMm
FbIFgGhyt2qJaKWYs+XkI7VZNhfusBXAxmfAk50xAweibN4sgqtzDjtamZ6e
Dm5Rhw4d+LZtBKeAk96lC+5v2QtK5Dv3X0YMNbRdtsudi8+C/yUrK6uvr1/j
OGhcly5d+vfvX8NPj46O7tGjx/z5862+o6CgUP1toFmgUyyjxdXVdcqUKTU2
kBIELK0E1d6/fz/8Dd0gaD0cqRmoWVqKfcmFC3HinQ4dsC/p4yMRpmN1wPE/
d+6csbGxaIthYWEh5MiuysrK+/fvgwlEDbCDYkpLS5uYmHARjku0UsxZbOkG
PdujN1EiuDZUp4kTsSF99KgIrs459WoleDHgToJn5OHhIbKQPBoNL1YNDES8
JQ3jmnehScNmn56x9hIXuYUfPXokIyNTwz2BJ+ng4ADHN2zYUP2pUpPCBgYG
7tUASe3VqxcrawH0PNW18ubNm0LWSnAxunXrRnkc4H0UVd+MG76pkBAsjqCS
f/6JFizAX5w4rQThiBs3bvxs5AiZPXv2gFwK84olJSXgzEKN7d27N3zFcnJy
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
jJmZGQyGFy9eBEWuXbt25cqVmZmZIFY4aEGUYE8ejyfdHoWQI0wW7/qjqAXb
vKTnDM3PPUnKLGnJKVkWC5s2Dd9q8ddfeF44BaAQV8LB6eqKX3Lt0gVfzyN7
UCkSS7LyK0+4vtJY7gzv4dyNly7cDEHrXcmlxbkIHj16BAPmy5cvFdErBJVp
Tu7011FlBlah+lZhr6JKm7/aB6ynpqb25r+lDMFl169fly42Ky4uhklav379
6nPIw//u2bMHhjuYwoH4YPL2+++/l5aWQlBZUFDA4XBWrFihra1tZGRU2GAP
AmhUQ0ODR2w6tfZGYWm1he3TycucISaCfz3uhjHZPJnX/MBhNnAgrsv//Q/L
z5d7JxXiynv38FOvIEp45XLZKn7C28PmCnyex/616gK8bzDT2HnqgfyrbCNk
B7kSISvNcaVIXBuTXrXFNgYCzKv+eTxBs2KKrKys0aNHF/53Yx001L9/f0tL
S2lOjISEBBUVFXt7+/qnDB48WFdX19nZ+eDBgyYmJvHx8fUDMhjT3d19yJAh
ISEh9XeCXrW0tExNTdESbkXDF4heh2WsP3RbVd9ugqHDyn23XtLS4U4ZXkIo
xJ4+xQYNwpfFzp8Pn7d8e6gQVz55ggeVhoay1nEWiSRB0TkbDt8FRY7Vs1tm
dvPx2xRQp5y7h2gRyJUIWWl+Ta6sIpbphQQtc5qtb0ZzVvvcvn1bR0enpqam
/h6RSLR06dJhw4bVJ8RISUkBV5qbm0t/hW706tXLx8cnNjY2OzubzWY3NCCT
yVy7du2oUaPSGhR7otPpAwcO9PT0bN6fi2gV8GGUVbLdb4dqbrgEgZLGchdL
R/+EdLq4+dUV4QO9efOfXSTbt8s3/Z08XSkW4/W2Kirwc7Dg94KC5j9VIqlN
zSk74fZKGk5OX+Nme/V9USkTTeeoA3IlQlZkql/J4YmsvfHVPlvtYvNKOU18
9yHc27Zt25EjRyQNUmcHBwf36NGj4Z2hoaEgRwgzpb8+fPiwW7du0v1NLBYL
7g8KCpLe5nA4VlZWEFdqaGjcunWrvLxcWik7Kirqm2++efXqFYjVy8ursrKy
pe8EorlIamvp5TVmNk8guoSI6Y+ljibWDwvo1c01Jnz6/v54ceTYWFyd8qu2
IzdXQq+8vfHU6OvX4xntmu04sURSWsk64vJCfZkTvDPjDezXHPTNLWLIMJdA
EAJyJUJWZK31zOWLr7/IX3QwdAOe26fqUzWDsrKyfvvtt+fPn9ffIxaLV65c
2a9fv4brxyD2BDnWn4MtLCz8+++/1dXVIX5csmTJ0aNHeTwel8vdtGnTvHnz
Dh8+DLdBwRBaGhkZgXnhKRkZGRCoTpkyBV787Nmz6KolYQiE4oCQ9O0n70N0
CdHTNGO3Y64BYfH5zUr1A1FbYSHuoMxMbNs2vFCyPIwpH1dWVeHFtr7+Gvvi
C2zBAqx5RWa5fGFsStFZz8BZ6y5KL01uPHz3ydtkHh9tCaEiyJUIWZHVlVjd
5ctXUaVLDoeDMV9FlTWqS19fX3BlcXFx/T0QGKqpqX333Xdnzpxx+Bc9Pb1O
nTqBMesfRqfT3dzcnJyckpOTpXEr+BEe4OfnJ10um5eX5+zsHB0dXf8UiD1t
bGwgtGwYwyKIQSAUvQ7LMj7gAzEmOGLiEsfdZx69i8zmcIWfj8ZYLGzxYvxk
7PffwxGDtXoNc2tdCT0uKsI2bcJX8sDPwoWfPfVaW3cZNzw+/6Cjv7qRE7wD
4w3tl+y98ehNEto4SWWQKxGy0gJXYnVXZGIyqladjNSzDL36PI//39U+EEJC
YHjw4MGGyQFAgiBKCAm3/cvGjRuHDBnSp08flM9f2ams5rwIStt81G+8Ab55
cMoKF7DntUdRFdWcpp4GcxsaDVNXx/ct9uuH7dnTmm3+WOtdCRGltjZuSeiP
mRm+6rVJ37O5Ar+AhA2H70xddWGsnq2qnh381Y8Ck0orWejSJMVBrkTISstc
idXNqIsreHuc47XMaXa3MxomK0hLSxs3blxiYmLDx/v7+/fu3fvQoUPCf8nK
ygJXampqMhgoGWZbgMcXhsXnbT1+729jV1V9u3EGdrPXX3S4/j4+rZjF4X/y
ml1+PrZoEb4vo3NnbMoULD29xR1ooSvBa2DJmho8sDU3xwYPxi5fxj5RuxBm
iaDI5KzSS3fCtLd4QhQJivxzpcv6Q3deh2VCLIksqRQgVyJkpcWulFLNFp73
zZhjGrzbOb6EwYdxAiQ4b968j8tWOjo69uzZ08/PT/orDCk+Pj7du3d3c3ND
507bEuDErIJKa483oJKxurbSE7N6u65deRCZnlve+B4TEJO9Pfbtt1i3bnik
CYcR3CO7dFriSrEYv1o6cyZuSTgOq6vx866NNS0UinMKGbf945eYXp+01HFM
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
EAgEAoFAIBAIBAKBQCAQCAQCgWi//H/+m/7K
     "], {{0, 192.}, {367.2, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{120., 120.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False], InsetBox[
    TemplateBox[{
      TemplateBox[{
        GraphicsBox[{}, {
         DefaultBaseStyle -> {"CanvasGraphics"}, ImageSize -> Medium, 
          PlotRange -> 1}]}, "CanvasFrame"]},
     "Canvas"], Scaled[{0.5, 0.5}], Center]},
  DefaultBaseStyle->"ImageGraphics",
  ImageMarkers->{
    Rectangle[{145., 156.00000000000006`}, {161.00000000000003`, 
     166.00000000000006`}], 
    Rectangle[{149.00000000000003`, 33.00000000000002}, {164., 
     39.999999999999986`}]},
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSize->Automatic,
  ImageSizeRaw->{367.2, 192.},
  PlotRange->{{0., 367.2}, {0., 192.}},
  PlotRangePadding->Automatic]], "Text",
 CellChangeTimes->{
  3.905249825266344*^9, {3.9052499132807817`*^9, 3.9052499194247665`*^9}, {
   3.905249971930716*^9, 3.905249981754655*^9}, {3.905250200171795*^9, 
   3.9052502209985013`*^9}, {3.905250258190318*^9, 3.9052502617458005`*^9}, 
   3.905250869617489*^9, 3.90559232985651*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"928e620d-3bd3-4968-afc2-e1af091bf51b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnX9MG2eax+fu/piTrCprnaz9AyESIRRVFqJV/AcCRTlQhVVFssIed1Yk
rHTrIwtR6AVvSBRSYZDK7ro9UbU1t2yqmFR006N4D3YT8oNiBWQlbJNAzg0r
p6hulBhtLFbrZpH/mP+87/vO2J6xx/bYYAfC9yO1weN533nnfZ73eZ/n9czz
7nv7v35y/B85jvv5P5P//eSnZ5scjp+e+7cfkQ///s7Pu372Tsd/vvnO6Y6f
dTjq3/4ncrCT/DfyDxxH/44DAAAAAAAAAAAAAAAAAGD78cMPP9wCAIDtzYMH
DzLNFznOAQDA9mbv3r2q3tcYAABsb6ampkofjAIAAAAAAAAAAAAAAAAAAAAA
AEWIrj1RZy0qvOjG7VRi65vuSSKX9VgBx0tAcZeKree73dh6ue5g25AcZbI7
l428LR1qZdSQ/LJWIX/7hOi61mpXXHWcod4xMjn58dFKjuMaz0xOTo501uq4
OtdKoS0DEkJ4wqonvWkeCT5ZvuI8XKHbc8AxG9Fewc1OHcc1fBLSerwEFHWp
0CcNHKfrvKn+7dripe56Uqttegvat7OILQ2ZeI7jm0ZTHRp7PGImRz56uJXW
q3waklvW2cjZvuerM/9t2cdptz3EfFnGo9JfXFKzouMWmK/NoOjN+H1nNVHd
lotPNZcnDlxiZhMCLpN9OvN4qSnqUtSnyDW5sn7ZheYroREcb3IFBNmxrRhm
kWlbS7Ka8mlIPlmrk69907YCzFc0cDvArJdywAnff/V/N75J+rtSNCS2VYhG
Y2ptZ94wQk4RpfliMkl9ZN2Z1lP02Fo0xvqWIbrQQvhaFzF9bWPJAuLxZHzK
jirkk00QqZMScUvynFSdimIKL54VT0g8FR6vr6+nxUWK4FBRKr7LzZfRaqMu
mME2HUkek49UFcGxQ+k2QimKpQ+b9Jzx/IJM/kRsqdh0PZaMVBN1p0tFdi3x
pJiqUDMbI5e1ovWpy6+tr6tqW7Z7Lsh8pUgbcBEvDX+MQwGxmRNtvGX8afiu
x3Gwgq8+0NjY3LxPx/EVdiYJITB65Ihzbnmuz8TrGoYDMGHK3gy5G2lg7g7R
nmqpbfUsB++MtFbsOeT0s+5b7K9tGLodpN1HigjheXe7FL7H1hfOGyXz9SyU
Oh6P+XuJWasZWGIXEOUTyS0Iwd9bKbVJCF8wi1oSC/roWkFl0xGz2UJky1c4
fIKiCVS8w4f2tV5YXva0GqSxR11CMhLNnkg8MGQ02LxhakWDE1Q9pNtWKbXL
zRfpTeIoGThOb/VGUsfoX2qCi8w6aht655YnbPsaXLdFA5DRqWT4j7Vxkvn6
q0xsQthjIRJqmxB9jqUBY3XfokArbW73sPKJ0Zsi4jEnbEdsvkdUFiF890vn
4Qq+rqXN3GYhletaLobSZR2Z7txHm0qar5PcS/FOf9zrjwteK28aWqJWVKFW
aqW2ynxJEQ8dcuSys13VXbO0eqKrotLSHh8iJfTdPnpmZd8i66VpG+myplHt
UdJLSqo3hehDoiocv9/hiwq+bgMxUNIENdul5wzdxFjM2PnKXr/ADnWLQ99r
TQhRMeBlx0WbWO28T//2dTP55BGEvKqUlrA6xevHF/sqmUSVl6LrFeJftFSi
UlZb3dBo935pMFKYfoiXUC21280Xnav6qhMxZNJ8qQmOjj/x2+i4hRio4xdv
BKJqnaoY8DKxMQXjW7+g0dXT0SY6lKNftPLyxSJJ1klkVckkJRv0rCmSLFOy
Zstg7C9aKlFpdNqm5/Q2t6vJNJScSGXtUy+1VeYrNT5S1kupfqRPOM40/Hty
G/vb+gcpjtbXq6pqzvjUrrCbEHuz+o0OQo9rzCcuz/q69XLR0I9UaqHRJp7T
1XZOBJOeeEqIygEvFy7VxYR8TNSMBfIIQt18ZdFZ+WESS6zHiB2+cqJOPlLY
QJT0WuUSaqVgvpKeK5m5AtIxVcHR/pdsmqzXVDpVOeDln6gFZPYr5G6i/1Db
oT/Yxa4zaG+qqqqyfKpYRFdXhSxaITtMfEDiGsYe3/nIopeHcOPUAZSmxsxL
qJbaMvMlmm+9zTtuMySsdOZgMg2P2OBwpaPSm/G4XCOTJ7FzIn4X8c9JMH54
VJyntJgvST5d3vFWU4ZvlLVRxZgvYdXb2XzENR/2KnWLOmvJSCjjEmqlYL4Y
YmRlMJkq2TFVwUVn7AbRO6dy1lm9zGlS6dTs5kv0QBrd085Xmc8v93JUKdZ8
UQU+0kzm3yWlfJmzRlz0gPrallqprTNfiZ/M+FfFECWu4n2R0UiVmK28SERm
P/3dd4Ve/iVD3Xw9GjbJ9ZR2HP107/JlGlWIq/TpAUEO8yVNrzwvhvjxfIIo
0nzRkJcTQw755YkT0dDQ10fm19RatKwC9VIwXxKSCyb2SxbBxeZO1tUfO31u
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
/Q==
    "], {{0, 62.4}, {243., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{120., 120.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{287.4, Automatic},
  ImageSizeRaw->{243., 62.4},
  PlotRange->{{0, 243.}, {0, 62.4}}]], "Text",
 CellChangeTimes->{3.9055923324745455`*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"d1ccd89c-39ed-43a3-97f4-763bac442ae0"],

Cell[TextData[{
 "\nPhase matching conditions of types I & II for BBO (negative uniaxial \
birefringence)\n",
 StyleBox["Energy Conservation",
  FontVariations->{"Underline"->True}],
 "\n\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Omega]", "p"], "=", 
    RowBox[{
     SubscriptBox["\[Omega]", "s"], "+", 
     SubscriptBox["\[Omega]", "i"]}]}], TraditionalForm]],ExpressionUUID->
  "994b6024-7743-4fdc-9561-84b185faa0fa"],
 "\tor\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", 
     SubscriptBox["\[Lambda]", "p"]], "=", 
    RowBox[{
     FractionBox["1", 
      SubscriptBox["\[Lambda]", "s"]], "+", 
     FractionBox["1", 
      SubscriptBox["\[Lambda]", "i"]]}]}], TraditionalForm]],ExpressionUUID->
  "6a86415e-ee8f-4f7a-a705-498289b67d81"],
 "\n",
 StyleBox["Momentum Conservation",
  FontVariations->{"Underline"->True}],
 "\nType-I:\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["$k", "so"], 
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "so"], "]"}]}], "+", 
     RowBox[{
      SubscriptBox["$k", "io"], 
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "io"], "]"}]}]}], "=", 
    SubscriptBox["k", "pe"]}], TraditionalForm]],ExpressionUUID->
  "4fddf1c9-4b83-4058-967c-89af653baaeb"],
 "\n\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["$k", "so"], 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "so"], "]"}]}], "+", 
     RowBox[{
      SubscriptBox["$k", "io"], 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "io"], "]"}]}]}], "=", "0"}], 
   TraditionalForm]],ExpressionUUID->"93de4749-4ee7-4927-974a-8f101c9b7796"],
 " \nType-II:\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["k", "se"], 
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "se"], "]"}]}], "+", 
     RowBox[{
      SubscriptBox["k", "io"], 
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "io"], "]"}]}]}], "=", 
    SubscriptBox["k", "pe"]}], TraditionalForm]],ExpressionUUID->
  "d942677e-e645-40de-8783-08da5293e398"],
 "\n\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["k", "se"], 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "se"], "]"}]}], "+", 
     RowBox[{
      SubscriptBox["k", "io"], 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "io"], "]"}]}]}], "=", "0"}], 
   TraditionalForm]],ExpressionUUID->"e50b407f-4e06-4782-ac37-38a3543f419b"]
}], "Text",
 CellChangeTimes->{{3.905248899639176*^9, 3.9052491419681373`*^9}, {
   3.9052496622716265`*^9, 3.905249678953808*^9}, {3.9052503728762007`*^9, 
   3.9052503943002043`*^9}, {3.905250446368332*^9, 3.9052505351220474`*^9}, {
   3.905250573643091*^9, 3.9052506626951704`*^9}, {3.9052506969491863`*^9, 
   3.905250733592508*^9}, {3.905250804857523*^9, 3.9052508281053257`*^9}, {
   3.9052568968742332`*^9, 3.9052569547698846`*^9}, 3.9052571836416807`*^9, {
   3.9052572221533213`*^9, 3.905257297172929*^9}, {3.9052609030706186`*^9, 
   3.9052609363947225`*^9}, {3.9053503783886857`*^9, 3.9053503958475075`*^9}, 
   3.905596151251189*^9, {3.9092372563680315`*^9, 
   3.9092372634731445`*^9}},ExpressionUUID->"50283dea-c812-45ef-b109-\
2fab1d326514"],

Cell[CellGroupData[{

Cell["Indices of Refraction", "Subsubsection",
 CellChangeTimes->{{3.9055918059514513`*^9, 
  3.9055918161918206`*^9}},ExpressionUUID->"fdef72fe-9fb5-4aeb-91e9-\
daeeabd472fb"],

Cell["\<\
Sellmeier Equations (\[Lambda] in \[Mu]m) values from \
https://www.castech-us.com/casbbo.htm\
\>", "Text",
 CellChangeTimes->{{3.905002865097746*^9, 3.905002898155363*^9}, {
  3.9052432832980485`*^9, 
  3.905243289100171*^9}},ExpressionUUID->"36d4f8b4-0d17-4446-bed8-\
098225139a3c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["n", "o"], "[", "\[Lambda]_", "]"}], ":=", 
  SqrtBox[
   RowBox[{"2.7359", "+", 
    FractionBox["0.01878", 
     RowBox[{
      SuperscriptBox["\[Lambda]", "2"], "-", "0.01822"}]], "-", 
    RowBox[{"0.01354", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]}]]}]], "Input",
 CellChangeTimes->{{3.9050027272406883`*^9, 3.905002830074853*^9}, {
   3.9052430197379436`*^9, 3.905243040975879*^9}, 3.9052487226388445`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"8a533926-9862-432d-8cb1-0a0c64f9cc8a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["n", "o"], "[", "\[Lambda]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", ".3", ",", "1.2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.905333017736129*^9, 3.905333050980912*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"88f78fdd-96f2-44f0-a4d8-4a1b64253a57"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0Xs01GkYB/AxW5Q2qWxHW6uUjXLp4laxvtk5rG5qu6BFspUKG1IJSS6h
y1Bqu5BIhYzkskt0RSKXlBkzQpgxoshlforeH9p3/3jOcz7nPM85z3O+2n/6
bNnL5XA4brT+7w6kx9bYWIgLLs3NWnks5q4KnFhkLoTFGXXBvlwW0gDl51aW
QvQm+Wnn5rDw/jzfep2NEI1zXDm291mEDWy3cHcUIqIx2ycgi0XW+6dL44KF
CPV1dhtJY8EVXtTsKRNifyt/3l/XWdwTWHxM3SbCePU0GYlhkVAuVT2zQwSm
xcTemTqqLVrfb6cIhm4F6x5Fs9g1U+SN/SLo1A8OhkaxmBHs3d8cLMJvD8M6
p0ayOLYuaUjjFnXaiRe8UBa8D+PjUYMivCmrEc04yuLtotKZXrEN0DRqj5m7
l4WDIk7lW3wDOvkL4m/vYSF67MrGX2lAzblVIwbUr7d9lRWnNGC0Zstbq90s
KsOX5anmN0C3yl7u4c6ioPXG5kxJA9SEMyorXFnEXw7mf5gvhrOYY17lwGKd
sqnK/nwxWrLkpU/Wsmi3eD0mLxRD8FTLwJX6qJ/XkPsjMWax3zWxdixutdyU
OpeLcdK8hLuaejRP7dEmCZ3n550ssmWR7dbta86KcWa2bOg5j/5flNikzJPg
QcIF7vdWLJq9uNl36iXwjjpctdGYhXWicrOF6luouGcdqNZi0WM0/EbZsAnO
t+LTwtVYeJ3T2rRkfzPmWLmZ/vGNQNU3JTQ2qQXm6YYuEQqCvkK1IN0n78CW
8XmTugnSX+YTzeFW8FNffJ3QSiBMTk1NntqOIL3q548aCGRJV7WF19uhGlgS
cvQVQTMns2PFSiludEau3VVBMPx3rqrhSymG9CszDpQQjMWJDm/1kCHjQe+R
2IcEM2tvr0zgdGC8y7HQoYBgvaWXe/D5Drxf/NlflktwUH1jbYyBHEpKaxYc
ukeQP+vnG8ueyHFSudQx5S5BR5hm3gSXTqSeyv6p5g7BwmVF875+6USxybVj
m1MJTqlvVkRHv8dmvZt8u2SC+u3cSTydLvzwY5mn6XUC69rM8KsFXfgcu0Ic
cY3gWTTHUc22G5Jaq7qJVwgWp/sdzJF2w1KP/yrgEsG/I40few99gFp/433T
eAL9+86Z29U/YvWikgRZHEFuxtmy1syPyLB+NrmQT7BDlGvNteiBpkGYvOIs
Qe8ehrtF0oOAjIDE8tMEN3X1F1se6EV5zlj1SDSBh6H6XduRXjhkpnvZRBHM
uqruHXLxE3b+an09JJKg20Tlkr1OH0YHpofIwgnumM3+tr6kD8t92ipXhBFE
emrXdWztB5ctuSQIJfCXikcSO/qRtEfTyOwEzbNVuOIZBtCU7+4vOE739xYm
hsYMYDjuVT0vmEAzWW/RdskA1qR2lb4IpPkE+b4r1hlEW+75OKdjBPMOGld8
8h6E+Ea34+QAer9GZL3Zw0HEB+vp3j5CYCLapL5xggJVGqe5LocJNpkqgpj1
CuRf9Huj5U/QZrdAJeeaAls1Esyq/QhOHqktXyVT4KXT3AXxvgQ5W30EIR0K
vHGQ55+jbls+/UKJXAHx40820dRWfdtc1nYp0M177nmcesyjReHUq0B70vFC
D+ogp555x74okDZn3MWC+ojF5KACVQbLNXZL5D4Et2cL3MgUBr9fmu3XRi0a
3mBjNZVBedDUKU3UJv+cV38xjYHhWBbqqBUGmukNGgxKvSoERdS+WrqiIS0G
S3Pt42KpU0Yri1bOZ3B4uMbgNHVdk2fycW0GoryoqghqoyvZnhN0GExUy1IO
pP40zUxJYzGD9aPFYbup5/ZJ3jsuYWB9Ybr2TuoNNYE1ifoMktJSnzlRZ8U8
vrLQiMFQoz/HnrrFwy1k31IGlkX5KXbUU2yUdguWMYhOMbTmUa9eeMuufzmD
y75S6S/Unko2RsbGDEym1IWvpP4PvL4g9A==
       "]]},
     Annotation[#, "Charting`Private`Tag$9978#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.30000000000000066`, 1.6521535024373446`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.3, 1.2}, {1.6521535024373408`, 1.7309864605101988`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.905333052474047*^9, 3.9053471551318946`*^9, 3.905351239702247*^9, 
   3.905351547605403*^9, {3.9058495023905854`*^9, 3.9058495305399923`*^9}, 
   3.9059386633702064`*^9, 3.9061080954001417`*^9, 3.906199500047422*^9, 
   3.906214982393392*^9, 3.9062183983329277`*^9, 3.9062187181919603`*^9, 
   3.906249542004033*^9, 3.906541756011407*^9, 3.9068088243998623`*^9, 
   3.9083586954960375`*^9, 3.908548279187608*^9, 3.908549419646762*^9, 
   3.9086216536320086`*^9, 3.909237055199046*^9, 3.9145064081000295`*^9, 
   3.914617163190545*^9, 3.9155422354354906`*^9, 3.9155448118943987`*^9, 
   3.9458642527797623`*^9, 3.9466469492875953`*^9, 3.9484524416003375`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"f9a9ecc5-1ee2-49f5-a021-5aee67366a0f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["n", "e"], "[", "\[Lambda]_", "]"}], ":=", 
  SqrtBox[
   RowBox[{"2.3753", "+", 
    FractionBox["0.01224", 
     RowBox[{
      SuperscriptBox["\[Lambda]", "2"], "-", "0.01667"}]], "-", 
    RowBox[{"0.01516", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]}]]}]], "Input",
 CellChangeTimes->{{3.9050028604433823`*^9, 3.905002860457364*^9}, {
   3.9050029057478647`*^9, 3.905002961182044*^9}, {3.905243079072276*^9, 
   3.9052430935329943`*^9}, 3.9052487208616266`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"dbbc1ba2-a2b2-41b9-ae44-74bbbd66c13d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["n", "eff"], "[", 
   RowBox[{"\[Lambda]_", ",", "\[Theta]_"}], "]"}], ":=", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], 
      SuperscriptBox[
       RowBox[{
        SubscriptBox["n", "o"], "[", "\[Lambda]", "]"}], "2"]], "+", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
      SuperscriptBox[
       RowBox[{
        SubscriptBox["n", "e"], "[", "\[Lambda]", "]"}], "2"]]}], ")"}], 
   RowBox[{
    RowBox[{"-", "1"}], "/", "2"}]]}]], "Input",
 CellChangeTimes->{{3.905248588128459*^9, 3.905248711554949*^9}, {
   3.905248746016686*^9, 3.905248761521536*^9}, 3.905347079955793*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"b885c9a6-76e7-4817-81e0-8eee3f4b925b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pne", "=", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["n", "eff"], "[", 
         RowBox[{"\[Lambda]", ",", "\[Theta]"}], "]"}], ",", 
        RowBox[{
         SubscriptBox["n", "o"], "[", "\[Lambda]", "]"}], ",", 
        RowBox[{
         SubscriptBox["n", "e"], "[", "\[Lambda]", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", ".3", ",", "1.2"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1.53", ",", "1.74"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLabels", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(n\), \(eff\)]\)(\[Lambda],\[Theta])\>\"", 
         ",", "\"\<\!\(\*SubscriptBox[\(n\), \(o\)]\)(\[Lambda])\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(n\), \(e\)]\)(\[Lambda])\>\""}], "}"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Lambda] (\[Mu]m)\>\"", ",", "\"\<\>\""}], "}"}]}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", 
        RowBox[{"\[Pi]", "/", "4"}]}], "}"}], ",", "0", ",", 
      RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
    RowBox[{"ControlPlacement", "\[Rule]", "Top"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9053330920562544`*^9, 3.905333134246482*^9}, {
   3.9053331691614666`*^9, 3.905333251705496*^9}, {3.905333294785246*^9, 
   3.90533335630156*^9}, {3.9053333969763875`*^9, 3.905333400121481*^9}, {
   3.905333442419459*^9, 3.905333565533439*^9}, 3.905333607875433*^9, {
   3.9053336714632125`*^9, 3.905333723960561*^9}, {3.905333779227846*^9, 
   3.9053337884575224`*^9}, {3.905347087199542*^9, 3.905347095123356*^9}, {
   3.9086213432136593`*^9, 3.9086213498027987`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"6e174734-4611-462f-a958-b8a24ac2c26e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 1.0995574287564276`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Theta]$$], Rational[1, 4] Pi}, 0, Rational[1, 2] 
      Pi}}, Typeset`size$$ = {
    396.00000000000006`, {99., 103.44520377279346`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Theta]$$ = Rational[1, 4] Pi}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         Subscript[$CellContext`n, $CellContext`eff][$CellContext`\[Lambda], \
$CellContext`\[Theta]$$], 
         Subscript[$CellContext`n, $CellContext`o][$CellContext`\[Lambda]], 
         Subscript[$CellContext`n, $CellContext`e][$CellContext`\[Lambda]]}, \
{$CellContext`\[Lambda], 0.3, 1.2}, PlotRange -> {1.53, 1.74}, 
        PlotLabels -> {
         "\!\(\*SubscriptBox[\(n\), \(eff\)]\)(\[Lambda],\[Theta])", 
          "\!\(\*SubscriptBox[\(n\), \(o\)]\)(\[Lambda])", 
          "\!\(\*SubscriptBox[\(n\), \(e\)]\)(\[Lambda])"}, 
        AxesLabel -> {"\[Lambda] (\[Mu]m)", ""}], 
      "Specifications" :> {{{$CellContext`\[Theta]$$, Rational[1, 4] Pi}, 0, 
         Rational[1, 2] Pi}}, "Options" :> {ControlPlacement -> Top}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{450., {146.34743643933908`, 152.65256356066092`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.9053331354781733`*^9, {3.9053332267080107`*^9, 3.9053332522181563`*^9}, {
   3.905333320420537*^9, 3.9053333580186777`*^9}, 3.905333401853518*^9, 
   3.9053334479167337`*^9, 3.9053335188033347`*^9, 3.9053335682210865`*^9, {
   3.9053336087556577`*^9, 3.905333613857914*^9}, 3.9053336818460894`*^9, 
   3.9053337260998397`*^9, 3.9053337893184175`*^9, 3.905347155274867*^9, 
   3.9053512398246956`*^9, 3.905351548006378*^9, 3.9054325480581846`*^9, {
   3.9058495024421067`*^9, 3.9058495305763006`*^9}, 3.9059386634434047`*^9, 
   3.9061080956312995`*^9, 3.906199500356619*^9, 3.9062149824203067`*^9, 
   3.9062183983780713`*^9, 3.9062187182461243`*^9, 3.906249542084113*^9, 
   3.9065417560442038`*^9, 3.9068088244394565`*^9, 3.9083586955310874`*^9, 
   3.908548279410678*^9, 3.908549419704568*^9, {3.908621334705398*^9, 
   3.9086213507293386`*^9}, 3.9086216661366987`*^9, 3.909237068106869*^9, 
   3.914506408209948*^9, 3.914617163331999*^9, 3.9155422355584755`*^9, 
   3.915544811956438*^9, 3.9458642528325243`*^9, 3.946646949404953*^9, {
   3.9484524517219934`*^9, 3.9484524555067368`*^9}, 3.9518580908098736`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"d5f4c398-b231-46c5-a16d-c30520e395bc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["k values", "Subsubsection",
 CellChangeTimes->{{3.9055917324165645`*^9, 
  3.905591756403814*^9}},ExpressionUUID->"6e2d987e-f13a-4e53-82b0-\
04976f92d8ad"],

Cell[BoxData[
 FormBox[
  RowBox[{"k", "=", 
   FractionBox[
    RowBox[{"2", "\[Pi]"}], "\[Lambda]"]}], TraditionalForm]], "Text",
 CellChangeTimes->{{3.9052524263528175`*^9, 
  3.9052524964594536`*^9}},ExpressionUUID->"ed42696f-0fde-4a3b-91ba-\
709d97369561"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["k", "so"], "[", "\[Lambda]_", "]"}], ":=", 
  FractionBox[
   RowBox[{"2", "\[Pi]", " ", 
    RowBox[{
     SubscriptBox["n", "o"], "[", "\[Lambda]", "]"}]}], 
   "\[Lambda]"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["k", "io"], "[", "\[Lambda]_", "]"}], ":=", 
  FractionBox[
   RowBox[{"2", "\[Pi]", " ", 
    RowBox[{
     SubscriptBox["n", "o"], "[", "\[Lambda]", "]"}]}], 
   "\[Lambda]"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["k", "po"], "[", "\[Lambda]_", "]"}], ":=", 
  FractionBox[
   RowBox[{"2", "\[Pi]", " ", 
    RowBox[{
     SubscriptBox["n", "o"], "[", "\[Lambda]", "]"}]}], 
   "\[Lambda]"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["k", "se"], "[", 
   RowBox[{"\[Lambda]_", ",", "\[Theta]_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"2", "\[Pi]", " ", 
    RowBox[{
     SubscriptBox["n", "eff"], "[", 
     RowBox[{"\[Lambda]", ",", "\[Theta]"}], "]"}]}], 
   "\[Lambda]"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["k", "ie"], "[", 
   RowBox[{"\[Lambda]_", ",", "\[Theta]_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"2", "\[Pi]", " ", 
    RowBox[{
     SubscriptBox["n", "eff"], "[", 
     RowBox[{"\[Lambda]", ",", "\[Theta]"}], "]"}]}], 
   "\[Lambda]"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["k", "pe"], "[", 
   RowBox[{"\[Lambda]_", ",", "\[Theta]_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"2", "\[Pi]", " ", 
    RowBox[{
     SubscriptBox["n", "eff"], "[", 
     RowBox[{"\[Lambda]", ",", "\[Theta]"}], "]"}]}], 
   "\[Lambda]"]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.905248547261227*^9, 3.9052485474409227`*^9}, {
  3.9052525074684963`*^9, 3.905252554030098*^9}, {3.9052525859717064`*^9, 
  3.9052526126664195`*^9}, {3.905252643368142*^9, 3.9052526795915127`*^9}, {
  3.9052527117463408`*^9, 3.905252758146104*^9}, {3.9052579976263905`*^9, 
  3.905258008892066*^9}, {3.9053471121770697`*^9, 3.9053471135706997`*^9}, {
  3.9055924411401815`*^9, 3.9055924582563715`*^9}, {3.9059411149024315`*^9, 
  3.9059411225275*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"b895e971-4bd6-4966-a2ca-8cbed932356b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wavelength Relation", "Subsubsection",
 CellChangeTimes->{{3.9055918656444583`*^9, 
  3.905591876930631*^9}},ExpressionUUID->"ef835e92-9bf2-4e16-9925-\
981605fb3149"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "\[Lambda]pump"], "==", 
      RowBox[{
       FractionBox["1", "\[Lambda]"], "+", 
       FractionBox["1", "\[Lambda]i"]}]}], ",", "\[Lambda]i"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.905348601608455*^9, 3.905348757104908*^9}, {
  3.90534896022527*^9, 3.905348992371643*^9}, {3.905349226149135*^9, 
  3.905349246278573*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"58f818ae-753f-48da-9d5e-30db3812bfca"],

Cell[BoxData[
 RowBox[{"\[Lambda]i", "\[Rule]", 
  FractionBox[
   RowBox[{"\[Lambda]", " ", "\[Lambda]pump"}], 
   RowBox[{"\[Lambda]", "-", "\[Lambda]pump"}]]}]], "Output",
 CellChangeTimes->{
  3.9053486474809813`*^9, {3.9053487017782755`*^9, 3.9053487596222515`*^9}, {
   3.9053489769089875`*^9, 3.9053489955329337`*^9}, {3.905349228267101*^9, 
   3.9053492470091624`*^9}, 3.9053512410852365`*^9, 3.9053515497019176`*^9, 
   3.905849503881999*^9, 3.9059386643328743`*^9, 3.906108097166133*^9, 
   3.9061995005281987`*^9, 3.906214982477011*^9, 3.9062183984390125`*^9, 
   3.90621871828934*^9, 3.9062495421580954`*^9, 3.9065417561422086`*^9, 
   3.906808824516381*^9, 3.9083586956454735`*^9, 3.90854827951437*^9, 
   3.9085494197492194`*^9, 3.9086216794821157`*^9, 3.9145064083516483`*^9, 
   3.914617163458311*^9, 3.9155422359508476`*^9, 3.9155448120678005`*^9, 
   3.945864254689968*^9, 3.946646949558812*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"396f0111-502f-47b3-bd76-937b2075330f"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Solve for the output angles", "Subsection",
 CellChangeTimes->{{3.9055918907182026`*^9, 
  3.9055919040162897`*^9}},ExpressionUUID->"291b2e03-ba56-4f24-a3da-\
c29e8dd4fe90"],

Cell[CellGroupData[{

Cell["Type I SPDC output", "Subsubsection",
 CellChangeTimes->{{3.905592084752782*^9, 
  3.9055920947630663`*^9}},ExpressionUUID->"f3f4df72-1677-4645-8ae1-\
c864040c2313"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SPDCtypeI", "[", 
  RowBox[{
   RowBox[{"30.5", "Degree"}], ",", "0.39"}], "]"}]], "Input",
 CellChangeTimes->{{3.9518596336857686`*^9, 3.9518596402513967`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"501f34c3-002e-4240-b8f1-219f269b4ad3"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`\[Lambda]s$$ = 
  0.78, $CellContext`\[Lambda]i$$ = 
  0.39 (-0.39 + $CellContext`\[Lambda]s$$)^(-1) $CellContext`\[Lambda]s$$, \
$CellContext`\[Theta]s$$ = 
  InterpolatingFunction[{{0.5, 1.2000000000000002`}}, {
   5, 7, 0, {71}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, CompressedData["
1:eJw10C1QQkEUBeCn8WWyDg2zVjwRK2SSM1p9VsxmrVg1k8lkzNT3//+zu4xm
dy/HO7PtzD332/H90+Lh3PO8M/tm3v+EWGwvXpt5iK9g6h8+Q/xOlm+7nxB3
0Wq0mUX4WLuJ0M5dMMKtTQXTGDZkkzFOsRjXMgnsMhtM4FL+IcGVWzdJ8eJi
qxTfezcpLiWY4dnVBhlk3S6DxEY5HmVyyHnbHFLrF5B1ywIS2xQ4OUo6SjpK
Oko6KjoqOio6arxLcY1YHDVuxNHQ0dDR0NHS0dLR0tFBaoOOjo6Ono6ejp6O
gY6BjoEOxR5Fj2KfokuxV9Gn2K/p1LxD06t5j6Zb8y5Dv+F9hv9geKfhfxje
e+S/HPEHoHAfaA==
   "], {Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
    13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
    31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
    49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 
    67, 68, 69, 70, 71}, CompressedData["
1:eJwBRQK6/SFib1JlAQAAAEcAAAA/FUT+cMYVQES44VV2txVA+YhtIXaQFUAU
qMpksVUVQM+A3v2wChVAKPDJrnKyFEB03PvIiU8UQJC6aYw35BNALzhKyn1y
E0Ch6O5yLfwSQJDQhiXyghJAjl3EeVsIEkAd5Q565I0RQEwUUJX5FBFAtLHY
Kv2eEEDCCcW1Si0QQJ4NMw1xgg9AMo/V1C+4DkAC5PEyZ/4NQGePR5+YVw1A
LycuFyfGDEDRtGhASUwMQK3/TAj56wtA3x9wKOKmC0BvdI95UX4LQPg3sz8n
cwtAAwWqec6FC0A/qQesOrYLQDWfK7PsAwxAUsVVGP5tDED8Vg95MfMMQBB9
bf4Fkg1A0UDmwctIDkAEkBBCtxUPQJlh7Yzy9g9AAMLYrVV1EEAgin3xjvcQ
QNvZdD9OgRFA+T8gUMoREkDLysu9SKgSQIuXe38eRBNAxqVBw6/kE0AT7vJa
b4kUQKFdnuPdMRVADj5TxojdFUAEhFMoCYwWQLF+/tkCPRdAptGBTiPwF0Cg
FHuiIKUYQCDm67S4WxlAzm/0U7ATGkAenn990swaQFGkOrPvhhtAwbK0YN1B
HEDU+EFSdf0cQJX4ITuVuR1At0BoSR52HkDcBDXG9DIfQJPy4sD/7x9Af871
YZRWIEAGKDHJLbUgQJgXgfbCEyFAF6j0rktyIUB4ZhqFwNAhQJi6ZMQaLyJA
U37VXlSNIkDAN6vcZ+siQI700k1QSSNAQXLpPAmnI0A2s5yjjgQkQKoQReDc
YSRApxX1LA==
    "]}, {Automatic}][$CellContext`\[Lambda]s$$], $CellContext`\[Theta]i$$ = -
  InterpolatingFunction[{{0.5, 1.2000000000000002`}}, {
    5, 7, 0, {71}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, CompressedData["
1:eJw10C1QQkEUBeCn8WWyDg2zVjwRK2SSM1p9VsxmrVg1k8lkzNT3//+zu4xm
dy/HO7PtzD332/H90+Lh3PO8M/tm3v+EWGwvXpt5iK9g6h8+Q/xOlm+7nxB3
0Wq0mUX4WLuJ0M5dMMKtTQXTGDZkkzFOsRjXMgnsMhtM4FL+IcGVWzdJ8eJi
qxTfezcpLiWY4dnVBhlk3S6DxEY5HmVyyHnbHFLrF5B1ywIS2xQ4OUo6SjpK
Oko6KjoqOio6arxLcY1YHDVuxNHQ0dDR0NHS0dLR0tFBaoOOjo6Ono6ejp6O
gY6BjoEOxR5Fj2KfokuxV9Gn2K/p1LxD06t5j6Zb8y5Dv+F9hv9geKfhfxje
e+S/HPEHoHAfaA==
    "], {Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
      13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
     31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
     49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 
     67, 68, 69, 70, 71}, CompressedData["
1:eJwBRQK6/SFib1JlAQAAAEcAAAA/FUT+cMYVQES44VV2txVA+YhtIXaQFUAU
qMpksVUVQM+A3v2wChVAKPDJrnKyFEB03PvIiU8UQJC6aYw35BNALzhKyn1y
E0Ch6O5yLfwSQJDQhiXyghJAjl3EeVsIEkAd5Q565I0RQEwUUJX5FBFAtLHY
Kv2eEEDCCcW1Si0QQJ4NMw1xgg9AMo/V1C+4DkAC5PEyZ/4NQGePR5+YVw1A
LycuFyfGDEDRtGhASUwMQK3/TAj56wtA3x9wKOKmC0BvdI95UX4LQPg3sz8n
cwtAAwWqec6FC0A/qQesOrYLQDWfK7PsAwxAUsVVGP5tDED8Vg95MfMMQBB9
bf4Fkg1A0UDmwctIDkAEkBBCtxUPQJlh7Yzy9g9AAMLYrVV1EEAgin3xjvcQ
QNvZdD9OgRFA+T8gUMoREkDLysu9SKgSQIuXe38eRBNAxqVBw6/kE0AT7vJa
b4kUQKFdnuPdMRVADj5TxojdFUAEhFMoCYwWQLF+/tkCPRdAptGBTiPwF0Cg
FHuiIKUYQCDm67S4WxlAzm/0U7ATGkAenn990swaQFGkOrPvhhtAwbK0YN1B
HEDU+EFSdf0cQJX4ITuVuR1At0BoSR52HkDcBDXG9DIfQJPy4sD/7x9Af871
YZRWIEAGKDHJLbUgQJgXgfbCEyFAF6j0rktyIUB4ZhqFwNAhQJi6ZMQaLyJA
U37VXlSNIkDAN6vcZ+siQI700k1QSSNAQXLpPAmnI0A2s5yjjgQkQKoQReDc
YSRApxX1LA==
     "]}, {
    Automatic}][$CellContext`\[Lambda]i$$], $CellContext`m\[Lambda]s$$ = 
  0.993, $CellContext`m\[Lambda]i$$ = 0.642, $CellContext`m\[Theta]s$$ = 
  6.393336838901083, $CellContext`m\[Theta]i$$ = -4.1326793104318975`, \
$CellContext`clicked$$ = 
  True, $CellContext`clickPos$$ = $CellContext`\[Lambda]s$$, \
$CellContext`showLine$$ = False}, 
  DynamicBox[ToBoxes[
    Row[{
      Column[{
        EventHandler[
         Dynamic[
          Show[$CellContext`plot1$12284, 
           Graphics[{
             Part[$CellContext`colors$12284, 1], 
             
             Line[{{$CellContext`\[Lambda]s$$, 
                0}, {$CellContext`\[Lambda]s$$, $CellContext`\[Theta]s$$}}], 
             Circle[{$CellContext`\[Lambda]s$$, $CellContext`\[Theta]s$$}, 
              
              Scaled[$CellContext`radius$12284 \
{$CellContext`aspectRatio$12284, 1}]], 
             Part[$CellContext`colors$12284, 2], 
             
             Line[{{$CellContext`\[Lambda]i$$, 
                0}, {$CellContext`\[Lambda]i$$, $CellContext`\[Theta]i$$}}], 
             Circle[{$CellContext`\[Lambda]i$$, $CellContext`\[Theta]i$$}, 
              
              Scaled[$CellContext`radius$12284 \
{$CellContext`aspectRatio$12284, 1}]]}], 
           If[$CellContext`showLine$$, 
            Graphics[{
              Opacity[0.3], 
              Part[$CellContext`colors$12284, 1], 
              
              Line[{{$CellContext`m\[Lambda]s$$, 
                 0}, {$CellContext`m\[Lambda]s$$, \
$CellContext`m\[Theta]s$$}}], 
              Circle[{$CellContext`m\[Lambda]s$$, $CellContext`m\[Theta]s$$}, 
               
               Scaled[$CellContext`radius$12284 \
{$CellContext`aspectRatio$12284, 1}]], 
              Part[$CellContext`colors$12284, 2], 
              
              Line[{{$CellContext`m\[Lambda]i$$, 
                 0}, {$CellContext`m\[Lambda]i$$, \
$CellContext`m\[Theta]i$$}}], 
              Circle[{$CellContext`m\[Lambda]i$$, $CellContext`m\[Theta]i$$}, 
               
               Scaled[$CellContext`radius$12284 \
{$CellContext`aspectRatio$12284, 1}]]}], {}]]], {
         "MouseClicked" :> ($CellContext`clickPos$$ = Round[
              MousePosition["Graphics", {(-0.3) $CellContext`xmax$12284, 1}], 
              0.001]; If[
            Part[$CellContext`clickPos$$, 2] >= 
             0, $CellContext`\[Lambda]s$$ = Round[
                Part[$CellContext`clickPos$$, 1], 
                0.001]; $CellContext`\[Lambda]i$$ = 
              Round[$CellContext`\[Lambda]s$$ 0.39/($CellContext`\[Lambda]s$$ - 
                0.39), 0.001]; Null, $CellContext`\[Lambda]i$$ = Round[
                Part[$CellContext`clickPos$$, 1], 
                0.001]; $CellContext`\[Lambda]s$$ = 
              Round[$CellContext`\[Lambda]i$$ 0.39/($CellContext`\[Lambda]i$$ - 
                0.39), 0.001]; Null]; $CellContext`\[Theta]s$$ = Quiet[
              $CellContext`f\[Theta]sI$12284[$CellContext`\[Lambda]s$$]]; \
$CellContext`\[Theta]i$$ = -Quiet[
               $CellContext`f\[Theta]sI$12284[$CellContext`\[Lambda]i$$]]; \
$CellContext`clicked$$ = True; Null), 
          "MouseExited" :> ($CellContext`showLine$$ = False), 
          "MouseMoved" :> ($CellContext`mousePos = 
            MousePosition["Graphics", {(-0.3) $CellContext`xmax$12284, 1}]; 
           If[$CellContext`xmin$12284 <= 
             Part[$CellContext`mousePos, 1] <= $CellContext`xmax$12284, 
             If[Part[$CellContext`mousePos, 2] >= 
               0, $CellContext`m\[Lambda]s$$ = Round[
                  Part[$CellContext`mousePos, 1], 
                  0.001]; $CellContext`m\[Lambda]i$$ = 
                Round[$CellContext`m\[Lambda]s$$ 
                  0.39/($CellContext`m\[Lambda]s$$ - 0.39), 0.001]; 
               Null, $CellContext`m\[Lambda]i$$ = Round[
                  Part[$CellContext`mousePos, 1], 
                  0.001]; $CellContext`m\[Lambda]s$$ = 
                Round[$CellContext`m\[Lambda]i$$ 
                  0.39/($CellContext`m\[Lambda]i$$ - 0.39), 0.001]; 
               Null]; $CellContext`showLine$$ = True; 
             Null, $CellContext`showLine$$ = 
             False]; $CellContext`m\[Theta]s$$ = Quiet[
              $CellContext`f\[Theta]sI$12284[$CellContext`m\[Lambda]s$$]]; \
$CellContext`m\[Theta]i$$ = -Quiet[
               $CellContext`f\[Theta]sI$12284[$CellContext`m\[Lambda]i$$]]; 
           Null)}], 
        Dynamic[
         Row[{"\!\(\*SubscriptBox[\(\[Lambda]\), \(s\)]\) = ", 
           Style[Round[1000 $CellContext`\[Lambda]s$$] "nm", 
            Part[$CellContext`colors$12284, 1]], 
           If[$CellContext`showLine$$, 
            Style[" \[RightArrow] " <> ToString[
               Round[1000 $CellContext`m\[Lambda]s$$]] <> "nm", 
             Opacity[0.5], 
             Part[$CellContext`colors$12284, 1]], ""]}]], 
        Dynamic[
         Row[{"\!\(\*SubscriptBox[\(\[Lambda]\), \(i\)]\) = ", 
           Style[Round[1000 $CellContext`\[Lambda]i$$] "nm", 
            Part[$CellContext`colors$12284, 2]], 
           If[$CellContext`showLine$$, 
            Style[" \[RightArrow] " <> ToString[
               Round[1000 $CellContext`m\[Lambda]i$$]] <> "nm", 
             Opacity[0.5], 
             Part[$CellContext`colors$12284, 2]], ""]}]]}], 
      Column[{
        Dynamic[
         Show[$CellContext`frame1$12284, 
          Graphics[{Thick, 
            Part[$CellContext`colors$12284, 1], 
            Circle[{0, 0}, 
             Abs[$CellContext`\[Theta]s$$]], 
            Part[$CellContext`colors$12284, 2], 
            Circle[{0, 0}, 
             Abs[$CellContext`\[Theta]i$$]]}, Axes -> True, AspectRatio -> 1, 
           PlotRange -> {{-$CellContext`maxy$12284, $CellContext`maxy$12284}, \
{-$CellContext`maxy$12284, $CellContext`maxy$12284}}, 
           Ticks -> $CellContext`tickIntegerDegrees, ImageSize -> 250], 
          If[$CellContext`showLine$$, 
           Graphics[{
             Opacity[0.6], 
             Part[$CellContext`colors$12284, 1], 
             Circle[{0, 0}, 
              Abs[$CellContext`m\[Theta]s$$]], 
             Part[$CellContext`colors$12284, 2], 
             Circle[{0, 0}, 
              Abs[$CellContext`m\[Theta]i$$]]}], {}]]]}, {}]}], StandardForm],
   ImageSizeCache->{570., {103.34743643933908`, 109.65256356066092`}}],
  DynamicModuleValues:>{},
  Initialization:>{$CellContext`mousePos = {0, 0}}]], "Output",
 CellChangeTimes->{
  3.9518596430672092`*^9, 3.9518597286667604`*^9, 3.9518598878246117`*^9, 
   3.9518605014239683`*^9, {3.9519188610414553`*^9, 3.951918874782665*^9}},
 CellLabel->"Out[23]=",ExpressionUUID->"488f19e1-258b-4935-bf6f-2c40f3741df4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SPDCtypeI", "[", 
   RowBox[{"\[Theta]OA_", ",", "\[Lambda]p_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "xval", ",", "yval", ",", "txval", ",", "tyval", ",", "val1", ",", 
      "val2", ",", "f\[Theta]sI", ",", "frame1", ",", 
      RowBox[{"xmin", "=", "0.5"}], ",", 
      RowBox[{"xmax", "=", "1.2"}], ",", 
      RowBox[{"ymin", "=", 
       RowBox[{"-", "1.1"}]}], ",", 
      RowBox[{"ymax", "=", "1.1"}], ",", 
      RowBox[{"radius", "=", "0.02"}], ",", "plot1", ",", 
      RowBox[{"aspectRatio", "=", 
       RowBox[{"1", "/", "GoldenRatio"}]}], ",", "colors", ",", 
      RowBox[{"maxy", "=", "10.7"}]}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xval", ",", "yval"}], "}"}], "=", 
      RowBox[{"typeI", "[", 
       RowBox[{"\[Theta]OA", ",", "\[Lambda]p"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"Length", "[", "yval", "]"}]}], ",", 
       RowBox[{"i", ">", "0"}], ",", 
       RowBox[{"i", "--"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MatchQ", "[", 
           RowBox[{
            RowBox[{"yval", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"_", "?", "NumberQ"}], ",", 
              RowBox[{"_", "?", "NumberQ"}]}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"xval", "=", 
           RowBox[{"Delete", "[", 
            RowBox[{"xval", ",", "i"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"yval", "=", 
           RowBox[{"Delete", "[", 
            RowBox[{"yval", ",", "i"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"txval", "=", 
      RowBox[{"Transpose", "[", "xval", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tyval", "=", 
      RowBox[{"Transpose", "[", "yval", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"val1", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"txval", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"tyval", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"val2", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"txval", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"tyval", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"val1", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"SnellsAngle", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{
             SubscriptBox["n", "o"], "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "1"}], "]"}]}], 
         "}"}], "&"}], "/@", "val1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"val2", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"SnellsAngle", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{
             SubscriptBox["n", "o"], "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "1"}], "]"}]}], 
         "}"}], "&"}], "/@", "val2"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Change", " ", "y", " ", "values", " ", "to", " ", "Degrees"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"val1", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{
            SuperscriptBox["Degree", 
             RowBox[{"-", "1"}]], "//", "N"}]}], "}"}], "*", "#"}], "&"}], "/@",
        "val1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"val2", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{
            SuperscriptBox["Degree", 
             RowBox[{"-", "1"}]], "//", "N"}]}], "}"}], "*", "#"}], "&"}], "/@",
        "val2"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"f\[Theta]sI", "=", 
      RowBox[{"Interpolation", "[", "val1", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"frame1", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"Axes", "\[Rule]", "True"}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
        " ", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Ticks", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"tickDivDegreesBothSides", "[", 
            RowBox[{
             RowBox[{"-", "10"}], ",", "10", ",", "5", ",", "4", ",", "0"}], 
            "]"}], ",", 
           RowBox[{"tickDivDegreesBothSides", "[", 
            RowBox[{
             RowBox[{"-", "10"}], ",", "10", ",", "5", ",", "4", ",", "0"}], 
            "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "->", "200"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"xmin", "=", "0.5"}], ";", " ", 
     RowBox[{"xmax", "=", "1.2"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ymin", "=", 
      RowBox[{"-", "1.1"}]}], ";", " ", 
     RowBox[{"ymax", "=", "1.1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"radius", "=", "0.02"}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
      "For", " ", "the", " ", "circle", " ", "around", " ", "selected", " ", 
       "points"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"plot1", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"f\[Theta]sI", "[", "x", "]"}], ",", 
          RowBox[{"-", 
           RowBox[{"f\[Theta]sI", "[", "x", "]"}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "Black", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(OA\)]\) = \
30.5\[Degree]\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\[Lambda] (\[Mu]m)\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(out\)]\)\>\""}], "}"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Ticks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "tick5Degrees"}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubsuperscriptBox[\(\[Theta]\), \(s\), \(\(\\\ \)\(ext\)\
\)]\)\>\"", ",", 
           "\"\<\!\(\*SubsuperscriptBox[\(\[Theta]\), \(i\), \(\(\\\ \
\)\(ext\)\)]\)\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "GoldenRatio"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "->", "250"}]}], "\[IndentingNewLine]", "]"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"colors", "=", 
      RowBox[{"Cases", "[", 
       RowBox[{"plot1", ",", 
        RowBox[{"RGBColor", "[", "__", "]"}], ",", "Infinity"}], "]"}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"DynamicModule", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Lambda]s", "=", "0.78"}], ",", 
         RowBox[{"\[Lambda]i", "=", 
          FractionBox[
           RowBox[{"\[Lambda]s", " ", "\[Lambda]p"}], 
           RowBox[{"\[Lambda]s", "-", "\[Lambda]p"}]]}], ",", 
         RowBox[{"\[Theta]s", "=", 
          RowBox[{"Quiet", "@", 
           RowBox[{"f\[Theta]sI", "[", "\[Lambda]s", "]"}]}]}], ",", 
         RowBox[{"\[Theta]i", "=", 
          RowBox[{"-", 
           RowBox[{"Quiet", "@", 
            RowBox[{"f\[Theta]sI", "[", "\[Lambda]i", "]"}]}]}]}], ",", 
         RowBox[{"m\[Lambda]s", "=", "\[Lambda]s"}], ",", 
         RowBox[{"m\[Lambda]i", "=", "\[Lambda]i"}], ",", 
         RowBox[{"m\[Theta]s", "=", "\[Theta]s"}], ",", 
         RowBox[{"m\[Theta]i", "=", "\[Theta]i"}], ",", 
         RowBox[{"clicked", "=", "True"}], ",", 
         RowBox[{"clickPos", "=", "\[Lambda]s"}], ",", 
         RowBox[{"showLine", "=", "False"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Column", "[", 
            RowBox[{"{", 
             RowBox[{"(*", 
              RowBox[{"Column", " ", "1"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"EventHandler", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Dynamic", "@", 
                 RowBox[{"Show", "[", "\[IndentingNewLine]", 
                  RowBox[{"plot1", ",", "\[IndentingNewLine]", 
                   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"colors", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Lambda]s", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Lambda]s", ",", "\[Theta]s"}], "}"}]}], "}"}], 
                    "]"}], ",", 
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Lambda]s", ",", "\[Theta]s"}], "}"}], ",", 
                    RowBox[{"Scaled", "[", 
                    RowBox[{"radius", 
                    RowBox[{"{", 
                    RowBox[{"aspectRatio", ",", "1"}], "}"}]}], "]"}]}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"colors", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Lambda]i", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Lambda]i", ",", "\[Theta]i"}], "}"}]}], "}"}], 
                    "]"}], ",", 
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Lambda]i", ",", "\[Theta]i"}], "}"}], ",", 
                    RowBox[{"Scaled", "[", 
                    RowBox[{"radius", 
                    RowBox[{"{", 
                    RowBox[{"aspectRatio", ",", "1"}], "}"}]}], "]"}]}], 
                    "]"}]}], "}"}], "\[IndentingNewLine]", "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{"showLine", ",", "\[IndentingNewLine]", 
                    RowBox[{"Graphics", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"colors", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"m\[Lambda]s", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"m\[Lambda]s", ",", "m\[Theta]s"}], "}"}]}], 
                    "}"}], "]"}], ",", 
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"m\[Lambda]s", ",", "m\[Theta]s"}], "}"}], ",", 
                    RowBox[{"Scaled", "[", 
                    RowBox[{"radius", 
                    RowBox[{"{", 
                    RowBox[{"aspectRatio", ",", "1"}], "}"}]}], "]"}]}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"colors", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"m\[Lambda]i", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"m\[Lambda]i", ",", "m\[Theta]i"}], "}"}]}], 
                    "}"}], "]"}], ",", 
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"m\[Lambda]i", ",", "m\[Theta]i"}], "}"}], ",", 
                    RowBox[{"Scaled", "[", 
                    RowBox[{"radius", 
                    RowBox[{"{", 
                    RowBox[{"aspectRatio", ",", "1"}], "}"}]}], "]"}]}], 
                    "]"}]}], "}"}], "\[IndentingNewLine]", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", "}"}]}], " ", 
                    RowBox[{"(*", "Else", "*)"}], "\[IndentingNewLine]", 
                    "]"}]}], 
                  RowBox[{"(*", 
                   RowBox[{"end", " ", "If"}], "*)"}], "\[IndentingNewLine]", 
                  "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\"\<MouseClicked\>\"", ":>", "\[IndentingNewLine]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"clickPos", "=", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"MousePosition", "[", 
                    RowBox[{"\"\<Graphics\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.3"}], "xmax"}], ",", "1"}], "}"}]}], 
                    "]"}], ",", "0.001"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"clickPos", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ">=", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"\[Lambda]s", "=", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"clickPos", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "0.001"}], "]"}]}], 
                    ";", 
                    RowBox[{"\[Lambda]i", "=", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[Lambda]s", " ", "\[Lambda]p"}], 
                    RowBox[{"\[Lambda]s", "-", "\[Lambda]p"}]], ",", 
                    "0.001"}], "]"}]}], ";"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"\[Lambda]i", "=", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"clickPos", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "0.001"}], "]"}]}], 
                    ";", 
                    RowBox[{"\[Lambda]s", "=", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[Lambda]i", " ", "\[Lambda]p"}], 
                    RowBox[{"\[Lambda]i", "-", "\[Lambda]p"}]], ",", 
                    "0.001"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}],
                     ";", "\[IndentingNewLine]", 
                    RowBox[{"\[Theta]s", "=", 
                    RowBox[{"Quiet", "@", 
                    RowBox[{"f\[Theta]sI", "[", "\[Lambda]s", "]"}]}]}], ";", 
                    RowBox[{"\[Theta]i", "=", 
                    RowBox[{"-", 
                    RowBox[{"Quiet", "@", 
                    RowBox[{"f\[Theta]sI", "[", "\[Lambda]i", "]"}]}]}]}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"clicked", "=", "True"}], ";"}], ")"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{"\"\<MouseEntered\>\"", ":>", 
                    RowBox[{"(", 
                    RowBox[{"showLine", "=", "True"}], ")"}]}], ","}], "*)"}],
                   "\[IndentingNewLine]", 
                  RowBox[{"\"\<MouseExited\>\"", ":>", 
                   RowBox[{"(", 
                    RowBox[{"showLine", "=", "False"}], ")"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"\"\<MouseMoved\>\"", ":>", "\[IndentingNewLine]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mousePos", "=", 
                    RowBox[{"MousePosition", "[", 
                    RowBox[{"\"\<Graphics\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.3"}], "xmax"}], ",", "1"}], "}"}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"xmin", "<=", 
                    RowBox[{"mousePos", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "<=", "xmax"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"mousePos", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ">=", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"m\[Lambda]s", "=", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"mousePos", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "0.001"}], "]"}]}], 
                    ";", 
                    RowBox[{"m\[Lambda]i", "=", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"m\[Lambda]s", " ", "\[Lambda]p"}], 
                    RowBox[{"m\[Lambda]s", "-", "\[Lambda]p"}]], ",", 
                    "0.001"}], "]"}]}], ";"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"m\[Lambda]i", "=", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"mousePos", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "0.001"}], "]"}]}], 
                    ";", 
                    RowBox[{"m\[Lambda]s", "=", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"m\[Lambda]i", " ", "\[Lambda]p"}], 
                    RowBox[{"m\[Lambda]i", "-", "\[Lambda]p"}]], ",", 
                    "0.001"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}],
                     ";", 
                    RowBox[{"showLine", "=", "True"}], ";"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"showLine", "=", "False"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"m\[Theta]s", "=", 
                    RowBox[{"Quiet", "@", 
                    RowBox[{"f\[Theta]sI", "[", "m\[Lambda]s", "]"}]}]}], ";", 
                    RowBox[{"m\[Theta]i", "=", 
                    RowBox[{"-", 
                    RowBox[{"Quiet", "@", 
                    RowBox[{"f\[Theta]sI", "[", "m\[Lambda]i", "]"}]}]}]}], 
                    ";"}], ")"}]}]}], "\[IndentingNewLine]", "}"}]}], "]"}], 
              ",", 
              RowBox[{"(*", 
               RowBox[{"end", " ", "of", " ", 
                SuperscriptBox["1", "st"], " ", "element", " ", "in", " ", 
                "Column1"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"Dynamic", "@", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(\[Lambda]\), \(s\)]\) = \>\"", ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{"1000", "\[Lambda]s"}], "]"}], "\"\<nm\>\""}], 
                    ",", 
                    RowBox[{"colors", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{"showLine", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\< \[RightArrow] \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"1000", "m\[Lambda]s"}], "]"}], "]"}], "<>", 
                    "\"\<nm\>\""}], ",", 
                    RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
                    RowBox[{"colors", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], 
                    "\[IndentingNewLine]", ",", "\"\<\>\""}], "]"}]}], 
                 "\[IndentingNewLine]", "}"}], "]"}]}], ",", 
              RowBox[{"(*", 
               RowBox[{"end", " ", "of", " ", 
                SuperscriptBox["2", "nd"], " ", "element", " ", "in", " ", 
                "Column1"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"Dynamic", "@", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(\[Lambda]\), \(i\)]\) = \>\"", ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{"1000", "\[Lambda]i"}], "]"}], "\"\<nm\>\""}], 
                    ",", 
                    RowBox[{"colors", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{"showLine", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\< \[RightArrow] \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"1000", "m\[Lambda]i"}], "]"}], "]"}], "<>", 
                    "\"\<nm\>\""}], ",", 
                    RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
                    RowBox[{"colors", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], 
                    "\[IndentingNewLine]", ",", "\"\<\>\""}], "]"}]}], 
                 "\[IndentingNewLine]", "}"}], "]"}]}]}], 
             RowBox[{"(*", 
              RowBox[{"end", " ", "of", " ", 
               SuperscriptBox["3", "rd"], " ", "element", " ", "in", " ", 
               "Column1"}], "*)"}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{"end", " ", "Column", " ", "1"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"Column", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"(*", 
               RowBox[{"Column", " ", "2"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"Dynamic", "@", 
               RowBox[{"Show", "[", 
                RowBox[{"frame1", ",", "\[IndentingNewLine]", 
                 RowBox[{"Graphics", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Thick", ",", "\[IndentingNewLine]", 
                    RowBox[{"colors", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"Abs", "[", "\[Theta]s", "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"colors", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"Abs", "[", "\[Theta]i", "]"}]}], "]"}]}], "}"}], 
                   ",", "\[IndentingNewLine]", 
                   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
                   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", " ", 
                   RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "maxy"}], ",", "maxy"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "maxy"}], ",", "maxy"}], "}"}]}], "}"}]}], 
                   ",", 
                   RowBox[{"Ticks", "->", "tickIntegerDegrees"}], ",", 
                   RowBox[{"ImageSize", "->", "250"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{"showLine", ",", "\[IndentingNewLine]", 
                   RowBox[{"Graphics", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.6", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"colors", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"Abs", "[", "m\[Theta]s", "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"colors", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"Abs", "[", "m\[Theta]i", "]"}]}], "]"}]}], "}"}],
                     "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"{", "}"}]}], " ", 
                  RowBox[{"(*", "Else", "*)"}], "\[IndentingNewLine]", 
                  "]"}]}], "\[IndentingNewLine]", "]"}]}], 
              RowBox[{"(*", 
               RowBox[{"end", " ", "Dynamic", " ", "Show"}], "*)"}], 
              "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
         "]"}], "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{"end", " ", "Dynamic", " ", "Row"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Initialization", ":>", 
        RowBox[{"{", 
         RowBox[{"mousePos", "=", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], 
         RowBox[{"(*", 
          RowBox[{",", 
           RowBox[{"m\[Lambda]s", "=", "1"}], ",", 
           RowBox[{"m\[Lambda]i", "=", "1"}], ",", 
           RowBox[{"m\[Theta]s", "=", "1"}], ",", 
           RowBox[{"m\[Theta]i", "=", "1"}]}], "*)"}], "}"}]}]}], "]"}]}]}], 
   "\n", "]"}]}]], "Input",
 CellChangeTimes->{{3.905506386929531*^9, 3.9055063875705757`*^9}, {
   3.9055173269305353`*^9, 3.905517333112258*^9}, {3.9055174157626452`*^9, 
   3.9055174511234765`*^9}, 3.9055179527058616`*^9, 3.90551799752524*^9, {
   3.906248142092744*^9, 3.9062482944405303`*^9}, {3.9062483383414493`*^9, 
   3.9062483435716915`*^9}, {3.906249019052245*^9, 3.906249094934081*^9}, {
   3.9062515360207634`*^9, 3.9062515410125113`*^9}, 3.9065628753441486`*^9, {
   3.9065629543431025`*^9, 3.9065629646667833`*^9}, {3.9518583796504407`*^9, 
   3.951858386913393*^9}, {3.951858530768942*^9, 3.951858531656347*^9}, {
   3.9518585911522627`*^9, 3.9518585921902013`*^9}, {3.9518587502845078`*^9, 
   3.951858766411832*^9}, {3.951858920814043*^9, 3.95185906154624*^9}, {
   3.9518590981642246`*^9, 3.9518591124641867`*^9}, {3.951859146782501*^9, 
   3.9518591638942485`*^9}, {3.9518592015550537`*^9, 
   3.9518592865850177`*^9}, {3.9518593219539833`*^9, 3.951859322645629*^9}, {
   3.951859355002224*^9, 3.951859401348505*^9}, {3.951859468821149*^9, 
   3.951859520256894*^9}, {3.9518596551074457`*^9, 3.9518596816197667`*^9}, {
   3.9518598373456793`*^9, 3.9518598718281555`*^9}, 3.9518604869093*^9, 
   3.9519425213517323`*^9},
 Background->GrayLevel[
  0.85],ExpressionUUID->"24a0b38b-db9b-4250-9ff4-d7a6626df493"],

Cell[BoxData[
 RowBox[{
  RowBox[{"typeI", "[", 
   RowBox[{
    RowBox[{"\[Theta]OA_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Lambda]p_", "?", "NumericQ"}]}], "]"}], ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "xvalI", ",", "yvalI", ",", "intGuess", ",", "rules", ",", "resultt"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xvalI", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Lambda]", ",", 
          FractionBox[
           RowBox[{"\[Lambda]", " ", "\[Lambda]p"}], 
           RowBox[{"\[Lambda]", "-", "\[Lambda]p"}]]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Lambda]", ",", ".50", ",", "1.2", ",", ".01"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xvalI", "=", "xvalI"}], ";", "\[IndentingNewLine]", 
     RowBox[{"intGuess", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"4", "Degree"}], ",", 
        RowBox[{
         RowBox[{"-", "4"}], "Degree"}]}], "}"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "Initial", " ", "guess", " ", "for", " ", "the", " ", "first", " ", 
       "point"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"yvalI", "=", 
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"rules", "=", 
            RowBox[{"Quiet", "[", 
             RowBox[{"FindRoot", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    SubscriptBox["k", "so"], "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], 
                    RowBox[{"Cos", "[", 
                    SubscriptBox["\[Theta]", "se"], "]"}]}], "+", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["k", "io"], "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], 
                    RowBox[{"Cos", "[", 
                    SubscriptBox["\[Theta]", "io"], "]"}]}]}], "==", 
                  RowBox[{
                   SubscriptBox["k", "pe"], "[", 
                   RowBox[{"\[Lambda]p", ",", "\[Theta]OA"}], "]"}]}], " ", 
                 ",", " ", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    SubscriptBox["k", "so"], "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], 
                    RowBox[{"Sin", "[", 
                    SubscriptBox["\[Theta]", "se"], "]"}]}], "+", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["k", "io"], "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], 
                    RowBox[{"Sin", "[", 
                    SubscriptBox["\[Theta]", "io"], "]"}]}]}], "==", "0"}]}], 
                "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "se"], ",", 
                   RowBox[{"intGuess", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "io"], ",", 
                   RowBox[{"intGuess", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}]}], "]"}],
              "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"0", "==", 
               RowBox[{"Chop", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    SubscriptBox["k", "so"], "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], 
                   RowBox[{"Cos", "[", 
                    SubscriptBox["\[Theta]", "se"], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{
                    SubscriptBox["k", "io"], "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], 
                   RowBox[{"Cos", "[", 
                    SubscriptBox["\[Theta]", "io"], "]"}]}], "-", 
                  RowBox[{
                   SubscriptBox["k", "pe"], "[", 
                   RowBox[{"\[Lambda]p", ",", "\[Theta]OA"}], "]"}]}], "/.", 
                 "rules"}], "]"}]}], "\[IndentingNewLine]", "&&", " ", 
              RowBox[{"0", "==", 
               RowBox[{"Chop", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    SubscriptBox["k", "so"], "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], 
                   RowBox[{"Sin", "[", 
                    SubscriptBox["\[Theta]", "se"], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{
                    SubscriptBox["k", "io"], "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], 
                   RowBox[{"Sin", "[", 
                    SubscriptBox["\[Theta]", "io"], "]"}]}]}], "/.", 
                 "rules"}], "]"}]}]}], "\[IndentingNewLine]", ",", 
             RowBox[{"(*", "Then", "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"resultt", "=", 
               RowBox[{"Values", "[", "rules", "]"}]}], ";"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"(*", "Else", "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"resultt", "=", 
               RowBox[{"{", 
                RowBox[{"\"\<nope\>\"", ",", "intGuess"}], "}"}]}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "resultt"}], "\[IndentingNewLine]", ")"}], 
         "\[IndentingNewLine]", "&"}], ",", "xvalI"}], "\[IndentingNewLine]", 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Return", " ", "both", " ", "lists"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xvalI", ",", "yvalI"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.905518278388855*^9, 3.9055184626411767`*^9}, {
   3.905518504705268*^9, 3.905518550517632*^9}, {3.9055186634907446`*^9, 
   3.9055186776754155`*^9}, {3.905518826782308*^9, 3.905518830646965*^9}, {
   3.905518872803308*^9, 3.9055189214443407`*^9}, {3.9055190227823863`*^9, 
   3.9055190350133476`*^9}, {3.9055202787026663`*^9, 3.9055202802102947`*^9}, 
   3.9059598575842524`*^9, 3.905960190878879*^9, {3.905960222316906*^9, 
   3.9059602336485167`*^9}, {3.9059603441084223`*^9, 
   3.9059603553357997`*^9}, {3.9059605020315466`*^9, 
   3.9059605342310886`*^9}, {3.906109620382415*^9, 3.906109621903003*^9}, {
   3.9065549741267524`*^9, 3.906554980040852*^9}, {3.9065550443459835`*^9, 
   3.906555047817252*^9}, {3.9065551334307475`*^9, 3.906555138507456*^9}, {
   3.906555233338525*^9, 3.9065552370422645`*^9}, {3.906560334474926*^9, 
   3.9065603345731506`*^9}, 3.9065604527630377`*^9, {3.9065626839946594`*^9, 
   3.9065627008393297`*^9}, {3.906562753908007*^9, 3.9065627879499507`*^9}, {
   3.906562828335676*^9, 3.906562889092412*^9}, {3.9065629195486326`*^9, 
   3.906562921125549*^9}, {3.9065629848274527`*^9, 3.9065630171029596`*^9}, {
   3.9065630618492017`*^9, 3.9065630666973934`*^9}, {3.9065631462821903`*^9, 
   3.9065631775936747`*^9}, 
   3.951942508002697*^9},ExpressionUUID->"cc090d2d-1764-4dd0-8e24-\
cd89611a6028"]
}, Closed]],

Cell[CellGroupData[{

Cell["Type II SPDC output", "Subsubsection",
 CellChangeTimes->{{3.9059597991789875`*^9, 3.9059598057883306`*^9}, {
  3.9519434642289543`*^9, 
  3.9519434684328003`*^9}},ExpressionUUID->"9246437f-2a2f-4f4a-b608-\
3a6803748da2"],

Cell[BoxData[
 GraphicsBox[{
   TagBox[RasterBox[CompressedData["
1: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
wWCsWbMGntvu3btrGBhnzpyB45s2barxEXjbkydPQH2+fv0KOquiojIH9EXU
1NDK0tJSUAcqSw/cxePHj+synyoq0OvXyMgI+5KgkqtX4xkK8V6ADDe4fPny
2rz+X74fjIfk5GT+rjV+/vz5N1Gk/wJTYfz48fDlgqkWwG3oBdFKMeeSRyD0
bCv33RVN5ElwME5cGRcntgZzddjUyrKysgMHDsjLy0PvUSx8587X978pYEEk
ZmeDnXZPVQ1srK+84eKzoHdDhw5t06ZNjWS5TCZz27ZtzZo1u3TpUo2PQH8L
/rubmxuq2iIKXBVdXV1uy843amjl69evmzdvTmXpMTMzqzVrU3k5VsnFi7FE
qqig5cuRv7+YqyQF1PktVYi2GODbikRrQKOrL5jlbuKSaKWYc9zlFfRs+x1F
sHQdY26O2rbFszCim5FnHza18uHDh/DOv//+u3qcvPAIC8NCCXIpolz0Z1z9
hsyy2W7NzQKZqKgoJSUlDQ2NGsdpNNrUqVPB/IiNja3xr4MHD2pra1NDmuDO
d+7cGaSTJUbZ2dkgW6wwy5SUFH9/f0FtplyN6loJl1NXV6dGXxUVFePj43/x
AShwTAxeGyslhSPDDQ1RerpEGJAUcI+HDh0yh+YsUpYsWVI9JYJwAGWcOXMm
FbIFgGhyt2qJaKWYs+XkI7VZNhfusBXAxmfAk50xAweibN4sgqtzDjtamZ6e
Dm5Rhw4d+LZtBKeAk96lC+5v2QtK5Dv3X0YMNbRdtsudi8+C/yUrK6uvr1/j
OGhcly5d+vfvX8NPj46O7tGjx/z5862+o6CgUP1toFmgUyyjxdXVdcqUKTU2
kBIELK0E1d6/fz/8Dd0gaD0cqRmoWVqKfcmFC3HinQ4dsC/p4yMRpmN1wPE/
d+6csbGxaIthYWEh5MiuysrK+/fvgwlEDbCDYkpLS5uYmHARjku0UsxZbOkG
PdujN1EiuDZUp4kTsSF99KgIrs459WoleDHgToJn5OHhIbKQPBoNL1YNDES8
JQ3jmnehScNmn56x9hIXuYUfPXokIyNTwz2BJ+ng4ADHN2zYUP2pUpPCBgYG
7tUASe3VqxcrawH0PNW18ubNm0LWSnAxunXrRnkc4H0UVd+MG76pkBAsjqCS
f/6JFizAX5w4rQThiBs3bvxs5AiZPXv2gFwK84olJSXgzEKN7d27N3zFcnJy
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
jJmZGQyGFy9eBEWuXbt25cqVmZmZIFY4aEGUYE8ejyfdHoWQI0wW7/qjqAXb
vKTnDM3PPUnKLGnJKVkWC5s2Dd9q8ddfeF44BaAQV8LB6eqKX3Lt0gVfzyN7
UCkSS7LyK0+4vtJY7gzv4dyNly7cDEHrXcmlxbkIHj16BAPmy5cvFdErBJVp
Tu7011FlBlah+lZhr6JKm7/aB6ynpqb25r+lDMFl169fly42Ky4uhklav379
6nPIw//u2bMHhjuYwoH4YPL2+++/l5aWQlBZUFDA4XBWrFihra1tZGRU2GAP
AmhUQ0ODR2w6tfZGYWm1he3TycucISaCfz3uhjHZPJnX/MBhNnAgrsv//Q/L
z5d7JxXiynv38FOvIEp45XLZKn7C28PmCnyex/616gK8bzDT2HnqgfyrbCNk
B7kSISvNcaVIXBuTXrXFNgYCzKv+eTxBs2KKrKys0aNHF/53Yx001L9/f0tL
S2lOjISEBBUVFXt7+/qnDB48WFdX19nZ+eDBgyYmJvHx8fUDMhjT3d19yJAh
ISEh9XeCXrW0tExNTdESbkXDF4heh2WsP3RbVd9ugqHDyn23XtLS4U4ZXkIo
xJ4+xQYNwpfFzp8Pn7d8e6gQVz55ggeVhoay1nEWiSRB0TkbDt8FRY7Vs1tm
dvPx2xRQp5y7h2gRyJUIWWl+Ta6sIpbphQQtc5qtb0ZzVvvcvn1bR0enpqam
/h6RSLR06dJhw4bVJ8RISUkBV5qbm0t/hW706tXLx8cnNjY2OzubzWY3NCCT
yVy7du2oUaPSGhR7otPpAwcO9PT0bN6fi2gV8GGUVbLdb4dqbrgEgZLGchdL
R/+EdLq4+dUV4QO9efOfXSTbt8s3/Z08XSkW4/W2Kirwc7Dg94KC5j9VIqlN
zSk74fZKGk5OX+Nme/V9USkTTeeoA3IlQlZkql/J4YmsvfHVPlvtYvNKOU18
9yHc27Zt25EjRyQNUmcHBwf36NGj4Z2hoaEgRwgzpb8+fPiwW7du0v1NLBYL
7g8KCpLe5nA4VlZWEFdqaGjcunWrvLxcWik7Kirqm2++efXqFYjVy8ursrKy
pe8EorlIamvp5TVmNk8guoSI6Y+ljibWDwvo1c01Jnz6/v54ceTYWFyd8qu2
IzdXQq+8vfHU6OvX4xntmu04sURSWsk64vJCfZkTvDPjDezXHPTNLWLIMJdA
EAJyJUJWZK31zOWLr7/IX3QwdAOe26fqUzWDsrKyfvvtt+fPn9ffIxaLV65c
2a9fv4brxyD2BDnWn4MtLCz8+++/1dXVIX5csmTJ0aNHeTwel8vdtGnTvHnz
Dh8+DLdBwRBaGhkZgXnhKRkZGRCoTpkyBV787Nmz6KolYQiE4oCQ9O0n70N0
CdHTNGO3Y64BYfH5zUr1A1FbYSHuoMxMbNs2vFCyPIwpH1dWVeHFtr7+Gvvi
C2zBAqx5RWa5fGFsStFZz8BZ6y5KL01uPHz3ydtkHh9tCaEiyJUIWZHVlVjd
5ctXUaVLDoeDMV9FlTWqS19fX3BlcXFx/T0QGKqpqX333Xdnzpxx+Bc9Pb1O
nTqBMesfRqfT3dzcnJyckpOTpXEr+BEe4OfnJ10um5eX5+zsHB0dXf8UiD1t
bGwgtGwYwyKIQSAUvQ7LMj7gAzEmOGLiEsfdZx69i8zmcIWfj8ZYLGzxYvxk
7PffwxGDtXoNc2tdCT0uKsI2bcJX8sDPwoWfPfVaW3cZNzw+/6Cjv7qRE7wD
4w3tl+y98ehNEto4SWWQKxGy0gJXYnVXZGIyqladjNSzDL36PI//39U+EEJC
YHjw4MGGyQFAgiBKCAm3/cvGjRuHDBnSp08flM9f2ams5rwIStt81G+8Ab55
cMoKF7DntUdRFdWcpp4GcxsaDVNXx/ct9uuH7dnTmm3+WOtdCRGltjZuSeiP
mRm+6rVJ37O5Ar+AhA2H70xddWGsnq2qnh381Y8Ck0orWejSJMVBrkTISstc
idXNqIsreHuc47XMaXa3MxomK0hLSxs3blxiYmLDx/v7+/fu3fvQoUPCf8nK
ygJXampqMhgoGWZbgMcXhsXnbT1+729jV1V9u3EGdrPXX3S4/j4+rZjF4X/y
ml1+PrZoEb4vo3NnbMoULD29xR1ooSvBa2DJmho8sDU3xwYPxi5fxj5RuxBm
iaDI5KzSS3fCtLd4QhQJivxzpcv6Q3deh2VCLIksqRQgVyJkpcWulFLNFp73
zZhjGrzbOb6EwYdxAiQ4b968j8tWOjo69uzZ08/PT/orDCk+Pj7du3d3c3ND
507bEuDErIJKa483oJKxurbSE7N6u65deRCZnlve+B4TEJO9Pfbtt1i3bnik
CYcR3CO7dFriSrEYv1o6cyZuSTgOq6vx866NNS0UinMKGbf945eYXp+01HFM
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
EAgEAoFAIBAIBAKBQCAQCAQCgWi//H/+m/7K
     "], {{0, 192.}, {367.2, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{120., 120.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False], InsetBox[
    TemplateBox[{
      TemplateBox[{
        GraphicsBox[{}, {
         DefaultBaseStyle -> {"CanvasGraphics"}, ImageSize -> Medium, 
          PlotRange -> 1}]}, "CanvasFrame"]},
     "Canvas"], Scaled[{0.5, 0.5}], Center]},
  DefaultBaseStyle->"ImageGraphics",
  ImageMarkers->{
    Rectangle[{145., 156.00000000000006`}, {161.00000000000003`, 
     166.00000000000006`}], 
    Rectangle[{149.00000000000006`, 33.}, {164., 40.}]},
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSize->Automatic,
  ImageSizeRaw->{367.2, 192.},
  PlotRange->{{0., 367.2}, {0., 192.}},
  PlotRangePadding->Automatic]], "Input",ExpressionUUID->"555d8d6b-4a4d-4345-\
b736-a0ec8e352314"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Run", " ", "this", " ", "one"}], ",", " ", 
    RowBox[{"and", " ", "be", " ", "patient"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"SPDCtypeII", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NormDistList", "[", 
      RowBox[{"42", ",", " ", "45", ",", " ", 
       RowBox[{"{", 
        RowBox[{"42.62", ",", "43.52"}], "}"}], ",", " ", "0.05", ",", " ", 
       "0.01", ",", 
       RowBox[{"1", "/", "10"}], ",", "0.01"}], "]"}], "Degree"}], ",", 
    "\[Lambda]p"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.951924717673931*^9, 3.9519247198245773`*^9}, {
   3.9519251701486473`*^9, 3.951925172007931*^9}, {3.951934630838504*^9, 
   3.951934637422764*^9}, 3.9519412850963593`*^9, {3.9519434764858313`*^9, 
   3.9519435175067425`*^9}},ExpressionUUID->"7c7b577f-b869-4c9c-b5f5-\
a646af8c25e3"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 51, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 43, 
       "\!\(\*SubscriptBox[\(\[Theta]\), \(OA\)]\)"}, 1, 86, 1}}, 
    Typeset`size$$ = {624., {104., 108.44287040550265`}}, Typeset`update$$ = 
    0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 43}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Row[{
         Part[$CellContext`firstPlots, $CellContext`i$$], 
         Part[$CellContext`secondPlots, $CellContext`i$$]}], 
      "Specifications" :> {{{$CellContext`i$$, 43, 
          "\!\(\*SubscriptBox[\(\[Theta]\), \(OA\)]\)"}, 1, 86, 1, Appearance -> 
         "Open"}}, 
      "Options" :> {
       ControlPlacement -> Top, LabelStyle -> Medium, Paneled -> False}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{646., {151.34743643933908`, 157.65256356066092`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.9519352568231406`*^9, 3.9519352666944017`*^9}, {
   3.9519413111734734`*^9, 3.951941315688882*^9}, 3.9519423449407153`*^9, 
   3.95194237683212*^9},
 CellLabel->
  "Out[238]=",ExpressionUUID->"7761980a-7276-40d7-86ff-dc41ba458df9"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "SPDCtypeII", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SPDCtypeII", "[", "\[Lambda]p_", "]"}], ":=", 
   RowBox[{"SPDCtypeII", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"42", ",", "42.5", ",", ".05"}], "]"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"42.75", ",", "43", ",", ".01"}], "]"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"43.005", ",", "43.6", ",", ".005"}], "]"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"43.61", ",", "44", ",", ".01"}], "]"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"44", ",", "45", ",", ".005"}], "]"}]}], "]"}], "Degree"}], 
     ",", "\[IndentingNewLine]", "\[Lambda]p"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SPDCtypeII", "[", 
   RowBox[{"\[Theta]OA_", ",", "\[Lambda]p_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "angles", ",", "results", ",", "resultsInterp", ",", "plots", ",", 
      "f\[Theta]sIIs", ",", "f\[Theta]iIIs", ",", 
      RowBox[{"colors", "=", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[<|"color" -> RGBColor[0.368417, 0.506779, 0.709798]|>,
          "RGBColorSwatchTemplate"], ",", 
         TemplateBox[<|"color" -> RGBColor[0.880722, 0.611041, 0.142051]|>,
          "RGBColorSwatchTemplate"], ",", 
         TemplateBox[<|"color" -> RGBColor[0.368417, 0.506779, 0.709798]|>,
          "RGBColorSwatchTemplate"], ",", 
         TemplateBox[<|"color" -> RGBColor[0.880722, 0.611041, 0.142051]|>,
          "RGBColorSwatchTemplate"]}], "}"}]}], ",", 
      RowBox[{"xmax", "=", "10"}], ",", "xmin", ",", "ymax", ",", "ymin", ",",
       "frame1", ",", "length"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"angles", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ListQ", "[", "\[Theta]OA", "]"}], ",", "\[Theta]OA", ",", 
        RowBox[{"{", "\[Theta]OA", "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"results", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"typeII", "[", 
         RowBox[{"#", ",", "0.39"}], "]"}], "&"}], "/@", "angles"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"resultsInterp", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"plotAndInterpolateTypeII", "[", 
         RowBox[{
          RowBox[{"results", "[", 
           RowBox[{"[", "#", "]"}], "]"}], ",", 
          RowBox[{"angles", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "angles", "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"plots", ",", "f\[Theta]sIIs", ",", "f\[Theta]iIIs"}], "}"}], 
      "=", 
      RowBox[{"Transpose", "[", "resultsInterp", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"f\[Theta]sIIMins", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Quiet", "[", 
           RowBox[{"FindMinimum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"f\[Theta]sIIs", "[", 
               RowBox[{"[", "#", "]"}], "]"}], "[", "\[Theta]s", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Theta]s", ",", "3.7"}], "}"}]}], "]"}], "]"}], "&"}],
          "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "f\[Theta]sIIs", "]"}], "]"}]}]}], ";"}], 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"length", "=", 
      RowBox[{"Length", "[", "f\[Theta]sIIs", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"xmin", "=", 
      RowBox[{"-", "xmax"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ymax", "=", "xmax"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ymin", "=", 
      RowBox[{"-", "ymax"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"frame1", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"Axes", "\[Rule]", "True"}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
        " ", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"ymin", ",", "ymax"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Ticks", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"tickDivDegreesBothSides", "[", 
            RowBox[{"xmin", ",", "xmax", ",", "5", ",", "4", ",", "0"}], 
            "]"}], ",", 
           RowBox[{"tickDivDegreesBothSides", "[", 
            RowBox[{"ymin", ",", "ymax", ",", "5", ",", "4", ",", "0"}], 
            "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "->", "200"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"firstPlots", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"secondPlots", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "<=", "length"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"s1", "=", 
         RowBox[{"Quiet", "@", 
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"f\[Theta]sIIs", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "[", "\[Theta]1", "]"}], "==", 
             "0.780"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Theta]1", ",", "5"}], "}"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"s2", "=", 
         RowBox[{"Quiet", "@", 
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"f\[Theta]sIIs", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "[", "\[Theta]2", "]"}], "==", 
             "0.780"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Theta]2", ",", "1"}], "}"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"i1", "=", 
         RowBox[{"Quiet", "@", 
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"f\[Theta]iIIs", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "[", "\[Theta]1", "]"}], "==", 
             "0.780"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Theta]1", ",", 
              RowBox[{"-", "5"}]}], "}"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"i2", "=", 
         RowBox[{"Quiet", "@", 
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"f\[Theta]iIIs", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "[", "\[Theta]2", "]"}], "==", 
             "0.780"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Theta]2", ",", 
              RowBox[{"-", "1"}]}], "}"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"points", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Chop", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"f\[Theta]sIIs", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "[", "\[Theta]1", "]"}], "-", 
              "0.780"}], "/.", "s1"}], "]"}], "==", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"points", ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{".78", ",", "\[Theta]1"}], "}"}], "/.", "s1"}]}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Chop", "[", 
               RowBox[{
                RowBox[{"\[Theta]2", "-", "\[Theta]1"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"s1", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"s2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], "!=", 
              "0"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"points", ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{".78", ",", "\[Theta]2"}], "}"}], "/.", "s2"}]}], 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"centerS", "=", 
               RowBox[{"Mean", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"s1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"s2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"radiusS", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"\[Theta]2", "-", "\[Theta]1"}], "]"}], "/", "2"}], 
                "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"s1", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"s2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]}], ";"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"(*", "Else", "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"centerS", "=", 
               RowBox[{"\[Theta]1", "/.", "s1"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"radiusS", "=", "0.1"}], ";"}]}], "\[IndentingNewLine]",
             "]"}], ";"}], "\[IndentingNewLine]", ",", 
          RowBox[{"(*", "Else", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"centerS", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"radiusS", "=", "0"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Chop", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"f\[Theta]iIIs", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "[", "\[Theta]1", "]"}], "-", 
              "0.780"}], "/.", "i1"}], "]"}], "==", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"points", ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{".78", ",", "\[Theta]1"}], "}"}], "/.", "i1"}]}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Chop", "[", 
               RowBox[{
                RowBox[{"\[Theta]2", "-", "\[Theta]1"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"i1", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"i2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], "!=", 
              "0"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"points", ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{".78", ",", "\[Theta]2"}], "}"}], "/.", "i2"}]}], 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"centerI", "=", 
               RowBox[{"Mean", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"i1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"i2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"radiusI", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"\[Theta]2", "-", "\[Theta]1"}], "]"}], "/", "2"}], 
                "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"i1", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"i2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]}], ";"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"(*", "Else", "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"centerI", "=", 
               RowBox[{"\[Theta]1", "/.", "i1"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"radiusI", "=", "0.1"}], ";"}]}], "\[IndentingNewLine]",
             "]"}], ";"}], "\[IndentingNewLine]", ",", 
          RowBox[{"(*", "Else", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"centerI", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"radiusI", "=", "0"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"secondPlot", "=", 
         RowBox[{"Show", "[", 
          RowBox[{"frame1", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"centerS", "!=", "0"}], "&&", 
              RowBox[{"centerI", "!=", "0"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"Graphics", "[", 
              RowBox[{"{", 
               RowBox[{"Thick", ",", "\[IndentingNewLine]", 
                RowBox[{"colors", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"Circle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "centerS"}], "}"}], ",", "radiusS"}], 
                 "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"colors", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{"Circle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "centerI"}], "}"}], ",", "radiusI"}], 
                 "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", "}"}]}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"secondPlots", ",", "secondPlot"}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"firstPlot", "=", 
         RowBox[{"Show", "[", 
          RowBox[{
           RowBox[{"ParametricPlot", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"f\[Theta]sIIs", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "[", "\[Theta]", "]"}], 
                 ",", "\[Theta]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "2"}], ",", "50"}], "}"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\[Theta]", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"f\[Theta]sIIs", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "[", "\"\<Domain\>\"", 
                  "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"f\[Theta]sIIs", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "[", "\"\<Domain\>\"", 
                  "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"PlotStyle", "->", "Automatic"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"AspectRatio", "\[Rule]", 
              RowBox[{"1", "/", "GoldenRatio"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"PlotRange", "->", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0.61", ",", "0.96"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "15"}], ",", "15"}], "}"}]}], "}"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"Directive", "[", "Black", "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{
              "\"\<Type II SPDC, \!\(\*SubscriptBox[\(\[Theta]\), \(OA\)]\) = \
\>\"", "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"Round", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"angles", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "/", "Degree"}], ",", 
                  "0.01"}], "]"}], "]"}], "<>", "\"\<\[Degree]\>\""}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"PlotLegends", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<\!\(\*SubsuperscriptBox[\(\[Theta]\), \(s\), \(\(\\\ \
\)\(ext\)\)]\)\>\"", ",", 
                "\"\<\!\(\*SubsuperscriptBox[\(\[Theta]\), \(i\), \(\(\\\ \
\)\(ext\)\)]\)\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"AxesLabel", "->", 
              RowBox[{"{", 
               RowBox[{
               "\"\<\[Lambda] (\[Mu]m)\>\"", ",", 
                "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(out\)]\)\>\""}], 
               "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"Ticks", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Automatic", ",", "tick5Degrees"}], "}"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"ImageSize", "->", "300"}]}], "\[IndentingNewLine]", 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"ParametricPlot", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"f\[Theta]iIIs", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "[", "\[Theta]", "]"}], ",", 
               "\[Theta]"}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\[Theta]", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"f\[Theta]iIIs", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "[", "\"\<Domain\>\"", 
                  "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"f\[Theta]iIIs", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "[", "\"\<Domain\>\"", 
                  "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"PlotStyle", "->", 
              RowBox[{"colors", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"AspectRatio", "\[Rule]", 
              RowBox[{"1", "/", "GoldenRatio"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"PlotRange", "->", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0.61", ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "15"}], ",", "20"}], "}"}]}], "}"}]}]}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"ListPlot", "[", 
            RowBox[{"points", ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"Purple", ",", "Thick", ",", "Circle"}], "]"}]}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{"Purple", ",", 
              RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0.78", ",", "20"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0.78", ",", 
                   RowBox[{"-", "15"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
            "]"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"firstPlots", ",", "firstPlot"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Row", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"firstPlots", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Second", " ", "Column"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"secondPlots", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Round", "[", 
            RowBox[{
             RowBox[{"Length", "[", "firstPlots", "]"}], "/", "2"}], "]"}], 
           ",", "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(OA\)]\)\>\""}], "}"}],
          ",", "1", ",", 
         RowBox[{"Length", "[", "firstPlots", "]"}], ",", "1", ",", 
         RowBox[{"Appearance", "->", "\"\<Open\>\""}]}], "}"}], ",", 
       RowBox[{"ControlPlacement", "\[Rule]", "Top"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", "Medium"}], ",", 
       RowBox[{"Paneled", "\[Rule]", "False"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.9519216341886077`*^9, {3.951924539607986*^9, 3.95192467628808*^9}, {
   3.9519247078350344`*^9, 3.9519247882330484`*^9}, 3.9519248201166162`*^9, {
   3.951924868896619*^9, 3.951924954288023*^9}, {3.9519249890354257`*^9, 
   3.951924990105434*^9}, {3.9519250515232377`*^9, 3.951925149168125*^9}, {
   3.951925208828915*^9, 3.9519252228432517`*^9}, {3.951925253294682*^9, 
   3.9519252700351944`*^9}, {3.951925320407765*^9, 3.951925336467758*^9}, {
   3.951926223798586*^9, 3.9519262266552896`*^9}, 3.9519265559705486`*^9, {
   3.9519320314532824`*^9, 3.9519320325104117`*^9}, {3.9519348823670273`*^9, 
   3.9519349386762524`*^9}, {3.951935058166727*^9, 3.951935099371007*^9}, {
   3.951941769759187*^9, 3.951941774606367*^9}, 3.95194230877425*^9, 
   3.9519425371147647`*^9},
 Background->GrayLevel[0.85],
 CellLabel->
  "In[239]:=",ExpressionUUID->"bcab2e82-d44a-45fd-8f79-d9f550e3dfbb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "typeII", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"typeII", "[", 
   RowBox[{
    RowBox[{"\[Theta]OA_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Lambda]p_", "?", "NumericQ"}], ",", 
    RowBox[{"numPoints_", ":", "25"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Theta]seVal", ",", "\[Lambda]\[Theta]ioVal", ",", "xvalII", ",", 
      "yvalII", ",", "intGuess", ",", "rules", ",", "resultt"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Theta]seVal", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "se"], ",", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["\[Theta]", "se"], ",", 
          RowBox[{
           RowBox[{"-", "15"}], "Degree"}], ",", 
          RowBox[{"13", "Degree"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"13", "+", "15"}], ")"}], 
            RowBox[{"Degree", "/", 
             RowBox[{"(", 
              RowBox[{"numPoints", "-", "1"}], ")"}]}]}], "//", "N"}]}], 
         "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]\[Theta]ioVal", "=", 
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"rules", "=", 
            RowBox[{"Quiet", "[", 
             RowBox[{"FindRoot", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    SubscriptBox["k", "se"], "[", 
                    RowBox[{"\[Lambda]", ",", 
                    RowBox[{"\[Theta]OA", "-", "#"}]}], "]"}], 
                    RowBox[{"Cos", "[", "#", "]"}]}], "+", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["k", "io"], "[", 
                    FractionBox[
                    RowBox[{"\[Lambda]", " ", "\[Lambda]p"}], 
                    RowBox[{"\[Lambda]", "-", "\[Lambda]p"}]], "]"}], 
                    RowBox[{"Cos", "[", 
                    SubscriptBox["\[Theta]", "io"], "]"}]}]}], "==", 
                  RowBox[{
                   SubscriptBox["k", "pe"], "[", 
                   RowBox[{"\[Lambda]p", ",", "\[Theta]OA"}], "]"}]}], " ", 
                 ",", " ", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    SubscriptBox["k", "se"], "[", 
                    RowBox[{"\[Lambda]", ",", 
                    RowBox[{"\[Theta]OA", "-", "#"}]}], "]"}], 
                    RowBox[{"Sin", "[", "#", "]"}]}], "+", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["k", "io"], "[", 
                    FractionBox[
                    RowBox[{"\[Lambda]", " ", "\[Lambda]p"}], 
                    RowBox[{"\[Lambda]", "-", "\[Lambda]p"}]], "]"}], 
                    RowBox[{"Sin", "[", 
                    SubscriptBox["\[Theta]", "io"], "]"}]}]}], "==", "0"}]}], 
                "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Lambda]", ",", "1."}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["\[Theta]", "io"], ",", "0"}], "}"}]}], 
                "}"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"0", "==", 
               RowBox[{"Chop", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    SubscriptBox["k", "se"], "[", 
                    RowBox[{"\[Lambda]", ",", 
                    RowBox[{"\[Theta]OA", "-", "#"}]}], "]"}], 
                   RowBox[{"Cos", "[", "#", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{
                    SubscriptBox["k", "io"], "[", 
                    FractionBox[
                    RowBox[{"\[Lambda]", " ", "\[Lambda]p"}], 
                    RowBox[{"\[Lambda]", "-", "\[Lambda]p"}]], "]"}], 
                   RowBox[{"Cos", "[", 
                    SubscriptBox["\[Theta]", "io"], "]"}]}], "-", 
                  RowBox[{
                   SubscriptBox["k", "pe"], "[", 
                   RowBox[{"\[Lambda]p", ",", "\[Theta]OA"}], "]"}]}], "/.", 
                 "rules"}], "]"}]}], "\[IndentingNewLine]", "&&", " ", 
              RowBox[{"0", "==", 
               RowBox[{"Chop", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    SubscriptBox["k", "se"], "[", 
                    RowBox[{"\[Lambda]", ",", 
                    RowBox[{"\[Theta]OA", "-", "#"}]}], "]"}], 
                   RowBox[{"Sin", "[", "#", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{
                    SubscriptBox["k", "io"], "[", 
                    FractionBox[
                    RowBox[{"\[Lambda]", " ", "\[Lambda]p"}], 
                    RowBox[{"\[Lambda]", "-", "\[Lambda]p"}]], "]"}], 
                   RowBox[{"Sin", "[", 
                    SubscriptBox["\[Theta]", "io"], "]"}]}]}], "/.", 
                 "rules"}], "]"}]}]}], "\[IndentingNewLine]", ",", 
             RowBox[{"(*", "Then", "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"resultt", "=", 
               RowBox[{"Values", "[", "rules", "]"}]}], ";"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"(*", "Else", "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"resultt", "=", "\"\<nope\>\""}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "resultt"}], "\[IndentingNewLine]", ")"}], 
         "&"}], ",", "\[Theta]seVal"}], "\[IndentingNewLine]", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xvalII", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"First", "[", 
           RowBox[{"#", ",", "#"}], "]"}], ",", 
          FractionBox[
           RowBox[{
            RowBox[{"First", "[", 
             RowBox[{"#", ",", "#"}], "]"}], " ", "\[Lambda]p"}], 
           RowBox[{
            RowBox[{"First", "[", 
             RowBox[{"#", ",", "#"}], "]"}], "-", "\[Lambda]p"}]]}], "}"}], 
        "&"}], "/@", "\[Lambda]\[Theta]ioVal"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"yvalII", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "[", "\[Theta]seVal", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"yvalII", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]seVal", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"Last", "[", 
            RowBox[{
             RowBox[{"\[Lambda]\[Theta]ioVal", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"\[Lambda]\[Theta]ioVal", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Return", " ", "both", " ", "lists"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xvalII", ",", "yvalII"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.94846119182502*^9, 3.948461245396124*^9}, {
   3.948461281124943*^9, 3.9484613585086927`*^9}, {3.948461403897089*^9, 
   3.948461446318207*^9}, {3.948461500126128*^9, 3.9484615104299364`*^9}, {
   3.9484615484069204`*^9, 3.948461573755322*^9}, {3.9484616127162466`*^9, 
   3.9484616553964205`*^9}, {3.9484617265542912`*^9, 
   3.9484617419675035`*^9}, {3.9484617833425393`*^9, 
   3.9484618004366302`*^9}, {3.948461852782613*^9, 3.948461916425706*^9}, {
   3.9484619509505563`*^9, 3.948462202765148*^9}, {3.9484622668130956`*^9, 
   3.9484622669676476`*^9}, {3.9484622981306767`*^9, 3.948462308289861*^9}, 
   3.9484625320287285`*^9, {3.9484627274088016`*^9, 3.9484628341324644`*^9}, {
   3.9484753243525276`*^9, 3.948475331713335*^9}, 3.948475525455655*^9, {
   3.9484758845793476`*^9, 3.948475885448825*^9}, {3.9484766498911448`*^9, 
   3.948476660576789*^9}, {3.9484767827895823`*^9, 3.9484767918966217`*^9}, {
   3.9518611159181986`*^9, 3.9518611483345647`*^9}, {3.95186134934743*^9, 
   3.951861351250622*^9}, {3.9519202462125034`*^9, 3.9519202622316895`*^9}, 
   3.951920345714912*^9, {3.9519205291690426`*^9, 3.9519205301415462`*^9}, {
   3.951926578319681*^9, 3.9519266531153293`*^9}, {3.951926702928586*^9, 
   3.9519267045223*^9}, {3.951933132707261*^9, 3.951933212495812*^9}, {
   3.951933343156476*^9, 3.9519333553055463`*^9}, {3.9519335884517317`*^9, 
   3.9519335891682997`*^9}, {3.9519336619636507`*^9, 
   3.9519336854072666`*^9}, {3.951942543894478*^9, 3.9519425472927547`*^9}},
 CellLabel->
  "In[242]:=",ExpressionUUID->"007db1ed-79bb-430c-b11b-bb0bf0880a97"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "plotAndInterpolateTypeII", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotAndInterpolateTypeII", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xvalII_", ",", "yvalII_"}], "}"}], ",", "\[Theta]oa_"}], "]"}], 
  ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "xval", ",", "yval", ",", "txval", ",", "tyval", ",", "val1", ",", 
      "val2", ",", "lpII", ",", "f\[Theta]sII", ",", "pp\[Theta]sII", ",", 
      "f\[Theta]iII", ",", "pp\[Theta]iII"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"xval", "=", "xvalII"}], ";", "\[IndentingNewLine]", 
      RowBox[{"yval", "=", "yvalII"}], ";"}], "*)"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xval", ",", "yval"}], "}"}], "=", 
      RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"xvalII", ",", "yvalII"}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"_", "?", "RealNumberQ"}], ",", 
             RowBox[{"_", "?", "RealNumberQ"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"_", "?", "RealNumberQ"}], ",", 
             RowBox[{"_", "?", "RealNumberQ"}]}], "}"}]}], "}"}]}], "]"}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"txval", "=", 
      RowBox[{"Transpose", "[", "xval", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tyval", "=", 
      RowBox[{"Transpose", "[", "yval", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"val1", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"txval", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"tyval", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"val2", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"txval", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"tyval", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"val1", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"SnellsAngle", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{
             SubscriptBox["n", "eff"], "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "1"}], "]"}]}], 
         "}"}], "&"}], "/@", "val1"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"not", " ", 
       RowBox[{"right", "?"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"val2", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"SnellsAngle", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{
             SubscriptBox["n", "o"], "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "1"}], "]"}]}], 
         "}"}], "&"}], "/@", "val2"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"val1", ",", "val2"}], "}"}], "=", 
      RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"val1", ",", "val2"}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"a_", "?", "RealNumberQ"}], ",", 
              RowBox[{"b_", "?", "RealNumberQ"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"c_", "?", "RealNumberQ"}], ",", 
              RowBox[{"d_", "?", "RealNumberQ"}]}], "}"}]}], "}"}], "->", 
          RowBox[{"Re", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"a", ",", "b"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"c", ",", "d"}], "}"}]}], "}"}], "]"}]}]}], "]"}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Change", " ", "y", " ", "values", " ", "to", " ", "Degrees"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"val1", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{
            SuperscriptBox["Degree", 
             RowBox[{"-", "1"}]], "//", "N"}]}], "}"}], "*", "#"}], "&"}], "/@",
        "val1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"val2", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{
            SuperscriptBox["Degree", 
             RowBox[{"-", "1"}]], "//", "N"}]}], "}"}], "*", "#"}], "&"}], "/@",
        "val2"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"lpII", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"val1", ",", "val2"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "Black", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{
         "\"\<Type II SPDC, \!\(\*SubscriptBox[\(\[Theta]\), \(OA\)]\) = \
\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"Round", "[", 
            RowBox[{
             RowBox[{"\[Theta]oa", "/", "Degree"}], ",", "0.1"}], "]"}], 
           "]"}], "<>", "\"\<\[Degree]\>\""}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubsuperscriptBox[\(\[Theta]\), \(s\), \(ext\)]\)\>\"", 
           ",", "\"\<\!\(\*SubsuperscriptBox[\(\[Theta]\), \(i\), \
\(ext\)]\)\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"Frame", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "True"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"tick5Degrees", ",", "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", "None"}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"FrameLabel", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(out\)]\)\>\"", ",", 
             "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<\[Lambda] (\[Mu]m)\>\"", ",", "None"}], "}"}]}], 
          "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Interpolate", " ", "curves"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"f\[Theta]sII", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"Reverse", "[", 
        RowBox[{"val1", ",", "2"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pp\[Theta]sII", "=", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"f\[Theta]sII", "[", "y", "]"}], ",", "y"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"Min", "[", 
           RowBox[{"Map", "[", 
            RowBox[{"Last", ",", "val1"}], "]"}], "]"}], ",", 
          RowBox[{"Max", "[", 
           RowBox[{"Map", "[", 
            RowBox[{"Last", ",", "val1"}], "]"}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotStyle", "->", "Thin"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"f\[Theta]iII", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"Reverse", "[", 
        RowBox[{"val2", ",", "2"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pp\[Theta]iII", "=", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"f\[Theta]iII", "[", "y", "]"}], ",", "y"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"Min", "[", 
           RowBox[{"Map", "[", 
            RowBox[{"Last", ",", "val2"}], "]"}], "]"}], ",", 
          RowBox[{"Max", "[", 
           RowBox[{"Map", "[", 
            RowBox[{"Last", ",", "val2"}], "]"}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorData", "[", "2", "]"}], "[", "1", "]"}], ",", 
           "Thin"}], "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Show", "[", 
        RowBox[{"lpII", ",", "pp\[Theta]sII", ",", "pp\[Theta]iII"}], "]"}], 
       ",", "f\[Theta]sII", ",", "f\[Theta]iII"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.9055906806818686`*^9, 3.9055907455455575`*^9}, {
   3.905590797152387*^9, 3.905590830945058*^9}, {3.9059605980615187`*^9, 
   3.9059605986942973`*^9}, {3.9059606295087204`*^9, 3.905960634521577*^9}, {
   3.9059606676482315`*^9, 3.905960686916788*^9}, 3.9059607205700636`*^9, {
   3.9059607955302176`*^9, 3.9059608005871572`*^9}, 3.906110530221567*^9, {
   3.9061105624045286`*^9, 3.906110644268611*^9}, {3.9061106750566783`*^9, 
   3.906110703069298*^9}, {3.9061107409417696`*^9, 3.906110764606324*^9}, {
   3.9061108178721104`*^9, 3.9061108181916304`*^9}, {3.90611085174804*^9, 
   3.9061109395879335`*^9}, {3.9061109937340083`*^9, 
   3.9061111666036673`*^9}, {3.906111424303751*^9, 3.906111437199462*^9}, {
   3.906112183763237*^9, 3.9061121909786844`*^9}, {3.906112258749728*^9, 
   3.9061122857100887`*^9}, {3.9061124083426003`*^9, 
   3.9061124128965287`*^9}, {3.906112447100712*^9, 3.9061124521034327`*^9}, {
   3.906560719180187*^9, 3.9065607297685623`*^9}, {3.9065608055959835`*^9, 
   3.90656085568069*^9}, {3.9065608890360875`*^9, 3.9065608899621873`*^9}, {
   3.9065609292117825`*^9, 3.906560932555128*^9}, {3.9484629820094776`*^9, 
   3.948462995366418*^9}, {3.948463112956907*^9, 3.9484631198891726`*^9}, {
   3.9484631587960086`*^9, 3.948463165846328*^9}, {3.9484632074241724`*^9, 
   3.9484632114028516`*^9}, {3.948463323165908*^9, 3.948463388593944*^9}, {
   3.9484634234099083`*^9, 3.9484634382383146`*^9}, {3.9484636065408835`*^9, 
   3.9484636251388583`*^9}, {3.9484648882369833`*^9, 
   3.9484649451696024`*^9}, {3.948465130537631*^9, 3.9484652385797057`*^9}, {
   3.9484659269575415`*^9, 3.9484659354217653`*^9}, {3.9484662495483265`*^9, 
   3.948466277456299*^9}, {3.9484734065343604`*^9, 3.9484734067629385`*^9}, {
   3.9484738570917463`*^9, 3.9484739483004236`*^9}, 3.948473982480867*^9, {
   3.948474031041949*^9, 3.9484740340836573`*^9}, {3.9484741081778507`*^9, 
   3.948474114207515*^9}, {3.948476098426114*^9, 3.948476101982318*^9}, {
   3.9518616239061804`*^9, 3.951861625588177*^9}, {3.9518616977057924`*^9, 
   3.9518616981105804`*^9}},
 CellLabel->
  "In[244]:=",ExpressionUUID->"716b4117-dfb9-4dfc-898b-108762c50d7c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"temp\[Theta]", "=", 
   RowBox[{"44", "Degree"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temp", " ", "=", " ", 
   RowBox[{"typeII", "[", 
    RowBox[{"temp\[Theta]", ",", "0.39"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temp2", "=", 
   RowBox[{"plotAndInterpolateTypeII", "[", 
    RowBox[{"temp", ",", "temp\[Theta]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"temp2", "[", 
  RowBox[{"[", "1", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.951920462565708*^9, 3.9519205167957215`*^9}, 
   3.951942581057736*^9},
 CellLabel->
  "In[246]:=",ExpressionUUID->"83098e69-dead-44c9-b64c-e96c899e0793"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAQMO02pvf+T/m9aGTBBE5wM/5C5Vz
gfg/KgRV3HYUN8AT3F7HKC/3PxhojXaYGjXA8ChkD6Xo9T89jX9uFiMzwFvB
ZTLarfQ/ih0vYKItMcAjKaPPyH7zP/76hE3icy7AuVcLvItb8j9qfm8tc48q
wAhSJPZrRPE/nDI3aWatJsD+ZlX9BDrwP4/IZb8pzSLAkZ3IwxJ77j+8HNTv
TdwdwLK4lnaPouw/65zQpIMfFsAnabBmWfPqP2zWLzJjxQzAlMKNkyB+6T+M
nXpZfJL6v56CC3LPX+g/5BNTFry50T/7V0aE0r7nP2zq3w0cvAFAk4mDALyz
5z8X2TZKu6EQQEgvRnxGMeg/iJ1J4aFlGEA68agUkxPpP4/lJNnoFCBAUDyq
chs76j9NsWYNo/cjQPfwYy0glOs/dsXSGK3bJ0AmXphamRPtP9+3wWW/wStA
+u+TCo+z7j+mwkVukqovQCG7CgRqOPA/rKLDBW/LMUCPDmSD5CTxP4D9lOut
wzNAfYUOONke8j8a1MwvZb41QBdCxeE=
          "]]}, {
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAVdY7mUpy4D+H7WntjnQdQPZ36EdU
vuA/lB1zUiNQHUDGDdsfcxPhP8cH6hrACh1ApHGfIzlz4T94y9wzO50cQFA8
s/eT3+E/qE6XOIj+G0Buy9w65FriP+gLNfESIxtA1KG9KBjo4j/Pr3IV0/sZ
QFG02xfEiuM/+zIOL/h0GEDwRoAEJ0fkP21HRCcCdBZAVZHXZOch5T9Y5Acf
IdUTQFTVGPr5HuY/DzYreRJoEEBrgjEsRT7nP7f+wfG93AdA3GHknPly6D9U
frtyfYv4P5U09xIYk+k/NyljaDLw0b+y3O3UOE7qPyopYYZ9+gLATcMP3uFb
6j/D/ow3nuURwAymoMsex+k/RXr1sgcyGcAg2HObONjoP5ncV0Bb7R7AQemF
anvO5z9VDc8HpJohwDf2zJuoy+Y/oazd8hYqI8BNAKLZT93lP3Vy97z+RyTA
/HWO7RQH5T+0GSPjpA8lwEoccx9oSOQ/uDfHHkuVJcCDCVGSL5/jPxgPZMnj
5yXAtquWie0I4z+b6EgmkRImwAnQw2I=
          "]]}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           Thickness[Tiny]], 
          LineBox[CompressedData["
1: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
LFrKsl2dA6ot9cbelTT8H+pUFy0=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$644003#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[
           0.8588235294117647, 0.00784313725490196, 0.00784313725490196], 
           Thickness[Tiny]], 
          LineBox[CompressedData["
1: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
JzaSc7Abo3cuyCakwTTR88E3XJ/YXgf01hhLg0qLglwn9i+zE/990ZMGHbmy
Gw+waTMZK+ny0pAk+0HZHTss7r199hcpOP5ua+Ua7NgdXU5rmqXgySPeLyZ2
qk2/25eXUlCtqbRuDNfPZ+LCvvR7UjDaNGiajE05vyIi+7AUBNyev68E1+ui
y1mZ2epSQKk/2ZaKvVFicokSRQr4DTsEUdg/Dm9+eVpICkw0K4QJ7BX+St/2
DkhC4cY4w7e4/rOWnrWweioJRqZlW97jftLSGMER+EiCZVXC1vvYkZbNB7du
koTiQi+JRGxqhaF0k60kPEyR8bbD9s4aMHq8VBKyydNznv/rV7t8T54XloSz
/R9WXAnA9UHCQW9pvgS8FxHp2ot9PabgaV6GBOToFS9aj00MizlrJEvA8OJL
9ZO4P55qgyjhKAlIeeQn7oUtf3vl29b1EuDGlomXxP1Vx2rB7uhv4hDnOMVi
4v7scGSitMZYHIY/vMn54YP3x+m6YAt9cUgUXUV7im1xMW3uEy1xkOmkD27E
Nspfdu6hsDiYxS7p3Y/7PbUpZPuNJjEQc15hcRvnB4HOZ/ljYWJwfLXvrxc4
X8S9exJmmicKHykNMbHY05/OLqi4KgqMVbRcC+xItkfH0vOicLg/6dVjDxKF
jP201g8XBSn5jsginFec5xloqROi4PnrXfwRnHfmRmTW/+oSgamA9xc+bcT9
UfOIbomyCDRsmJa7gF1TlREqJCkCQ5NPzWyw37o9LnGeFgaKS2lDqSOJupLG
V4/whIFa+cUwEeetaeH9TkaVwnAo8qr+EpzX0GBgVLmnMLQ1l9NX4nz38qnT
20fZc0Bt9vTe9atxPtums+eFnhCk2Cac+I7zpT7XNmIDTQiS40jry9hxIWFR
7QpCIHmR09llguvV0C6xrtFZ1j4PO4eQVbj+z0s2XJ4+yzKoWrT+IM6vn062
x3LZMyzG/tbPLoY43zkHM23C/7I+NdrdnDsf/78FCXvE0iZZK3ZduJyvjfOu
dvnThUcmWasKP+sbYtts7ZHcuGOSpbTjPjKfRyLJJqNbV5ZNsm4pSs5zo5Mo
5XFXu977CRZRaVwUrkGi3MTFlvYSE6yWv0cNQxXxehk1KydH/2Y1JuxMcMDn
D5Hj1MdUn1+s3lXfP6bi883N5+zNfQu+saglK1+Elwygw256D6pT2KymKD+F
5uMDSHd020JPPrDowsJj7Y4DaN2yazqyuo1IzSok56LSAFo6k2hg9oqLLrT6
HjrT1o+i5+c+3xE2jLaE67xyudqPbk/wGUFhY+j1f0HPFTb2o+Hx4lKpnCk0
4XZ+n4dYPzrkQW0oLRMi7CTmdJ192IcKpkr9qW0ihHzwuGy6Tx8y/qvP9KoV
J7T8ig+oSP07XzIEg7lSRFty4oDTHQF6kTtpX1FNIS7Z1t2bXCdAh8eKurzy
5Qm1N6q31fB5vrReS5IWpEhILW4Qawvio6g9ebmlI0pE54Etr0fGeCj0haZL
lb8KweYFMaIjeOiQ6bGP7T9ViQVwrCb0BxeV+H4ICQpWJ0pWdwwYB3DRk607
hLLbqERKyTeo3M5FFn5i9h+7qcR1DT2bVb5cVBtw57IEl0q8PphrbezFRQ27
B3XDh6lEx8LxNrozF/Ucj3C0ldQgTtMNm++ZcZFwXnzGiKkGYaHuyMhX5CKH
oVvG67I1iPow67zcql7UfYQXPLxDk8i6tCBmsLwXaZj07HoSokkw3ccjjEt7
kcdoe9ipvZpEzSnmydp7vag55N0+rRh8PdTWoDW3F732KI2yvaRJmI2zJorP
96KSpbFnc0CTkDz/GFq9e9FJnlaBE12L0NzwduCrVy96kaN6V1NHizgW4umQ
t7kXzXjJ3+PraxEOgSsuGbv0ouhm4ZIYYy3i46+TwWE2vWhP9UDVHQctwk1J
XlTEoBd5plfVzUZrEYZrDmzV/M1B/23Y1FfcpkW0rv0u7TXKQaX5oTv0vmgR
RwO3XLw8zEGr5pz8ep2rRUQHb377s4+DrCrL2y/80CJW6o12yrRzkKe22ptQ
aRoh290S/KWMg+J/dRToWdCIOtMNoVeLOUjSaYSRY0Mj3uhNeW0q4qCkQqlc
NQcawfH9+entTQ5K91l9TcyTRmgO/xW7cJGDHrzJTODupxGPFreIhoRw0Ocs
n105t2mE7cSlszv8Ocjvd6RA7R6NuFs/GVW/lYP4Lsn+SaU04ohrj1iBEwf9
EAevoywaUfF75ydJew46uL2j7dcrGuEWU3Hotg0HTT794RrWQCM8fldl+K/m
ILH98x22dtKI+O7DG0NXcNC5d6Z1H7/SiDvRdLPYpRykoOtqbS+gEaEVdGaO
LgdpdsWZmY7SiBYiwf3ifA66sSKzqmQCz9f7B8OPxkHMlLLl+kJ04iuzUTxA
kYOWruUZqMvSicbnzhtOyHBQZc70nSRlOtEJg1ccxDjIbFKFIa5JJ4KYTKGq
GTYCt8U3jmrTiQ5OfG7VbzZaV7yWNqZLJ9KGklItf7BRg5RPethiOiFs3vjT
rp+NXAIiVXjL6URM3KzHjTY22qZxh9JC0AnnoDkpHQ1s1BvBOmtvSyeCg10z
fGrYaOf7dtEaRzqhezw6WbeKjYb0f8SautGJbzf+nmUUsVF4vOTfEi86wXwZ
eGPDdTb6/UU7Wn87nVj21WT4UgobHTExHcvZSSci+v8mDZ5gI+HLLvvV99AJ
9zaza/bhbHTmW8i3pAN04n+g/YRu
           "]]}, Annotation[#, "Charting`Private`Tag$644033#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.49096949518972727`, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(out\\)]\\)\"", 
         TraditionalForm], None}, {
        FormBox["\"\[Lambda] (\[Mu]m)\"", TraditionalForm], None}}, 
     FrameTicks -> {{$CellContext`tick5Degrees, None}, {Automatic, None}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Type II SPDC, \\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(OA\\)]\
\\) = 44.\[Degree]\"", TraditionalForm], 
     PlotRange -> {{0.49096949518972727`, 
      1.6170919936377715`}, {-25.06647608474841, 21.743731486803973`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubsuperscriptBox[\\(\[Theta]\\), \\(s\\), \\(ext\\)]\\)\"",
        "\"\\!\\(\\*SubsuperscriptBox[\\(\[Theta]\\), \\(i\\), \
\\(ext\\)]\\)\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               
               TemplateBox[<|"color" -> GrayLevel[0]|>, 
                "GrayLevelColorSwatchTemplate"], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9519204973194594`*^9, 3.9519205180694838`*^9}, 
   3.9519205715735197`*^9, 3.9519329545765657`*^9, 3.9519336238994904`*^9, {
   3.951933668616686*^9, 3.9519336901143403`*^9}, 3.9519427248877673`*^9},
 CellLabel->
  "Out[249]=",ExpressionUUID->"aacb3c13-3cb0-4b00-8942-8cccb9a726a0"]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{825.5999999999999, 524.4},
WindowMargins->{{-3.5999999999999996`, Automatic}, {
  11.399999999999977`, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.1 Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"98eae8e8-82ad-452a-a0e5-d758fba784b5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 621, 12, 31, "Input",ExpressionUUID->"7c603647-fa24-43a3-be3a-5fef5e7cede8"],
Cell[1182, 34, 760, 12, 136, "Input",ExpressionUUID->"abd133ed-f7dd-4261-9d44-7964b08ec3f8"],
Cell[CellGroupData[{
Cell[1967, 50, 233, 4, 59, "Subsection",ExpressionUUID->"15b8c5c0-7ec1-45a5-a386-c19f8f6d1053"],
Cell[2203, 56, 221, 4, 31, "Input",ExpressionUUID->"014a68db-75fd-4942-9915-b1e93ff5eaa2"],
Cell[2427, 62, 426, 10, 32, "Input",ExpressionUUID->"aab7163a-2cb0-4746-ab7e-c266da2bcfc4"],
Cell[2856, 74, 1112, 32, 74, "Input",ExpressionUUID->"dc84118d-0222-4e5f-ab57-d992d2f63bc2"],
Cell[3971, 108, 1998, 48, 95, "Input",ExpressionUUID->"8b034e8e-4367-4d7f-9cf5-c7219b8fa8b6"],
Cell[5972, 158, 1407, 40, 95, "Input",ExpressionUUID->"6ce33d65-b235-444c-b716-bef9e8901171"],
Cell[7382, 200, 1814, 45, 137, "Input",ExpressionUUID->"61d3e7ee-87b8-4824-9c18-48fd96c57f4e"],
Cell[9199, 247, 1725, 44, 137, "Input",ExpressionUUID->"c01e2efe-ea96-429e-ba0d-1e7ed0da08a3"],
Cell[10927, 293, 3025, 75, 262, "Input",ExpressionUUID->"210c91b7-f728-47c6-86da-4e00f6ee6af0"],
Cell[13955, 370, 3266, 79, 262, "Input",ExpressionUUID->"26402c9c-d873-4b64-abfd-149730ce16c6"],
Cell[17224, 451, 11751, 283, 1314, "Input",ExpressionUUID->"bd562b65-3504-4d52-ac47-d104af03b32f"]
}, Closed]],
Cell[CellGroupData[{
Cell[29012, 739, 222, 4, 41, "Subsection",ExpressionUUID->"0424b37f-a75e-40f1-b597-479ffe9c32e4"],
Cell[29237, 745, 4245, 74, 112, "Text",ExpressionUUID->"7972487b-a4cc-4a20-91db-cc2968284825"],
Cell[33485, 821, 56267, 932, 227, "Text",ExpressionUUID->"928e620d-3bd3-4968-afc2-e1af091bf51b"],
Cell[89755, 1755, 7831, 134, 97, "Text",ExpressionUUID->"d1ccd89c-39ed-43a3-97f4-763bac442ae0"],
Cell[97589, 1891, 3299, 98, 253, "Text",ExpressionUUID->"50283dea-c812-45ef-b109-2fab1d326514"],
Cell[CellGroupData[{
Cell[100913, 1993, 176, 3, 49, "Subsubsection",ExpressionUUID->"fdef72fe-9fb5-4aeb-91e9-daeeabd472fb"],
Cell[101092, 1998, 294, 7, 38, "Text",ExpressionUUID->"36d4f8b4-0d17-4446-bed8-098225139a3c"],
Cell[101389, 2007, 546, 13, 59, "Input",ExpressionUUID->"8a533926-9862-432d-8cb1-0a0c64f9cc8a"],
Cell[CellGroupData[{
Cell[101960, 2024, 355, 8, 31, "Input",ExpressionUUID->"88f78fdd-96f2-44f0-a4d8-4a1b64253a57"],
Cell[102318, 2034, 4427, 89, 256, "Output",ExpressionUUID->"f9a9ecc5-1ee2-49f5-a021-5aee67366a0f"]
}, Open  ]],
Cell[106760, 2126, 598, 14, 59, "Input",ExpressionUUID->"dbbc1ba2-a2b2-41b9-ae44-74bbbd66c13d"],
Cell[107361, 2142, 859, 24, 56, "Input",ExpressionUUID->"b885c9a6-76e7-4817-81e0-8eee3f4b925b"],
Cell[CellGroupData[{
Cell[108245, 2170, 2079, 46, 136, "Input",ExpressionUUID->"6e174734-4611-462f-a958-b8a24ac2c26e"],
Cell[110327, 2218, 3457, 60, 319, "Output",ExpressionUUID->"d5f4c398-b231-46c5-a16d-c30520e395bc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[113833, 2284, 161, 3, 49, "Subsubsection",ExpressionUUID->"6e2d987e-f13a-4e53-82b0-04976f92d8ad"],
Cell[113997, 2289, 261, 7, 55, "Text",ExpressionUUID->"ed42696f-0fde-4a3b-91ba-709d97369561"],
Cell[114261, 2298, 2224, 62, 283, "Input",ExpressionUUID->"b895e971-4bd6-4966-a2ca-8cbed932356b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116522, 2365, 172, 3, 49, "Subsubsection",ExpressionUUID->"ef835e92-9bf2-4e16-9925-981605fb3149"],
Cell[CellGroupData[{
Cell[116719, 2372, 598, 15, 53, "Input",ExpressionUUID->"58f818ae-753f-48da-9d5e-30db3812bfca"],
Cell[117320, 2389, 992, 16, 54, "Output",ExpressionUUID->"396f0111-502f-47b3-bd76-937b2075330f"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[118373, 2412, 179, 3, 41, "Subsection",ExpressionUUID->"291b2e03-ba56-4f24-a3da-c29e8dd4fe90"],
Cell[CellGroupData[{
Cell[118577, 2419, 171, 3, 49, "Subsubsection",ExpressionUUID->"f3f4df72-1677-4645-8ae1-c864040c2313"],
Cell[CellGroupData[{
Cell[118773, 2426, 264, 5, 31, "Input",ExpressionUUID->"501f34c3-002e-4240-b8f1-219f269b4ad3"],
Cell[119040, 2433, 10310, 199, 233, "Output",ExpressionUUID->"488f19e1-258b-4935-bf6f-2c40f3741df4"]
}, Open  ]],
Cell[129365, 2635, 30197, 675, 3012, "Input",ExpressionUUID->"24a0b38b-db9b-4250-9ff4-d7a6626df493"],
Cell[159565, 3312, 8087, 181, 662, "Input",ExpressionUUID->"cc090d2d-1764-4dd0-8e24-cd89611a6028"]
}, Closed]],
Cell[CellGroupData[{
Cell[167689, 3498, 227, 4, 39, "Subsubsection",ExpressionUUID->"9246437f-2a2f-4f4a-b608-3a6803748da2"],
Cell[167919, 3504, 55919, 926, 225, "Input",ExpressionUUID->"555d8d6b-4a4d-4345-b736-a0ec8e352314"],
Cell[CellGroupData[{
Cell[223863, 4434, 877, 21, 73, "Input",ExpressionUUID->"7c7b577f-b869-4c9c-b5f5-a646af8c25e3"],
Cell[224743, 4457, 2066, 42, 329, "Output",ExpressionUUID->"7761980a-7276-40d7-86ff-dc41ba458df9"]
}, Open  ]],
Cell[226824, 4502, 23852, 562, 2481, "Input",ExpressionUUID->"bcab2e82-d44a-45fd-8f79-d9f550e3dfbb"],
Cell[250679, 5066, 9588, 216, 895, "Input",ExpressionUUID->"007db1ed-79bb-430c-b11b-bb0bf0880a97"],
Cell[260270, 5284, 12194, 299, 1059, "Input",ExpressionUUID->"716b4117-dfb9-4dfc-898b-108762c50d7c"],
Cell[CellGroupData[{
Cell[272489, 5587, 687, 19, 94, "Input",ExpressionUUID->"83098e69-dead-44c9-b64c-e96c899e0793"],
Cell[273179, 5608, 22935, 443, 313, "Output",ExpressionUUID->"aacb3c13-3cb0-4b00-8942-8cccb9a726a0"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

