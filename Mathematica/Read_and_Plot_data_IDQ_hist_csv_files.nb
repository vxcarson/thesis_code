(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1977238,      35853]
NotebookOptionsPosition[   1970997,      35744]
NotebookOutlinePosition[   1971460,      35761]
CellTagsIndexPosition[   1971417,      35758]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.94883031135853*^9, 3.9488303141077237`*^9}, {
   3.948830356900221*^9, 3.94883036733959*^9}, 3.948830408911523*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"f6a6007b-8758-471a-a0d0-a300d0a73386"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"$Path", ",", "\"\<Functions\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.947858431202114*^9, 3.9478584577167296`*^9}, {
   3.947858620799543*^9, 3.947858628892618*^9}, {3.948855203962641*^9, 
   3.948855213015172*^9}, 
   3.95100822748383*^9},ExpressionUUID->"7be9c41e-c886-47e5-bd42-\
1f90e345951d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"<<", "OpticsFunctions.m"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "GeneralFunctions.m"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "PlotFunctions.m"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "QuantityFunctions.m"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "DataFunctions.m"}]}], "Input",
 CellChangeTimes->{{3.947857511153677*^9, 3.94785751116963*^9}, {
  3.9478585039957314`*^9, 3.947858511419843*^9}, {3.947858583250186*^9, 
  3.947858590277558*^9}, {3.9479563771309223`*^9, 3.947956385897948*^9}, {
  3.9488551550901556`*^9, 3.9488551908986425`*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->
  "In[316]:=",ExpressionUUID->"b4dc4ff4-a3c8-4ce9-b533-3f0aefae9e80"],

Cell[BoxData[
 TemplateBox[{
  "Syntax", "com", 
   "\"Warning: comma encountered with no adjacent expression. The expression \
will be treated as Null. \\!\\(\\*RowBox[{\\\"\\\\\\\" (line 287 of \
\\\\\\\\\\\\\\\"PlotFunctions.m\\\\\\\\\\\\\\\")\\\\\\\"\\\"}]\\).\"", 2, 318,
    267, 17533609883251750816, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.9508470509765472`*^9, 3.950847056005829*^9}},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"803fba5a-3591-4297-babe-f76274260684"],

Cell[BoxData[
 TemplateBox[{
  "Syntax", "com", 
   "\"Warning: comma encountered with no adjacent expression. The expression \
will be treated as Null. \\!\\(\\*RowBox[{\\\"\\\\\\\" (line 327 of \
\\\\\\\\\\\\\\\"PlotFunctions.m\\\\\\\\\\\\\\\")\\\\\\\"\\\"}]\\).\"", 2, 318,
    268, 17533609883251750816, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.9508470509765472`*^9, 3.950847056017867*^9}},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"a64d6fdd-dfb5-46c6-80ad-784a16ab0e67"],

Cell[BoxData[
 TemplateBox[{
  "Syntax", "com", 
   "\"Warning: comma encountered with no adjacent expression. The expression \
will be treated as Null. \\!\\(\\*RowBox[{\\\"\\\\\\\" (line 328 of \
\\\\\\\\\\\\\\\"PlotFunctions.m\\\\\\\\\\\\\\\")\\\\\\\"\\\"}]\\).\"", 2, 318,
    269, 17533609883251750816, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.9508470509765472`*^9, 3.9508470560334444`*^9}},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"a2c6a65c-f3a1-4396-bdb8-37288ebb3dc5"],

Cell[BoxData[
 TemplateBox[{
  "Syntax", "com", 
   "\"Warning: comma encountered with no adjacent expression. The expression \
will be treated as Null. \\!\\(\\*RowBox[{\\\"\\\\\\\" (line 462 of \
\\\\\\\\\\\\\\\"PlotFunctions.m\\\\\\\\\\\\\\\")\\\\\\\"\\\"}]\\).\"", 2, 318,
    270, 17533609883251750816, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.9508470509765472`*^9, 3.950847056041345*^9}},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"4d148b4f-1ffd-41ae-b1c4-80ffc19f05ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Subsection",
 CellChangeTimes->{{3.9309084698643427`*^9, 3.93090850105433*^9}, {
  3.930908674665315*^9, 3.9309086767668447`*^9}, {3.9508470353330708`*^9, 
  3.9508470359709587`*^9}},ExpressionUUID->"6b05cf01-ac78-4e45-aa2f-\
d3b2c9ed739a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"parseKey", "[", "keyStr_String", "]"}], ":=", 
  RowBox[{
   RowBox[{"StringCases", "[", 
    RowBox[{"keyStr", ",", 
     RowBox[{
      RowBox[{"\"\<(\>\"", "~~", 
       RowBox[{"c1", ":", "NumberString"}], "~~", "\"\<,\>\"", "~~", 
       RowBox[{"c2", ":", "NumberString"}], "~~", "\"\<),\>\"", "~~", 
       RowBox[{"trial", ":", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"LetterCharacter", "|", "DigitCharacter"}], ")"}], ".."}]}],
        "~~", "\"\<,(\>\"", "~~", 
       RowBox[{"p1", ":", "NumberString"}], "~~", "\"\<,\>\"", "~~", 
       RowBox[{"p2", ":", "NumberString"}], "~~", "\"\<,\>\"", "~~", 
       RowBox[{"p3", ":", "NumberString"}], "~~", "\"\<,\>\"", "~~", 
       RowBox[{"p4", ":", "NumberString"}], "~~", "\"\<),\>\"", "~~", 
       RowBox[{"d1", ":", "NumberString"}]}], ":>", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ToExpression", "[", "c1", "]"}], ",", 
        RowBox[{"ToExpression", "[", "c2", "]"}], ",", "trial", ",", 
        RowBox[{"ToExpression", "/@", 
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}]}], ",", 
        RowBox[{"ToExpression", "[", "d1", "]"}]}], "}"}]}]}], "]"}], "//", 
   "First"}]}]], "Input",
 CellChangeTimes->{{3.9340298264574594`*^9, 3.9340298773838663`*^9}, {
   3.934030219327176*^9, 3.9340302594786863`*^9}, {3.9340303143097973`*^9, 
   3.9340304098774166`*^9}, {3.9340304466780486`*^9, 3.934030494525241*^9}, 
   3.9340305317747307`*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"3833bde7-fd44-45a0-8f91-5f94e6420e00"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"getCyc", "[", "keyStr_String", "]"}], ":=", 
  RowBox[{
   RowBox[{"StringCases", "[", 
    RowBox[{"keyStr", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"n1", ":", "NumberString"}], "~~", "\"\<-\>\"", "~~", 
       RowBox[{"n2", ":", "NumberString"}]}], ":>", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ToExpression", "[", "n1", "]"}], ",", 
        RowBox[{"ToExpression", "[", "n2", "]"}]}], "}"}]}]}], "]"}], "//", 
   "First"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getTrial", "[", "keyStr_String", "]"}], ":=", 
  RowBox[{
   RowBox[{"StringCases", "[", 
    RowBox[{"keyStr", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"n1", ":", "NumberString"}], "~~", "\"\<-\>\"", "~~", 
       RowBox[{"n2", ":", "NumberString"}], "~~", "trial_"}], ":>", 
      "trial"}]}], "]"}], "//", "First"}]}]}], "Input",
 CellChangeTimes->{{3.9339458063445625`*^9, 3.933945895875641*^9}, {
   3.9339460070497437`*^9, 3.933946049859937*^9}, 3.933946080943666*^9, {
   3.9340207325964203`*^9, 3.934020739798458*^9}, {3.934020800850385*^9, 
   3.9340208295573654`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"163d58f7-db67-442b-b038-d9e349a79c56"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ch", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"1", "->", "2"}], ",", 
    RowBox[{"2", "->", "3"}], ",", 
    RowBox[{"3", "->", "4"}], ",", 
    RowBox[{"4", "->", "5"}]}], "|>"}]}]], "Input",
 CellChangeTimes->{{3.93092112175743*^9, 3.930921244548025*^9}, {
  3.930921292231267*^9, 3.9309212992743826`*^9}, {3.930921341967225*^9, 
  3.930921355726695*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"b9a446aa-4149-4c07-87b5-73e698a7fcb8"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"1", "\[Rule]", "2"}], ",", 
   RowBox[{"2", "\[Rule]", "3"}], ",", 
   RowBox[{"3", "\[Rule]", "4"}], ",", 
   RowBox[{"4", "\[Rule]", "5"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.9309213632376037`*^9, 3.9312584050433435`*^9, 3.9315308684211607`*^9, 
   3.932420457185953*^9, 3.933634739785119*^9, 3.933852152675462*^9, 
   3.9343787772170143`*^9, {3.934379799320443*^9, 3.9343798286633635`*^9}, 
   3.9346403679591217`*^9, 3.9350763306507454`*^9, 3.935163008443261*^9, 
   3.9352396428297462`*^9, 3.9352398593304996`*^9, {3.93524246160065*^9, 
   3.935242468219079*^9}, 3.936176328684869*^9, 3.9361764711603346`*^9, 
   3.9362778584458113`*^9, 3.936472815462755*^9, 3.9366985057178373`*^9, 
   3.9367974837668047`*^9, 3.9375006555020056`*^9, 3.937995988074938*^9, 
   3.9385182158617945`*^9, 3.94883042728194*^9, 3.950838012794279*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"dda4aa71-3ed1-41b0-acab-f1b4f98420cc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"coincErr", "[", 
   RowBox[{"counts_", ",", 
    RowBox[{"factor_", ":", "1"}]}], "]"}], ":=", 
  RowBox[{"Around", "[", 
   RowBox[{"counts", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"counts", "!=", "0"}], ",", 
      SqrtBox[
       RowBox[{"factor", " ", "counts"}]], ",", 
      RowBox[{
       SqrtBox["factor"], "1"}]}], 
     RowBox[{"(*", " ", 
      RowBox[{"(", 
       RowBox[{"1", "\[Sigma]"}], ")"}], " ", "*)"}], "]"}]}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.936176988647123*^9, 3.936177030412071*^9}, {
  3.9508375324857483`*^9, 3.9508375423470554`*^9}, {3.9508375750662956`*^9, 
  3.9508376098315015`*^9}, {3.9508376483802786`*^9, 3.9508376529159517`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"736add2e-814c-4918-b8f3-c32644f0bf55"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"coincErr", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.9361770422435837`*^9, 3.9361770714638863`*^9}},
 CellLabel->
  "In[520]:=",ExpressionUUID->"08cbfb14-0e9d-4089-a99a-9c1de8f8da53"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"0.0", "0.6"},
   "Around"],
  Around[0., 0.6324555320336759]]], "Output",
 CellChangeTimes->{{3.936177049534192*^9, 3.9361770721668105`*^9}, 
   3.9362778585168076`*^9, 3.93647281555311*^9, 3.9366985057884803`*^9, 
   3.936797483868722*^9, 3.9375006555770063`*^9, 3.937995988159829*^9, 
   3.9385182160931945`*^9, 3.948830427312656*^9},
 CellLabel->
  "Out[520]=",ExpressionUUID->"d20bb90b-a2dd-47fa-b822-425c1013c248"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Function", " ", "to", " ", "read", " ", "and", " ", "process", " ", "a", 
    " ", "single", " ", "CSV", " ", "file"}], "*)"}], 
  RowBox[{
   RowBox[{"importHistCSVData", "[", 
    RowBox[{
    "directory_String", ",", "cyc1_Integer", ",", "cyc2_Integer", ",", 
     "trial_String", ",", "trigger_Integer", ",", " ", "pol_String"}], "]"}], 
   ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fileName", ",", "data", ",", "columnNames", ",", "xValues", ",", 
       "histogramData", ",", "assoc"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fileName", " ", "=", 
       RowBox[{"\"\<cyc(\>\"", "<>", 
        RowBox[{"ToString", "[", "cyc1", "]"}], "<>", "\"\<-\>\"", "<>", 
        RowBox[{"ToString", "[", "cyc2", "]"}], "<>", "\"\<)_\>\"", "<>", 
        "trial", "<>", "\"\<_(\>\""}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"trigger", "==", "2"}], ",", "\[IndentingNewLine]", 
        RowBox[{"fileName", " ", "=", " ", 
         RowBox[{"fileName", "<>", "\"\<b2-b1_a2-a1_b2-a1_a2-b1)_\>\""}]}], 
        ",", 
        RowBox[{"fileName", " ", "=", " ", 
         RowBox[{"fileName", "<>", "\"\<b1-b2_a1-a2_a1-b2_b1-a2)_\>\""}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"fileName", " ", "=", " ", 
       RowBox[{
       "fileName", "<>", "\"\<pol(\>\"", "<>", "pol", "<>", 
        "\"\<).csv\>\""}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"data", "=", 
       RowBox[{"Import", "[", 
        RowBox[{"directory", "<>", "fileName"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"columnNames", "=", 
       RowBox[{"First", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xValues", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Rest", "[", "data", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "/", "1000"}]}], ";", " ", 
      RowBox[{"(*", " ", "nanoseconds", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"histogramData", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{
         RowBox[{"Rest", "[", "data", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"2", ";;"}]}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"keys", " ", "=", " ", 
         RowBox[{
          RowBox[{"ToString", "[", "cyc1", "]"}], "<>", "\"\<-\>\"", "<>", 
          RowBox[{"ToString", "[", "cyc2", "]"}], "<>", "trial", "<>", 
          "\"\<trig\>\"", "<>", 
          RowBox[{"ToString", "[", "trigger", "]"}], "<>", "pol"}]}], ";"}], 
       "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Return", " ", "the", " ", "processed", " ", "data", " ", "as", " ", 
        "an", " ", "association"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"assoc", "=", 
       RowBox[{"<|", 
        RowBox[{"\"\<x\>\"", "->", "xValues"}], "|>"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"assoc", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Rest", "[", "columnNames", "]"}], "[", 
            RowBox[{"[", "#", "]"}], "]"}], "->", 
           RowBox[{"histogramData", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}]}], "]"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "histogramData", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "assoc"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.930912452101465*^9, 3.9309125635182962`*^9}, {
   3.9309125943494635`*^9, 3.9309126644301324`*^9}, {3.930912788838685*^9, 
   3.9309131074319673`*^9}, {3.930913199683482*^9, 3.9309132470627303`*^9}, {
   3.930913288331856*^9, 3.930913464463323*^9}, {3.930913553380685*^9, 
   3.9309136143255873`*^9}, {3.93091364673665*^9, 3.930913665826098*^9}, {
   3.9309137345530477`*^9, 3.9309137382987895`*^9}, 3.930913770076338*^9, {
   3.9309138004801555`*^9, 3.930913861754368*^9}, {3.9309141812296276`*^9, 
   3.9309141852982936`*^9}, {3.9309142607534657`*^9, 
   3.9309142612157745`*^9}, {3.930914292044447*^9, 3.930914347810502*^9}, {
   3.930914386663372*^9, 3.930914387013869*^9}, {3.930914736296297*^9, 
   3.9309147627149916`*^9}, {3.930914863663921*^9, 3.9309148949412966`*^9}, {
   3.930915013584196*^9, 3.9309150694704995`*^9}, {3.930915200898699*^9, 
   3.9309152827232676`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"8277606c-ca38-4ba3-94e7-d51c78e39f97"],

Cell[BoxData[
 RowBox[{
  RowBox[{"importHistCSVData", "[", 
   RowBox[{
   "directory_String", ",", "cyc1_Integer", ",", "cyc2_Integer", ",", 
    "trial_String", ",", "trigger_Integer", ",", " ", "pol_String", ",", 
    "centerNS_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fileName", ",", "data", ",", "columnNames", ",", "xValues", ",", 
      "histogramData", ",", "assoc"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fileName", " ", "=", 
      RowBox[{"\"\<cyc(\>\"", "<>", 
       RowBox[{"ToString", "[", "cyc1", "]"}], "<>", "\"\<-\>\"", "<>", 
       RowBox[{"ToString", "[", "cyc2", "]"}], "<>", "\"\<)_\>\"", "<>", 
       "trial", "<>", "\"\<_(\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"trigger", "==", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"fileName", " ", "=", " ", 
        RowBox[{"fileName", "<>", "\"\<bb_aa_ba_ab)_\>\""}]}], 
       RowBox[{"(*", "\"\<b2-b1_a2-a1_b2-a1_a2-b1)_\>\"", "*)"}], ",", 
       RowBox[{"fileName", " ", "=", " ", 
        RowBox[{"fileName", "<>", "\"\<b1-b2_a1-a2_a1-b2_b1-a2)_\>\""}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"fileName", " ", "=", " ", 
      RowBox[{
      "fileName", "<>", "\"\<pol(\>\"", "<>", "pol", "<>", 
       "\"\<).csv\>\""}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"Import", "[", 
       RowBox[{"directory", "<>", "fileName"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"columnNames", "=", 
      RowBox[{"First", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xValues", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Rest", "[", "data", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "/", "1000"}], " ", "-", 
       " ", "centerNS"}]}], ";", " ", 
     RowBox[{"(*", " ", "nanoseconds", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"histogramData", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{"Rest", "[", "data", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"2", ";;"}]}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"keys", " ", "=", " ", 
        RowBox[{
         RowBox[{"ToString", "[", "cyc1", "]"}], "<>", "\"\<-\>\"", "<>", 
         RowBox[{"ToString", "[", "cyc2", "]"}], "<>", "trial", "<>", 
         "\"\<trig\>\"", "<>", 
         RowBox[{"ToString", "[", "trigger", "]"}], "<>", "pol"}]}], ";"}], 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Return", " ", "the", " ", "processed", " ", "data", " ", "as", " ", 
       "an", " ", "association"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"assoc", "=", 
      RowBox[{"<|", 
       RowBox[{"\"\<x\>\"", "->", "xValues"}], "|>"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"assoc", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Rest", "[", "columnNames", "]"}], "[", 
           RowBox[{"[", "#", "]"}], "]"}], "->", 
          RowBox[{"histogramData", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}]}], "]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "histogramData", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "assoc"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.930991635813685*^9, 3.930991690917657*^9}, {
  3.932420953066883*^9, 3.932420992184408*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"e6653e94-0128-4304-9078-827e69f9eca6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"importHistCSVData", "[", 
   RowBox[{"directory_String", ",", "fileName_String", ",", 
    RowBox[{"centerNS_", ":", "100"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "data", ",", "columnNames", ",", "xValues", ",", "histogramData", ",", 
      "assoc"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"data", "=", 
      RowBox[{"Import", "[", 
       RowBox[{"directory", "<>", "fileName"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"columnNames", "=", 
      RowBox[{"First", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xValues", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Rest", "[", "data", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "/", "1000"}], " ", "-", 
       " ", "centerNS"}]}], ";", " ", 
     RowBox[{"(*", " ", "nanoseconds", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"histogramData", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{"Rest", "[", "data", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"2", ";;"}]}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"keys", " ", "=", " ", 
        RowBox[{
         RowBox[{"ToString", "[", "cyc1", "]"}], "<>", "\"\<-\>\"", "<>", 
         RowBox[{"ToString", "[", "cyc2", "]"}], "<>", "trial", "<>", 
         "\"\<trig\>\"", "<>", 
         RowBox[{"ToString", "[", "trigger", "]"}], "<>", "pol"}]}], ";"}], 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Return", " ", "the", " ", "processed", " ", "data", " ", "as", " ", 
       "an", " ", "association"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"assoc", "=", 
      RowBox[{"<|", 
       RowBox[{"\"\<x\>\"", "->", "xValues"}], "|>"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"assoc", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Rest", "[", "columnNames", "]"}], "[", 
           RowBox[{"[", "#", "]"}], "]"}], "->", 
          RowBox[{"histogramData", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}]}], "]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "histogramData", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "assoc"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9338621044660425`*^9, 3.9338621498382263`*^9}, {
  3.9338622136940727`*^9, 3.933862250884013*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"ab7cbabc-c88c-460b-8825-b13188c33416"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rang08", "=", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", "8"}], "]"}], "\[Union]", 
    RowBox[{"{", "10", "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rang1236", "=", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"12", ",", "18", ",", "2"}], "]"}], "\[Union]", 
    RowBox[{"Range", "[", 
     RowBox[{"24", ",", "36", ",", "6"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roundToTickList", "=", "\[IndentingNewLine]", 
   RowBox[{"rang08", "\[Union]", "rang1236", "\[Union]", 
    RowBox[{"(", 
     RowBox[{"10", "*", "rang08"}], ")"}], "\[Union]", 
    RowBox[{"(", 
     RowBox[{"10", "*", "rang1236"}], ")"}], "\[Union]", 
    RowBox[{"(", 
     RowBox[{"100", "*", "rang08"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"roundToTickList", "=", 
  RowBox[{"roundToTickList", "\[Union]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "roundToTickList"}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.9345480719050913`*^9, 3.934548241315535*^9}, {
   3.9345482969726725`*^9, 3.9345483488785777`*^9}, 3.9345483970983453`*^9, {
   3.9345484842044373`*^9, 3.934548724146395*^9}, {3.934548762914095*^9, 
   3.934548802782336*^9}, {3.9345488537805614`*^9, 3.934548882637892*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"95a0e52a-3c97-443a-abf3-d39f5d704799"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1000"}], ",", 
   RowBox[{"-", "800"}], ",", 
   RowBox[{"-", "700"}], ",", 
   RowBox[{"-", "600"}], ",", 
   RowBox[{"-", "500"}], ",", 
   RowBox[{"-", "400"}], ",", 
   RowBox[{"-", "360"}], ",", 
   RowBox[{"-", "300"}], ",", 
   RowBox[{"-", "240"}], ",", 
   RowBox[{"-", "200"}], ",", 
   RowBox[{"-", "180"}], ",", 
   RowBox[{"-", "160"}], ",", 
   RowBox[{"-", "140"}], ",", 
   RowBox[{"-", "120"}], ",", 
   RowBox[{"-", "100"}], ",", 
   RowBox[{"-", "80"}], ",", 
   RowBox[{"-", "70"}], ",", 
   RowBox[{"-", "60"}], ",", 
   RowBox[{"-", "50"}], ",", 
   RowBox[{"-", "40"}], ",", 
   RowBox[{"-", "36"}], ",", 
   RowBox[{"-", "30"}], ",", 
   RowBox[{"-", "24"}], ",", 
   RowBox[{"-", "20"}], ",", 
   RowBox[{"-", "18"}], ",", 
   RowBox[{"-", "16"}], ",", 
   RowBox[{"-", "14"}], ",", 
   RowBox[{"-", "12"}], ",", 
   RowBox[{"-", "10"}], ",", 
   RowBox[{"-", "8"}], ",", 
   RowBox[{"-", "7"}], ",", 
   RowBox[{"-", "6"}], ",", 
   RowBox[{"-", "5"}], ",", 
   RowBox[{"-", "4"}], ",", 
   RowBox[{"-", "3"}], ",", 
   RowBox[{"-", "2"}], ",", 
   RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", 
   "5", ",", "6", ",", "7", ",", "8", ",", "10", ",", "12", ",", "14", ",", 
   "16", ",", "18", ",", "20", ",", "24", ",", "30", ",", "36", ",", "40", 
   ",", "50", ",", "60", ",", "70", ",", "80", ",", "100", ",", "120", ",", 
   "140", ",", "160", ",", "180", ",", "200", ",", "240", ",", "300", ",", 
   "360", ",", "400", ",", "500", ",", "600", ",", "700", ",", "800", ",", 
   "1000"}], "}"}]], "Output",
 CellChangeTimes->{
  3.934548082685479*^9, {3.934548149166512*^9, 3.9345481690495644`*^9}, 
   3.93454821010413*^9, 3.9345482518097396`*^9, 3.93454835624973*^9, 
   3.9345486151314745`*^9, 3.9345487398520184`*^9, {3.9345488001811156`*^9, 
   3.9345488043167505`*^9}, 3.934548883605089*^9, 3.934640407466221*^9, 
   3.934901822066763*^9, 3.9350770031467357`*^9, 3.9351632959799204`*^9, 
   3.935239976016224*^9, {3.9352424637685237`*^9, 3.9352424692983465`*^9}, 
   3.9361763295377645`*^9, 3.9361764720519705`*^9, 3.9362778599962845`*^9, 
   3.9364728178336926`*^9, 3.936698507719839*^9, 3.9367974871917057`*^9, 
   3.9375006576072197`*^9, 3.937995990197968*^9, 3.9385182197944393`*^9, 
   3.948830428615449*^9, 3.9508383184477177`*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"0e89a1f5-59eb-46df-8e3a-c554c136ccf0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Nearest", "[", 
   RowBox[{"roundToTickList", ",", 
    RowBox[{"-", "57"}]}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9345489110384617`*^9, 3.9345489115056*^9}, {
  3.934548942598402*^9, 3.9345489435329113`*^9}},
 CellLabel->
  "In[622]:=",ExpressionUUID->"a66b6ba0-d23f-4901-96d2-62fc9d028a51"],

Cell[BoxData[
 RowBox[{"-", "60"}]], "Output",
 CellChangeTimes->{{3.9345489052703657`*^9, 3.934548913435388*^9}, 
   3.934548944271212*^9, 3.9346404075670986`*^9, 3.9349018251036725`*^9, 
   3.9350770065924606`*^9, 3.9351632977970085`*^9, 3.935239979724346*^9, {
   3.935242463833203*^9, 3.9352424693386264`*^9}, 3.9361763295876637`*^9, 
   3.936176472082549*^9, 3.93627786004615*^9, 3.9364728179140887`*^9, 
   3.9366985077941823`*^9, 3.9367974873132415`*^9, 3.937500657650139*^9, 
   3.937995990273923*^9, 3.9385182198856063`*^9, 3.948830428710057*^9},
 CellLabel->
  "Out[622]=",ExpressionUUID->"4d7f4a60-f88a-4d29-80db-d6fc626f23d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot Functions", "Subsubsection",
 CellChangeTimes->{{3.9313462596072035`*^9, 
  3.9313462628012934`*^9}},ExpressionUUID->"4be91115-02a6-4b2e-b173-\
121bbbe5dbc4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Unprotect", "[", "#", "]"}], "&"}], "/@", 
   RowBox[{"Keys", "[", 
    RowBox[{"Options", "[", "nlmFitSin4", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "nlmFitSin4", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "nlmFitSin4", "]"}], "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"peakAngle", "->", "Null"}], ",", 
       RowBox[{"weightPower", "->", "2"}], ",", 
       RowBox[{"includeAdjAngle", "->", "False"}], ",", 
       RowBox[{"gridLabels", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<HV\>\"", ",", "\"\<\[PlusMinus]45\[Degree]\>\""}], 
         "}"}]}], ",", 
       RowBox[{"labels", "->", "\"\<\>\""}]}], "}"}], ",", 
     RowBox[{"FilterRules", "[", 
      RowBox[{
       RowBox[{"Options", "[", "visListPlot", "]"}], ",", 
       RowBox[{"Except", "[", 
        RowBox[{"{", "labels", "}"}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Protect", "[", "#", "]"}], "&"}], "/@", 
    RowBox[{"Keys", "[", 
     RowBox[{"Options", "[", "nlmFitSin2", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nlmFitSin4", "[", 
    RowBox[{"data_Association", ",", 
     RowBox[{"opts", ":", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"nlmFitSin4", "[", 
    RowBox[{
     RowBox[{"Values", "[", "data", "]"}], ",", "opts"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nlmFitSin4", "[", 
   RowBox[{"data_List", ",", 
    RowBox[{"opts", ":", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Quiet", "[", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "dataLists", ",", "amps", ",", "vGuesses", ",", "peakAngles", ",", 
        "weights", ",", "fits", ",", "fitFuncs", ",", 
        RowBox[{"fitsAngle", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"fitAngleFuncs", "=", 
         RowBox[{"{", "}"}]}], ",", "outputGrid", ",", "visPlotOptions", ",", 
        "peakAngleO", ",", "weightPowerO", ",", "includeAdjAngleO", ",", 
        "plotAngleStyleO", ",", "gridLabelsO", ",", "labelsO", ",", 
        "plotStyleO"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "peakAngleO", ",", "weightPowerO", ",", "includeAdjAngleO", ",", 
          "gridLabelsO", ",", "labelsO", ",", "plotStyleO"}], "}"}], "=", 
        RowBox[{"OptionValue", "[", 
         RowBox[{"{", 
          RowBox[{
          "peakAngle", ",", "weightPower", ",", "includeAdjAngle", ",", 
           "gridLabels", ",", "labels", ",", "plotStyle"}], "}"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"visPlotOptions", "=", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"{", "opts", "}"}], ",", 
          RowBox[{"Except", "[", 
           RowBox[{"{", 
            RowBox[{
            "peakAngle", ",", "weightPower", ",", "includeAdjAngle", ",", 
             "gridLabels"}], "}"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"maxDepth", "[", "data", "]"}], "<", "3"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"dataLists", "=", 
          RowBox[{"{", "data", "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"dataLists", "=", "data"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"gridLabelsO", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"SwatchLegend", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"plotStyleO", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"gridLabelsO", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", "\"\<SphereBubble\>\""}]}], 
             "]"}], "&"}], "/@", 
           RowBox[{"lenRange", "[", "dataLists", "]"}]}]}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"plotAngleStyleO", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", 
            RowBox[{"Thickness", "[", "0.006", "]"}], ",", 
            RowBox[{"Opacity", "[", "0.6", "]"}], ",", "Dashed"}], "}"}], 
          "&"}], "/@", "plotStyleO"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"plotStyleO", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", 
            RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
            RowBox[{"Opacity", "[", "0.8", "]"}]}], "}"}], "&"}], "/@", 
         "plotStyleO"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"amps", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Mean", "[", 
           RowBox[{"ys", "[", "#", "]"}], "]"}], "&"}], "/@", "dataLists"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"vGuesses", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"visMaxApprox", "[", "#", "]"}], "&"}], "/@", 
         "dataLists"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"weights", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"1", "/", 
               SuperscriptBox[
                RowBox[{"yUncerts", "[", "#", "]"}], "weightPowerO"]}], "]"}],
              "&"}], ",", "dataLists", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"weights", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"Evaluate", "[", 
            SuperscriptBox[
             RowBox[{"yUncerts", "[", "#", "]"}], "weightPowerO"], "]"}]}], 
          "&"}], "/@", "dataLists"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"peakAngles", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"safeAccessNum", "[", 
           RowBox[{"peakAngleO", ",", "#", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "peakAngleO", "]"}], "==", "0"}], ",", 
              "peakAngleO"}], "]"}]}], "]"}], "&"}], "/@", 
         RowBox[{"lenRange", "[", "dataLists", "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"fits", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MatchQ", "[", 
              RowBox[{
               RowBox[{"peakAngles", "[", 
                RowBox[{"[", "#", "]"}], "]"}], ",", "Null"}], "]"}]}], ",", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"NonlinearModelFit", "[", 
             RowBox[{
              RowBox[{"onlyValues", "[", 
               RowBox[{"dataLists", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"a", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"v", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", 
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"peakAngles", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], ")"}], "Degree"}], 
                   "]"}]}]}], ")"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"a", ",", 
                  RowBox[{
                   RowBox[{"amps", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"v", ",", 
                  RowBox[{
                   RowBox[{"vGuesses", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "}"}], ",", "x",
               ",", "\[IndentingNewLine]", 
              RowBox[{"Weights", "\[Rule]", 
               RowBox[{"weights", "[", 
                RowBox[{"[", "#", "]"}], "]"}]}], ",", 
              RowBox[{"Method", "\[Rule]", "\"\<LevenbergMarquardt\>\""}]}], 
             "]"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{"NonlinearModelFit", "[", 
             RowBox[{
              RowBox[{"onlyValues", "[", 
               RowBox[{"dataLists", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"a", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"v", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", 
                    RowBox[{"(", 
                    RowBox[{"x", "-", "\[Theta]"}], ")"}], "Degree"}], 
                   "]"}]}]}], ")"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"a", ",", 
                  RowBox[{
                   RowBox[{"amps", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"v", ",", 
                  RowBox[{
                   RowBox[{"vGuesses", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\[Theta]", ",", "15"}], "}"}]}], "}"}], ",", "x", 
              ",", "\[IndentingNewLine]", 
              RowBox[{"Weights", "\[Rule]", 
               RowBox[{"weights", "[", 
                RowBox[{"[", "#", "]"}], "]"}]}], ",", 
              RowBox[{"Method", "\[Rule]", "\"\<LevenbergMarquardt\>\""}]}], 
             "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
          "&"}], "/@", 
         RowBox[{"lenRange", "[", "dataLists", "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"fitFuncs", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Normal", "[", "#", "]"}], "&"}], "/@", "fits"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"includeAdjAngleO", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"peakAngles", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"MatchQ", "[", 
                 RowBox[{"#", ",", "Null"}], "]"}]}], ",", "#", ",", "15"}], 
              "]"}], "&"}], "/@", "peakAngles"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"fitsAngle", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"NonlinearModelFit", "[", 
              RowBox[{
               RowBox[{"onlyValues", "[", 
                RowBox[{"dataLists", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"a", 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"v", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", 
                    RowBox[{"(", 
                    RowBox[{"x", "-", "\[Theta]"}], ")"}], "Degree"}], 
                    "]"}]}]}], ")"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"a", ",", 
                   RowBox[{
                    RowBox[{"amps", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"v", ",", 
                   RowBox[{
                    RowBox[{"vGuesses", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Theta]", ",", 
                   RowBox[{"peakAngles", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
               "x", ",", "\[IndentingNewLine]", 
               RowBox[{"Weights", "\[Rule]", 
                RowBox[{"weights", "[", 
                 RowBox[{"[", "#", "]"}], "]"}]}], ",", 
               RowBox[{"Method", "\[Rule]", "\"\<LevenbergMarquardt\>\""}]}], 
              "]"}], "&"}], "/@", 
            RowBox[{"lenRange", "[", "dataLists", "]"}]}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"fitAngleFuncs", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Normal", "[", "#", "]"}], "&"}], "/@", "fitsAngle"}]}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"outputGrid", "=", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ShortVisParameterTable4", "[", 
             RowBox[{"fits", ",", "gridLabelsO"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "fitsAngle", "]"}], ">", "0"}], ",", 
              RowBox[{"ShortVisParameterTable4", "[", 
               RowBox[{"fitsAngle", ",", "gridLabelsO"}], "]"}], ",", 
              RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
          ",", 
          RowBox[{"Spacings", "\[Rule]", "1"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Row", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Show", "[", 
            RowBox[{
             RowBox[{"visListPlot", "[", 
              RowBox[{"dataLists", ",", 
               RowBox[{"Sequence", "@@", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"labels", "->", "labelsO"}], "}"}], ",", 
                  "visPlotOptions"}], "]"}]}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Plot", "[", 
              RowBox[{"fitFuncs", ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", 
                 RowBox[{"-", "100"}], ",", "400"}], "}"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", "plotStyleO"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Plot", "[", 
              RowBox[{"fitAngleFuncs", ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", 
                 RowBox[{"-", "100"}], ",", "400"}], "}"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", "plotAngleStyleO"}]}], "]"}]}],
             "]"}], ",", "\[IndentingNewLine]", "outputGrid"}], 
          "\[IndentingNewLine]", "}"}], ",", "\"\<   \>\""}], "]"}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FittedModel", "::", "constr"}], ",", 
      RowBox[{"NonlinearModelFit", "::", "lmnl"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.9349883473248816`*^9, 3.934988354900939*^9}, {
   3.9349883993027344`*^9, 3.934988419027585*^9}, 3.9349885281645555`*^9, {
   3.934988686780656*^9, 3.9349886899907074`*^9}, {3.9349887210810566`*^9, 
   3.93498874314321*^9}, {3.9349888246206036`*^9, 3.9349889588062897`*^9}, {
   3.9349889943681746`*^9, 3.934989002596674*^9}, {3.9349890966013317`*^9, 
   3.9349891103818383`*^9}, {3.934989156895378*^9, 3.934989210474142*^9}, {
   3.9349892457617397`*^9, 3.9349892650089464`*^9}, {3.934989346242561*^9, 
   3.9349893895750427`*^9}, {3.9349894771213093`*^9, 
   3.9349895051848955`*^9}, {3.9349895671943455`*^9, 
   3.9349896075864415`*^9}, {3.934989670472229*^9, 3.9349896862389793`*^9}, {
   3.934989917614297*^9, 3.9349899683739777`*^9}, {3.934990017134486*^9, 
   3.934990076156266*^9}, {3.9349901220529323`*^9, 3.93499014297757*^9}, {
   3.934990173821288*^9, 3.9349902492388506`*^9}, {3.9349902945988264`*^9, 
   3.934990326709496*^9}, {3.9349905576821427`*^9, 3.9349905781026073`*^9}, {
   3.9349906459423523`*^9, 3.934990650129724*^9}, {3.934990797350086*^9, 
   3.9349908866494155`*^9}, {3.9352414531447663`*^9, 
   3.9352414548194256`*^9}, {3.9352415248564453`*^9, 3.935241525084312*^9}, {
   3.9352416226684036`*^9, 3.9352416257252274`*^9}, {3.935241687333473*^9, 
   3.9352417286864324`*^9}, {3.935241772406954*^9, 3.9352417811976566`*^9}, {
   3.935241830384503*^9, 3.935241984353981*^9}, {3.9352420279843874`*^9, 
   3.935242033251936*^9}, {3.935242108350952*^9, 3.9352421840148153`*^9}, {
   3.935242296475272*^9, 3.9352423062585034`*^9}, {3.9352426623658543`*^9, 
   3.935242788381374*^9}, {3.9352428219927473`*^9, 3.935242906065277*^9}, {
   3.9354879523741927`*^9, 3.9354879625146046`*^9}, {3.9354882658303947`*^9, 
   3.9354883201517053`*^9}, 3.9354883763779273`*^9, {3.9354884290871954`*^9, 
   3.9354884305921474`*^9}, {3.9354884687117844`*^9, 3.93548847650463*^9}, {
   3.9354885113264656`*^9, 3.9354885200916376`*^9}, {3.9354886727376704`*^9, 
   3.9354887313550453`*^9}, {3.935488763850335*^9, 3.935488853843729*^9}, {
   3.935488905851659*^9, 3.9354889099360685`*^9}, {3.935489025247483*^9, 
   3.9354890310673294`*^9}, {3.935489061266881*^9, 3.93548906530002*^9}, {
   3.935489131424391*^9, 3.935489136570798*^9}, 3.935489221218272*^9, {
   3.9354893817383614`*^9, 3.935489385347332*^9}, {3.935489428677554*^9, 
   3.935489609923014*^9}, 3.9354899028238444`*^9, {3.9354900263307285`*^9, 
   3.9354900264858036`*^9}, {3.935490121005332*^9, 3.9354901354798374`*^9}, {
   3.935490333569848*^9, 3.935490346262849*^9}, {3.9354904275704*^9, 
   3.9354904814391522`*^9}, {3.9354906525161734`*^9, 3.93549070625272*^9}, {
   3.9354907516223707`*^9, 3.9354907730674186`*^9}, {3.9354909605375023`*^9, 
   3.9354909625511165`*^9}, {3.9354910013830433`*^9, 3.935491002686417*^9}, {
   3.935491262038983*^9, 3.9354912698292*^9}, {3.9354915565179586`*^9, 
   3.935491598111184*^9}, {3.9354917453638444`*^9, 3.9354917782975054`*^9}, 
   3.935491912326867*^9, {3.935492007217789*^9, 3.9354920595489902`*^9}, {
   3.9354921197864013`*^9, 3.935492174693717*^9}, {3.935496263527192*^9, 
   3.9354963790207434`*^9}, {3.9354964125356455`*^9, 
   3.9354964269766045`*^9}, {3.935496469835565*^9, 3.935496517483079*^9}, {
   3.9354966193621845`*^9, 3.935496619997983*^9}, 3.935496655301485*^9, {
   3.9354967100521307`*^9, 3.9354967667577157`*^9}, {3.9354968163521395`*^9, 
   3.9354969321921043`*^9}, {3.9354969691387367`*^9, 
   3.9354969783869042`*^9}, {3.9354971314115276`*^9, 3.935497135778269*^9}, {
   3.935593537086877*^9, 3.9355935517668858`*^9}, {3.93565917705785*^9, 
   3.9356591914332924`*^9}, {3.9356592282671356`*^9, 3.935659268578105*^9}, {
   3.93565939967136*^9, 3.935659410430208*^9}, {3.9356594468895273`*^9, 
   3.9356594898601227`*^9}, {3.9356595326004925`*^9, 3.935659580572678*^9}, {
   3.9356596628208723`*^9, 3.9356597131178627`*^9}, {3.9356597555281677`*^9, 
   3.9356597799022493`*^9}, {3.935659853916791*^9, 3.935659871803939*^9}, {
   3.9356599040189686`*^9, 3.935659935292773*^9}, {3.935659993951193*^9, 
   3.9356600053690577`*^9}, {3.935660044881113*^9, 3.9356600824323626`*^9}, {
   3.935660112546616*^9, 3.935660167654935*^9}, {3.93566022478412*^9, 
   3.9356602258762536`*^9}, {3.9356602736596036`*^9, 3.935660335127184*^9}, {
   3.9356604375689244`*^9, 3.935660457751566*^9}, 3.935660496413842*^9, {
   3.935660645851804*^9, 3.9356606681691236`*^9}, {3.9356607032412643`*^9, 
   3.9356607071170015`*^9}, 3.9356608112857895`*^9, {3.935660918702505*^9, 
   3.9356609606786556`*^9}, {3.9356616427666655`*^9, 
   3.9356616949742703`*^9}, {3.9356618003143125`*^9, 3.93566182683217*^9}, {
   3.935661901508942*^9, 3.935661962256452*^9}, {3.9356621930691843`*^9, 
   3.9356622442007537`*^9}, {3.935662282379795*^9, 3.9356623065430927`*^9}, {
   3.9356624086530905`*^9, 3.935662477617585*^9}, 3.9356625087576094`*^9, {
   3.9356625391986237`*^9, 3.9356626704396935`*^9}, {3.935662700529814*^9, 
   3.9356627021122017`*^9}, {3.935662791440897*^9, 3.935662890766364*^9}, {
   3.935662936328455*^9, 3.9356631468828487`*^9}, {3.9356634410399218`*^9, 
   3.9356634489213376`*^9}, {3.9356635352763147`*^9, 
   3.9356635408672266`*^9}, {3.935663617401552*^9, 3.935663633550572*^9}, {
   3.9356636899536667`*^9, 3.935663759643582*^9}, {3.93566387319732*^9, 
   3.93566389829348*^9}, {3.935664002537224*^9, 3.935664045247888*^9}, {
   3.935664196389599*^9, 3.9356642089435425`*^9}, {3.9356644163488607`*^9, 
   3.935664421585895*^9}, {3.9356644699823904`*^9, 3.9356644725201645`*^9}, {
   3.935664859535985*^9, 3.935664880209991*^9}, {3.9362801517328787`*^9, 
   3.936280153521763*^9}, {3.936348148674762*^9, 3.936348176610924*^9}, {
   3.936348248851185*^9, 3.936348253788384*^9}, {3.936348400757764*^9, 
   3.9363484938089485`*^9}, {3.936702437377206*^9, 3.936702443562962*^9}, {
   3.936702474646617*^9, 3.9367024756682296`*^9}, {3.9367027142310395`*^9, 
   3.936702757083666*^9}, {3.936702799377924*^9, 3.936702800079433*^9}, {
   3.936702834393964*^9, 3.93670289031567*^9}, {3.936702933172142*^9, 
   3.936702946343616*^9}, {3.936702986801549*^9, 3.9367030038847013`*^9}, {
   3.9367032593437767`*^9, 3.936703267892476*^9}, {3.936703493447899*^9, 
   3.9367035098350134`*^9}, {3.936704805914229*^9, 3.9367050071930833`*^9}, 
   3.9367050479559193`*^9, {3.9367051036810646`*^9, 3.936705111374093*^9}, {
   3.9367057473459272`*^9, 3.9367057812588058`*^9}, {3.9367058551825094`*^9, 
   3.9367059439762735`*^9}, {3.9367063533272333`*^9, 
   3.9367065005871696`*^9}, {3.9367066962444744`*^9, 3.936706717086006*^9}, {
   3.93670699619414*^9, 3.9367069981000547`*^9}, {3.9367070836727886`*^9, 
   3.9367070866721535`*^9}, {3.9367071535638285`*^9, 
   3.9367071783205223`*^9}, {3.9367072262223063`*^9, 3.936707238183174*^9}, {
   3.9367074205633764`*^9, 3.9367074401526*^9}, {3.936707527366262*^9, 
   3.93670753010295*^9}, {3.9367076068358135`*^9, 3.936707735445566*^9}, {
   3.9367079385916166`*^9, 3.9367079476441765`*^9}, {3.9367079779213758`*^9, 
   3.9367080107231264`*^9}, {3.936708077666405*^9, 3.9367080955059257`*^9}, {
   3.9367081271012473`*^9, 3.9367081328179016`*^9}, {3.9367081779793835`*^9, 
   3.936708180776882*^9}, {3.9367083028625774`*^9, 3.9367083072454324`*^9}, {
   3.93670834308841*^9, 3.9367084215535784`*^9}, 3.9367085801056156`*^9, {
   3.936710014632085*^9, 3.9367100574795856`*^9}, {3.9367101029534054`*^9, 
   3.93671010484146*^9}, {3.9367101497553883`*^9, 3.936710153104847*^9}, {
   3.936710225462911*^9, 3.9367102579707966`*^9}, {3.9367103272445583`*^9, 
   3.9367103465921664`*^9}, {3.9367103795942726`*^9, 3.936710461520672*^9}, 
   3.936710542109434*^9, {3.9367106650857935`*^9, 3.9367107243060975`*^9}, {
   3.9367108082372108`*^9, 3.93671081461207*^9}, {3.9367108970061255`*^9, 
   3.936710899216343*^9}, 3.936710940578538*^9, {3.936710971811495*^9, 
   3.936710993913652*^9}, 3.936716946312395*^9, {3.9367170138450637`*^9, 
   3.9367170149160213`*^9}, {3.93671705074374*^9, 3.936717081147813*^9}, {
   3.9367171245753727`*^9, 3.936717129868247*^9}, {3.9367171665499268`*^9, 
   3.9367173708643484`*^9}, {3.9367174026083465`*^9, 
   3.9367174090331545`*^9}, {3.936717451410308*^9, 3.93671749752351*^9}, {
   3.9367175357936707`*^9, 3.9367176445707006`*^9}, {3.936717685805509*^9, 
   3.9367176874901667`*^9}, {3.936717721475011*^9, 3.936717780377079*^9}, {
   3.936717853333725*^9, 3.9367179485148563`*^9}, {3.9367179874590707`*^9, 
   3.9367180132438035`*^9}, {3.9367184760733633`*^9, 3.936718486208243*^9}, {
   3.936718767391658*^9, 3.936718773459408*^9}, {3.9367188942500563`*^9, 
   3.9367189165493374`*^9}, {3.93671896354288*^9, 3.9367189972651196`*^9}, {
   3.9367190320528483`*^9, 3.936719039836263*^9}, {3.936719109311325*^9, 
   3.9367191145377736`*^9}, 3.9367192711145844`*^9, {3.9367193687177277`*^9, 
   3.9367193720723624`*^9}, {3.9367194040163546`*^9, 3.936719405281252*^9}, {
   3.93671957972886*^9, 3.9367196176940436`*^9}, {3.936719738368928*^9, 
   3.936719739496422*^9}, {3.936719875200164*^9, 3.936719879818922*^9}, {
   3.9367200652529364`*^9, 3.9367200669932785`*^9}, {3.9367201017538013`*^9, 
   3.9367201827476244`*^9}, {3.9367202604732857`*^9, 3.936720303652875*^9}, {
   3.936720370081732*^9, 3.936720376173337*^9}, {3.936720445428853*^9, 
   3.936720478201702*^9}, {3.948838059145472*^9, 3.948838065933509*^9}, {
   3.948853283457582*^9, 3.9488532867848816`*^9}, {3.9508393651825533`*^9, 
   3.950839392682716*^9}, {3.95083946628718*^9, 3.9508394879224815`*^9}, {
   3.9508395519280767`*^9, 3.9508395725038013`*^9}, {3.9508442295258408`*^9, 
   3.95084423149422*^9}, {3.9508443685708523`*^9, 3.9508444066702576`*^9}, 
   3.9508444689340563`*^9, {3.9508444998018303`*^9, 3.9508445656041307`*^9}, {
   3.950844716223439*^9, 3.9508447289380507`*^9}, {3.95084486424971*^9, 
   3.950844866863945*^9}, 3.95084490858785*^9, {3.9508449452126527`*^9, 
   3.9508449577688875`*^9}, {3.9508451259770947`*^9, 3.950845129457012*^9}},
 CellLabel->
  "In[272]:=",ExpressionUUID->"1892aa3a-765d-4e9a-aa37-995e9d3d166b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datatest", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "4"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"6", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "5"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.950841548730444*^9, 3.950841549897719*^9}},
 CellLabel->"In[126]:=",
 CellID->332479036,ExpressionUUID->"b1c06ff1-0080-448d-9728-ca3613137cdb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"nlmtest", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"datatest", ",", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"a", " ", "+", 
       RowBox[{"b", " ", 
        RowBox[{"x", "^", "2"}]}]}], "]"}], "+", "c"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"nlmtest2", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"datatest", ",", 
    RowBox[{"a", " ", "+", 
     RowBox[{"c", " ", "x"}], "+", 
     RowBox[{"b", " ", 
      RowBox[{"x", "^", "2"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "x"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9508415464613357`*^9, 3.950841553158312*^9}, {
  3.9508415871347847`*^9, 3.950841596300654*^9}, {3.950842713566842*^9, 
  3.950842747587822*^9}, {3.9508428110630145`*^9, 3.950842816007162*^9}},
 CellLabel->"In[150]:=",
 CellID->516331820,ExpressionUUID->"a67f4048-5712-465d-9ab8-019592c0dfd1"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "0.40710884587506374`"}], "+", 
       RowBox[{"Log", "[", 
        RowBox[{"2.2631977680386415`", "\[VeryThinSpace]", "+", 
         RowBox[{"2.1430143608655245`", " ", 
          SuperscriptBox["x", "2"]}]}], "]"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`a -> 2.2631977680386415`, $CellContext`b -> 
      2.1430143608655245`, $CellContext`c -> -0.40710884587506374`}, \
{{$CellContext`x}, $CellContext`c + 
      Log[$CellContext`a + $CellContext`b $CellContext`x^2]}}, {1}, {{0, 1}, {
    1, 0}, {3, 2}, {5, 4}, {6, 4}, {7, 5}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{3.950841557852763*^9, 3.9508416076884007`*^9, 
  3.9508427510599966`*^9, 3.9508428172428784`*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"c2089713-f223-4ef5-86dd-9f1763fba024"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"0.42506887052341763`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.3942148760330587`", " ", "x"}], "+", 
       RowBox[{"0.039807162534435114`", " ", 
        SuperscriptBox["x", "2"]}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`a -> 0.42506887052341763`, $CellContext`b -> 
      0.039807162534435114`, $CellContext`c -> 
      0.3942148760330587}, {{$CellContext`x}, $CellContext`a + $CellContext`c \
$CellContext`x + $CellContext`b $CellContext`x^2}}, {1}, {{0, 1}, {1, 0}, {3, 
    2}, {5, 4}, {6, 4}, {7, 5}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{3.950841557852763*^9, 3.9508416076884007`*^9, 
  3.9508427510599966`*^9, 3.950842817253282*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"570382ee-dcc2-414d-9c49-2c138a63fd63"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", "\"\<ParameterTableEntries\>\"", "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"nlmtest", ",", "nlmtest2"}], "}"}]}], ",", "1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9508416324817142`*^9, 3.9508416342239437`*^9}, {
  3.950841708903159*^9, 3.9508417103538065`*^9}, {3.9508417411498213`*^9, 
  3.9508417958372145`*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"52dc4b09-331f-4186-b2b6-b847edac6305"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1.506320489155688`", ",", "1.1015855579614418`", ",", 
     "1.3674112539594614`", ",", "0.24329407557402982`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.4263297975161129`", ",", "0.6001231874169967`", ",", 
     "2.37672835748142`", ",", "0.07626023225306078`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8003992015968063`", ",", "0.41531612671508567`", ",", 
     "1.9272047245733237`", ",", "0.126220588095937`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.09331337325349304`", ",", "0.015329597963378879`", ",", 
     "6.087137671608273`", ",", "0.0036824555059367927`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.950841775632972*^9, 3.95084179636043*^9}},
 CellLabel->
  "Out[134]=",ExpressionUUID->"71da57be-38c9-4a2d-a2a0-566465284601"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Rest", "[", 
      RowBox[{"#", "[", "\"\<ParameterTableEntries\>\"", "]"}], "]"}], "&"}], 
    "/@", 
    RowBox[{"{", 
     RowBox[{"nlmtest", ",", "nlmtest2"}], "}"}]}], ",", "1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9508418136703196`*^9, 3.950841818190441*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"0c6eaca2-11a0-4766-bda0-ce686c91672c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1.4263297975161129`", ",", "0.6001231874169967`", ",", 
     "2.37672835748142`", ",", "0.07626023225306078`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.09331337325349304`", ",", "0.015329597963378879`", ",", 
     "6.087137671608273`", ",", "0.0036824555059367927`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.950841819302848*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"f36ec123-c1a9-4699-9de0-4b7aa5ea40b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Keys", "[", 
      RowBox[{"Rest", "[", 
       RowBox[{"#", "[", "\"\<BestFitParameters\>\"", "]"}], "]"}], "]"}], 
     "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"nlmtest", ",", "nlmtest2"}], "}"}]}], ",", "1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9508418714502525`*^9, 3.950841878670207*^9}, {
  3.9508419177916584`*^9, 3.950841960618451*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"41dcc135-a5ea-468c-838c-9d775693ea24"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", ",", "b"}], "}"}]], "Output",
 CellChangeTimes->{3.95084196151085*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"5691c9ae-c7a1-47c4-a0fe-39cf90eb6af7"]
}, Open  ]],

Cell[BoxData["nlmtest"], "Input",ExpressionUUID->"6aa50d08-dc5b-43be-9aeb-8b3af2ac3d15"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShortVisParameterTable4", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"nlmtest", ",", "nlmtest2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<H/V\>\"", ",", "\"\<\[PlusMinus]45\[Degree]\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9508421035953255`*^9, 3.950842132518407*^9}, {
  3.950842679279835*^9, 3.950842680340393*^9}, {3.9508443179679494`*^9, 
  3.9508443201771965`*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"13758b41-5104-4551-a2d8-afd301aba2f8"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"Basis\"\>", "\<\"Parameters\"\>"},
     {"\<\"H/V\"\>", "\<\"b :  2.1 \[PlusMinus]1.2\"\>"},
     {"\<\"\"\>", "\<\"c :  -0.4 \[PlusMinus]0.5\"\>"},
     {"\<\"\[PlusMinus]45\[Degree]\"\>", "\<\"b :  0.04 \[PlusMinus]0.07\"\>"},
     {"\<\"\"\>", "\<\"c :  0.4 \[PlusMinus]0.5\"\>"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7], 4 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.9508421441653547`*^9, 3.9508422962145195`*^9, {3.9508426681770434`*^9, 
   3.9508426835464525`*^9}, 3.9508427855739603`*^9, 3.9508428214904966`*^9, 
   3.9508433268770933`*^9, 3.95084341881841*^9, 3.950843717311693*^9, 
   3.950843816062435*^9, 3.9508438914847393`*^9, {3.9508440994702053`*^9, 
   3.950844123425749*^9}, {3.95084416278715*^9, 3.950844186847699*^9}, 
   3.950844321149001*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"c8d5cfc7-d64d-432c-9d54-d0a4307c3a51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ShortVisParameterTable4", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nlmtest", ",", "nlmtest2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<H/V\>\"", ",", "\"\<\[PlusMinus]45\[Degree]\>\""}], 
        "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ShortVisParameterTable4", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nlmtest", ",", "nlmtest2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<H/V\>\"", ",", "\"\<\[PlusMinus]45\[Degree]\>\""}], 
        "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"Spacings", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9508451520212555`*^9, 3.9508451559088306`*^9}},
 CellLabel->
  "In[271]:=",ExpressionUUID->"a8320667-c675-404b-adae-f3482c05cead"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox[
      TagBox[GridBox[{
         {"\<\"Basis\"\>", "\<\"Parameters\"\>"},
         {"\<\"H/V\"\>", "\<\"b :  2.1 \[PlusMinus]1.2\"\>"},
         {"\<\"\"\>", "\<\"c :  -0.4 \[PlusMinus]0.5\"\>"},
         {"\<\"\[PlusMinus]45\[Degree]\"\>", "\<\"b :  0.04 \
\[PlusMinus]0.07\"\>"},
         {"\<\"\"\>", "\<\"c :  0.4 \[PlusMinus]0.5\"\>"}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
        GridBoxDividers->{
         "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
          "RowsIndexed" -> {2 -> GrayLevel[0.7], 4 -> GrayLevel[0.7]}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{
         "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
       "Grid"], "DialogStyle",
      StripOnInput->False]},
    {
     StyleBox[
      TagBox[GridBox[{
         {"\<\"Basis\"\>", "\<\"Parameters\"\>"},
         {"\<\"H/V\"\>", "\<\"b :  2.1 \[PlusMinus]1.2\"\>"},
         {"\<\"\"\>", "\<\"c :  -0.4 \[PlusMinus]0.5\"\>"},
         {"\<\"\[PlusMinus]45\[Degree]\"\>", "\<\"b :  0.04 \
\[PlusMinus]0.07\"\>"},
         {"\<\"\"\>", "\<\"c :  0.4 \[PlusMinus]0.5\"\>"}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
        GridBoxDividers->{
         "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
          "RowsIndexed" -> {2 -> GrayLevel[0.7], 4 -> GrayLevel[0.7]}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{
         "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
       "Grid"], "DialogStyle",
      StripOnInput->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.9508451587283044`*^9},
 CellLabel->
  "Out[271]=",ExpressionUUID->"bcc0210f-81e3-49b0-827b-4d9f13006fe7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sigFigs", "[", 
  RowBox[{"4", ",", "0.2"}], "]"}]], "Input",
 CellChangeTimes->{{3.9508431536647935`*^9, 3.950843158150004*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"b3691541-e794-4684-8af6-42a308115c9d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.`2.", ",", "0.2`1."}], "}"}]], "Output",
 CellChangeTimes->{3.950843159053056*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"32127eac-80ed-4578-a187-6135a1ace36c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShortVisParameterTable4", "[", 
   RowBox[{"fitmodels_", ",", "labels_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "datalist", ",", "params", ",", "keys", ",", "header", ",", "vals", ",", 
      "num", ",", "bases", ",", "dividers"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"header", "=", 
      RowBox[{"{", 
       RowBox[{"\"\<Basis\>\"", ",", "\"\<Parameters\>\""}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"params", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Rest", "[", 
           RowBox[{"#", "[", "\"\<ParameterTableEntries\>\"", "]"}], "]"}], 
          "&"}], "/@", "fitmodels"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"keys", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Keys", "[", 
           RowBox[{"Rest", "[", 
            RowBox[{"#", "[", "\"\<BestFitParameters\>\"", "]"}], "]"}], 
           "]"}], "&"}], "/@", "fitmodels"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"num", "=", 
      RowBox[{"Length", "[", 
       RowBox[{"Rest", "[", 
        RowBox[{
         RowBox[{"fitmodels", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
         "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"bases", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"IsDivisible", "[", 
           RowBox[{
            RowBox[{"i", "/", "num"}], ",", "1"}], "]"}], ",", 
          RowBox[{"labels", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"Round", "[", 
              RowBox[{"i", "/", "num"}], "]"}], "+", "1"}], "]"}], "]"}], 
          ",", "\"\<\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{
           RowBox[{"Length", "[", "keys", "]"}], "-", "1"}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"dividers", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"IsDivisible", "[", 
             RowBox[{
              RowBox[{"i", "/", "num"}], ",", "1"}], "]"}], ",", 
            RowBox[{
             RowBox[{"i", "+", "2"}], "->", 
             RowBox[{"GrayLevel", "[", "0.7`", "]"}]}], ",", "\"\<\>\""}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"Length", "[", "keys", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}], ",", 
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{"#", ",", 
           RowBox[{"_", "->", "_"}]}], "]"}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"vals", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"sigFigs", "[", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", "params"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"vals", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"sf", "[", 
         RowBox[{"\"\<`1` \[PlusMinus]`2`\>\"", ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", "vals"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"vals", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"sf", "[", 
         RowBox[{"\"\<`1` :  `2`\>\"", ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"keys", ",", "vals"}], "}"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"datalist", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "header", "}"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"bases", ",", "vals"}], "}"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     TagBox[
      StyleBox[
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{"datalist", ",", 
           RowBox[{"Alignment", "->", 
            RowBox[{"{", 
             RowBox[{"Left", ",", "Automatic"}], "}"}]}], ",", 
           RowBox[{"Dividers", "->", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", "->", 
                RowBox[{"GrayLevel", "[", "0.7`", "]"}]}], "}"}], ",", 
              "dividers"}], "}"}]}], ",", 
           RowBox[{"Rule", "[", 
            RowBox[{"Spacings", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2", "->", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", "->", "0.75`"}], "}"}]}], "}"}]}], "]"}]}], 
          "]"}], ",", "\"\<DialogStyle\>\""}], "]"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.950839599320099*^9, {3.9508396294899035`*^9, 3.950839646483925*^9}, {
   3.9508397847801647`*^9, 3.950839815376213*^9}, {3.9508398569465895`*^9, 
   3.9508399057995954`*^9}, 3.9508400183673716`*^9, 3.9508400635084305`*^9, {
   3.950840125492916*^9, 3.95084012904745*^9}, {3.9508401882967796`*^9, 
   3.9508401980240755`*^9}, {3.9508402767045884`*^9, 
   3.9508403325027666`*^9}, {3.950840533015682*^9, 3.95084055200733*^9}, {
   3.9508405897300596`*^9, 3.950840619209002*^9}, {3.9508406509848394`*^9, 
   3.950840776174019*^9}, {3.950840861763981*^9, 3.9508410035476904`*^9}, {
   3.9508410425901875`*^9, 3.950841050926405*^9}, {3.9508410979395304`*^9, 
   3.950841110460395*^9}, {3.9508411590281734`*^9, 3.9508411761017847`*^9}, {
   3.950841265688188*^9, 3.950841355691721*^9}, {3.9508414049979963`*^9, 
   3.950841420259843*^9}, {3.9508418344547243`*^9, 3.950841850467754*^9}, {
   3.9508419699588113`*^9, 3.950841978094564*^9}, {3.9508422575876784`*^9, 
   3.9508422855475855`*^9}, {3.950842406968619*^9, 3.9508424190889378`*^9}, {
   3.950842459490281*^9, 3.9508424700983286`*^9}, {3.9508425039317684`*^9, 
   3.950842510252359*^9}, {3.9508425486625175`*^9, 3.950842590453931*^9}, {
   3.9508426274311924`*^9, 3.950842661141251*^9}, {3.9508430760542235`*^9, 
   3.9508430912472086`*^9}, {3.9508432183498783`*^9, 
   3.9508433161935663`*^9}, {3.950843411407045*^9, 3.950843449692651*^9}, {
   3.950843480827042*^9, 3.9508435099618607`*^9}, {3.9508435594324045`*^9, 
   3.9508435762726164`*^9}, {3.950843621276102*^9, 3.950843701738796*^9}, {
   3.9508437625876637`*^9, 3.9508438083949986`*^9}, {3.9508438578776994`*^9, 
   3.9508438617475047`*^9}, {3.950843915315115*^9, 3.9508439287114277`*^9}, {
   3.9508440153303227`*^9, 3.950844028603244*^9}, {3.9508440817570925`*^9, 
   3.9508441178468933`*^9}, {3.9508441531279354`*^9, 3.950844202505704*^9}, {
   3.950844294457593*^9, 3.9508443059713116`*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"feb367e0-6332-4d3d-9634-acd11e7454f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsDivisible", "[", 
  RowBox[{
   RowBox[{"0", "/", "3"}], ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.9508411165344343`*^9, 3.95084112062022*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"0ffa4371-6728-4f11-bafa-70b0e7999c8f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9508411216308618`*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"42e44ef7-63b0-4363-ae87-7a820c36f387"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsDivisible", "//", "Definition"}]], "Input",
 CellChangeTimes->{{3.9508397028679476`*^9, 3.950839707842362*^9}, 
   3.950841081234098*^9},
 CellLabel->
  "In[124]:=",ExpressionUUID->"d9f5ec99-ba89-4df5-bc8d-c74abb5eefaa"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"IsDivisible", "[", 
          RowBox[{"num1_", ",", "num2_", ",", 
           RowBox[{"tol_", ":", 
            FractionBox["1", "10000000000"]}]}], "]"}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "quotient", "}"}], ",", 
           RowBox[{
            RowBox[{"quotient", "=", 
             FractionBox["num1", "num2"]}], ";", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"Round", "[", "quotient", "]"}], "-", "quotient"}], 
              "]"}], "<", "tol"}]}]}], "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "Rows" -> {{1.}}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
  Definition[$CellContext`IsDivisible],
  Editable->False]], "Output",
 CellChangeTimes->{3.950839708884944*^9, 3.950841082304799*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"a83e7e0f-6959-4880-9791-4fcc17c4514a"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Import data", "Subsection",
 CellChangeTimes->{{3.930908491881335*^9, 
  3.9309084938223987`*^9}},ExpressionUUID->"a7a73e6e-4bab-4242-a7a8-\
6180841a792e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dataMaster", "=", 
    RowBox[{"<|", "|>"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Define", " ", "the", " ", "directory", " ", "path"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dir", " ", "=", "\"\<sample_data_dualCQMs_spdc_photons\>\""}], 
   ";"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "the", " ", "list", " ", "of", " ", "CSV", " ", "file", " ", 
    "paths"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"csvFiles", "=", 
    RowBox[{"FileNames", "[", 
     RowBox[{"\"\<*.csv\>\"", ",", "dir"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "the", " ", "filenames", " ", "from", " ", "the", " ", "file", 
    " ", "paths"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fileNames", "=", 
    RowBox[{"FileNameTake", "/@", "csvFiles"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"key", "=", " ", 
      RowBox[{
       RowBox[{"StringCases", "[", 
        RowBox[{"filename", ",", 
         RowBox[{
          RowBox[{"\"\<cyc(\>\"", "~~", 
           RowBox[{"n1", ":", "NumberString"}], "~~", "\"\<-\>\"", "~~", 
           RowBox[{"n2", ":", "NumberString"}], "~~", "\"\<)\>\""}], ":>", 
          RowBox[{
          "\"\<(\>\"", "<>", "n1", "<>", "\"\<,\>\"", "<>", "n2", "<>", 
           "\"\<)\>\""}]}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"key", "=", 
      RowBox[{"key", "<>", "\"\<,\>\"", "<>", 
       RowBox[{
        RowBox[{"StringCases", "[", 
         RowBox[{"filename", ",", 
          RowBox[{
           RowBox[{"\"\<tri(\>\"", "~~", 
            RowBox[{"trial", ":", 
             RowBox[{"WordCharacter", ".."}]}], "~~", "\"\<)\>\""}], ":>", 
           "trial"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"key", "=", 
      RowBox[{"key", "<>", "\"\<,\>\"", "<>", 
       RowBox[{
        RowBox[{"StringCases", "[", 
         RowBox[{"filename", ",", 
          RowBox[{
           RowBox[{"\"\<pol(\>\"", "~~", 
            RowBox[{"p1", ":", "NumberString"}], "~~", "\"\<,\>\"", "~~", 
            RowBox[{"p2", ":", "NumberString"}], "~~", "\"\<,\>\"", "~~", 
            RowBox[{"p3", ":", "NumberString"}], "~~", "\"\<,\>\"", "~~", 
            RowBox[{"p4", ":", "NumberString"}], "~~", "\"\<)\>\""}], ":>", 
           RowBox[{
           "\"\<(\>\"", "<>", "p1", "<>", "\"\<,\>\"", "<>", "p2", "<>", 
            "\"\<,\>\"", "<>", "p3", "<>", "\"\<,\>\"", "<>", "p4", "<>", 
            "\"\<)\>\""}]}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"key", "=", 
      RowBox[{"key", "<>", "\"\<,\>\"", "<>", 
       RowBox[{
        RowBox[{"StringCases", "[", 
         RowBox[{"filename", ",", 
          RowBox[{
           RowBox[{"\"\<dur(\>\"", "~~", 
            RowBox[{"d1", ":", "NumberString"}], "~~", "\"\<)\>\""}], ":>", 
           "d1"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempData", " ", "=", " ", 
      RowBox[{"importHistCSVData", "[", 
       RowBox[{"dir", ",", "filename"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"dataMaster", ",", 
       RowBox[{"key", "->", "tempData"}]}], "]"}]}], "\[IndentingNewLine]", 
    ",", 
    RowBox[{"{", 
     RowBox[{"filename", ",", "fileNames"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"visdata", "=", 
   RowBox[{"<|", "|>"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"visdataDurations", "=", 
    RowBox[{"<|", "|>"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cycTime", "=", "27"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"intRadius", "=", "3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"c1", ",", "c2", ",", "tri", ",", "pols", ",", "dur"}], "}"}], 
      "=", 
      RowBox[{"parseKey", "[", "key", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"dur", "<", "90"}], ",", 
         RowBox[{"Continue", "[", "]"}]}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"ranges", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"#", "*", "cycTime"}], " ", "+", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "intRadius"}], ",", "intRadius"}], "}"}]}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"(", 
          RowBox[{"c1", "-", "c2"}], ")"}], ",", "c1", ",", 
         RowBox[{"-", "c2"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"cycStr", "=", 
      RowBox[{"sf", "[", 
       RowBox[{"\"\<`1`-`2`\>\"", ",", "c1", ",", "c2"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringTake", "[", 
         RowBox[{"tri", ",", "2"}], "]"}], "==", "\"\<ee\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"measBasis", "=", 
        RowBox[{"Switch", "[", 
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"tri", ",", 
            RowBox[{"{", "3", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          "\"\<1\>\"", ",", 
          RowBox[{
           RowBox[{"polB", "=", 
            RowBox[{"pols", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", 
           RowBox[{"polA", "=", 
            RowBox[{"pols", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ";", 
           RowBox[{"pols", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          "\"\<2\>\"", ",", 
          RowBox[{
           RowBox[{"polB", "=", 
            RowBox[{"pols", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ";", 
           RowBox[{"polA", "=", 
            RowBox[{"pols", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], ";", 
           RowBox[{"pols", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"sums", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"sumPointsWithinRange", "[", 
         RowBox[{
          RowBox[{"cxy", "[", 
           RowBox[{
            RowBox[{"dataMaster", "[", "key", "]"}], ",", 
            RowBox[{"ch", "[", "#", "]"}]}], "]"}], ",", 
          RowBox[{"ranges", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", 
       RowBox[{"lenRange", "[", "ranges", "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"visdata", "[", 
            RowBox[{"lvl", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"visdata", ",", 
            RowBox[{
             RowBox[{"lvl", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "->", 
             RowBox[{"<|", "|>"}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{
            RowBox[{"visdata", "[", 
             RowBox[{"lvl", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
            RowBox[{"lvl", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"visdata", "[", 
             RowBox[{"lvl", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"lvl", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "->", 
             RowBox[{"<|", "|>"}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"visdata", "[", 
            RowBox[{
             RowBox[{"lvl", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"lvl", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"lvl", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"visdata", "[", 
             RowBox[{
              RowBox[{"lvl", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"lvl", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"lvl", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "->", 
             RowBox[{"<|", "|>"}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"visdata", "[", 
            RowBox[{
             RowBox[{"lvl", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"lvl", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"lvl", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ",", 
             RowBox[{"lvl", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"visdata", "[", 
             RowBox[{
              RowBox[{"lvl", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"lvl", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"lvl", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"lvl", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "->", 
             RowBox[{"{", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}], 
        ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"lvl", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "tri", ",", "cycStr", ",", "\"\<bb\>\"", ",", "measBasis"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "tri", ",", "cycStr", ",", "\"\<aa\>\"", ",", "measBasis"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "tri", ",", "cycStr", ",", "\"\<a1\>\"", ",", "measBasis"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "tri", ",", "cycStr", ",", "\"\<a2\>\"", ",", "measBasis"}], 
            "}"}]}], "}"}]}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"visdataDurations", "[", 
            RowBox[{"lvl", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"visdataDurations", ",", 
            RowBox[{
             RowBox[{"lvl", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "->", 
             RowBox[{"<|", "|>"}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"visdataDurations", "[", 
            RowBox[{
             RowBox[{"lvl", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"lvl", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"visdataDurations", "[", 
             RowBox[{"lvl", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"lvl", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "->", 
             RowBox[{"<|", "|>"}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"visdataDurations", "[", 
            RowBox[{
             RowBox[{"lvl", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"lvl", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"lvl", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"visdataDurations", "[", 
             RowBox[{
              RowBox[{"lvl", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"lvl", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"lvl", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "->", "dur"}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"lvl", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "tri", ",", "cycStr", ",", "\"\<bb\>\"", ",", "measBasis"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "tri", ",", "cycStr", ",", "\"\<aa\>\"", ",", "measBasis"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "tri", ",", "cycStr", ",", "\"\<a1\>\"", ",", "measBasis"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "tri", ",", "cycStr", ",", "\"\<a2\>\"", ",", "measBasis"}], 
            "}"}]}], "}"}]}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       RowBox[{"visdata", "[", 
        RowBox[{"tri", ",", "cycStr", ",", "\"\<bb\>\"", ",", "measBasis"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"polB", ",", 
         RowBox[{"sums", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       RowBox[{"visdata", "[", 
        RowBox[{"tri", ",", "cycStr", ",", "\"\<aa\>\"", ",", "measBasis"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"polA", ",", 
         RowBox[{"sums", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       RowBox[{"visdata", "[", 
        RowBox[{"tri", ",", "cycStr", ",", "\"\<a1\>\"", ",", "measBasis"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pols", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"sums", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       RowBox[{"visdata", "[", 
        RowBox[{"tri", ",", "cycStr", ",", "\"\<a2\>\"", ",", "measBasis"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pols", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{"sums", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"key", ",", 
      RowBox[{"dataMaster", "//", "Keys"}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"visdataAndErr", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"coincErr", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
     "visdata", ",", 
     RowBox[{"{", "5", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"visdataAndErrPerMin", "=", 
    RowBox[{"MapIndexed", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#1", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"60", "*", 
          RowBox[{
           RowBox[{"#1", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "/", 
           RowBox[{"visdataDurations", "[", 
            RowBox[{"[", 
             RowBox[{"Sequence", "@@", 
              RowBox[{"#2", "[", 
               RowBox[{"[", 
                RowBox[{";;", "3"}], "]"}], "]"}]}], "]"}], "]"}]}]}]}], 
        "}"}], "&"}], ",", "visdataAndErr", ",", 
      RowBox[{"{", "5", "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tempFittedPlot", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tempFittedPlotPerMin", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "[", 
           RowBox[{"visdataAndErr", "[", 
            RowBox[{"trial", ",", "cycStr", ",", "ch"}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Continue", "[", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{
               RowBox[{"visdataAndErr", "[", 
                RowBox[{"trial", ",", "cycStr", ",", "ch"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "<", "4"}], ",", " ", 
            RowBox[{"Continue", "[", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"durMinutes", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"IsDivisible", "[", 
            RowBox[{
             RowBox[{"visdataDurations", "[", 
              RowBox[{"trial", ",", "cycStr", ",", "ch"}], "]"}], ",", "60"}],
             "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Round", "[", 
             RowBox[{"visdataDurations", "[", 
              RowBox[{"trial", ",", "cycStr", ",", "ch"}], "]"}], "]"}], "/", 
            "60"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"visdataDurations", "[", 
             RowBox[{"trial", ",", "cycStr", ",", "ch"}], "]"}], "/", 
            "60."}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{"tri", ",", "2"}], "]"}], "==", "\"\<ee\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"measBasis", "=", 
           RowBox[{"Switch", "[", 
            RowBox[{
             RowBox[{"StringTake", "[", 
              RowBox[{"tri", ",", 
               RowBox[{"{", "3", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
             "\"\<1\>\"", ",", 
             RowBox[{
              RowBox[{"polB", "=", 
               RowBox[{"pols", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", 
              RowBox[{"polA", "=", 
               RowBox[{"pols", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ";", 
              RowBox[{"pols", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
             "\"\<2\>\"", ",", 
             RowBox[{
              RowBox[{"polB", "=", 
               RowBox[{"pols", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ";", 
              RowBox[{"polA", "=", 
               RowBox[{"pols", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], ";", 
              RowBox[{"pols", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"tempTitle", "=", 
         RowBox[{
          RowBox[{"Switch", "[", 
           RowBox[{
           "ch", ",", "\"\<bb\>\"", ",", "\"\<Before\>\"", ",", "\"\<aa\>\"", 
            ",", "\"\<After\>\"", ",", "_", ",", "ch"}], "]"}], "<>", 
          "\"\< Cyc: \>\"", "<>", "cycStr"}]}], 
        RowBox[{"(*", 
         RowBox[{"<>", " ", "\"\< Trial: \>\"", "<>", "trial"}], "*)"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"rools", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{
            "the", " ", "sum", " ", "of", " ", "the", " ", "cycles", " ", 
             "is", " ", "even"}], "..."}], "*)"}], 
          RowBox[{
           RowBox[{
            RowBox[{"EvenQ", "[", 
             RowBox[{
              RowBox[{"StringCases", "[", 
               RowBox[{"cycStr", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"n1", ":", "NumberString"}], "~~", "\"\<-\>\"", "~~", 
                  RowBox[{"n2", ":", "NumberString"}]}], ":>", 
                 RowBox[{
                  RowBox[{"ToExpression", "[", "n1", "]"}], "+", 
                  RowBox[{"ToExpression", "[", "n2", "]"}]}]}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", "]"}], "||", 
            RowBox[{"ch", "==", "\"\<bb\>\""}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"0", "->", "90"}], ",", 
             RowBox[{"90", "->", "0"}], ",", 
             RowBox[{"45", "->", 
              RowBox[{"-", "45"}]}], ",", 
             RowBox[{"135", "->", "45"}], ",", 
             RowBox[{
              RowBox[{"-", "45"}], "->", "45"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"135", "->", 
             RowBox[{"-", "45"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"angle", "=", 
         RowBox[{
          RowBox[{"Keys", "[", 
           RowBox[{"visdataAndErr", "[", 
            RowBox[{"trial", ",", "cycStr", ",", "ch"}], "]"}], "]"}], "/.", 
          "rools"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"tempLegend", "=", 
         RowBox[{"{", 
          RowBox[{"\"\<HV\>\"", ",", "\"\<\[PlusMinus]45\[Degree]\>\""}], 
          "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"tempAxesLabels", "=", 
         RowBox[{"{", 
          RowBox[{"\"\<Measurement Angle\>\"", ",", 
           RowBox[{"\"\<Coinc. per \>\"", "<>", 
            RowBox[{"ToString", "[", "durMinutes", "]"}], "<>", 
            "\"\< min\>\""}]}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempAxesLabels2", "=", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Measurement Angle\>\"", ",", "\"\<Coinc. per min\>\""}], 
          "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"showAdjAngle", "=", "True"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "nlmFitSin3", " ", "limits", " ", "the", " ", "visibility", " ", 
          "from", " ", "0", " ", "to", " ", "1", " ", "but", " ", "this", " ",
           "can", " ", "lead", " ", "to", " ", "strange", " ", 
          "uncertainties", "\[IndentingNewLine]", "nlmFitSin2", " ", "does", 
          " ", "not", " ", "limit", " ", "visibility", " ", "values", " ", 
          "\[IndentingNewLine]", "nlmFitSin4", " ", "is", " ", "the", " ", 
          "same", " ", "as", " ", "2", " ", "but", " ", "with", " ", "a", " ",
           "more", " ", "compact", " ", "data", " ", "table"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"tempFittedPlot", ",", 
          RowBox[{"nlmFitSin4", "[", 
           RowBox[{
            RowBox[{"visdataAndErr", "[", 
             RowBox[{"trial", ",", "cycStr", ",", "ch"}], "]"}], ",", 
            RowBox[{"peakAngle", "->", "angle"}], ",", 
            RowBox[{"includeAdjAngle", "->", "showAdjAngle"}], ",", 
            RowBox[{"title", "->", "tempTitle"}], ",", 
            RowBox[{"size", "->", "260"}], ",", 
            RowBox[{"gridLabels", "->", "tempLegend"}], ",", 
            RowBox[{"axesLabels", "->", "tempAxesLabels"}]}], "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"tempFittedPlotPerMin", ",", 
          RowBox[{"nlmFitSin4", "[", 
           RowBox[{
            RowBox[{"visdataAndErrPerMin", "[", 
             RowBox[{"trial", ",", "cycStr", ",", "ch"}], "]"}], ",", 
            RowBox[{"peakAngle", "->", "angle"}], ",", 
            RowBox[{"includeAdjAngle", "->", "showAdjAngle"}], ",", 
            RowBox[{"title", "->", "tempTitle"}], ",", 
            RowBox[{"size", "->", "260"}], ",", 
            RowBox[{"gridLabels", "->", "tempLegend"}], ",", 
            RowBox[{"axesLabels", "->", "tempAxesLabels2"}]}], "]"}]}], "]"}],
         ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"cycStr", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"sf", "[", 
             RowBox[{"\"\<`1`-`2`\>\"", ",", "c1", ",", "c2"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"c1", ",", "0", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"c2", ",", "0", ",", "10"}], "}"}]}], "]"}], "]"}]}], 
        "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"ch", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<bb\>\"", ",", "\"\<aa\>\""}], 
        RowBox[{"(*", 
         RowBox[{",", "\"\<a1\>\"", ",", "\"\<a2\>\""}], "*)"}], "}"}]}], 
      "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"trial", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<vv\>\"", ",", "\"\<ee1\>\"", ",", "\"\<ee2\>\"", ",", 
       "\"\<ddNoGating\>\"", ",", "\"\<dd1\>\"", ",", "\"\<dd2\>\"", ",", 
       "\"\<dd3\>\"", ",", "\"\<ddT\>\"", ",", "\"\<hh\>\"", ",", 
       "\"\<aa\>\"", ",", "\"\<ad\>\"", ",", "\"\<da\>\"", ",", "\"\<hv\>\"", 
       ",", "\"\<vh\>\""}], "}"}]}], "}"}]}], "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.935762330275389*^9, 3.9357623708167586`*^9}, {
   3.9357624021874495`*^9, 3.935762411087164*^9}, {3.9357624411505313`*^9, 
   3.935762442072826*^9}, {3.9361764865168133`*^9, 3.9361764888649654`*^9}, 
   3.9362803120250072`*^9, {3.9362819625263443`*^9, 3.9362821073046827`*^9}, 
   3.936282320421774*^9, {3.9362867136844983`*^9, 3.9362867653065224`*^9}, {
   3.936286847789277*^9, 3.936286889933092*^9}, {3.9362936575806627`*^9, 
   3.9362936879079604`*^9}, {3.936347873746601*^9, 3.9363478901101313`*^9}, {
   3.9363479451745253`*^9, 3.9363479453068237`*^9}, {3.936348045093492*^9, 
   3.9363480675138545`*^9}, {3.9363488286373763`*^9, 3.9363488320165124`*^9}, 
   3.936698539146982*^9, 3.936701926386397*^9, {3.936720790205574*^9, 
   3.9367208375068*^9}, {3.936720893861966*^9, 3.936720938227764*^9}, {
   3.9367999450804567`*^9, 3.9367999520874233`*^9}, {3.9375007022671137`*^9, 
   3.9375007233563437`*^9}, {3.9379960077964144`*^9, 3.937996053340873*^9}, {
   3.937996250454667*^9, 3.937996277120646*^9}, {3.937996479710364*^9, 
   3.9379965018959312`*^9}, {3.938088952711155*^9, 3.938088985399476*^9}, {
   3.938089017261352*^9, 3.9380890206686893`*^9}, {3.93808905108541*^9, 
   3.938089068866417*^9}, {3.938089102167905*^9, 3.9380891516958776`*^9}, {
   3.9380892502098083`*^9, 3.938089255826523*^9}, {3.9380892863090487`*^9, 
   3.9380893005104575`*^9}, {3.9380893344793997`*^9, 3.938089484728101*^9}, {
   3.938089564582494*^9, 3.9380896512347403`*^9}, {3.938089703396251*^9, 
   3.938089721439037*^9}, {3.9380897680062914`*^9, 3.938089869688125*^9}, {
   3.9380899046008472`*^9, 3.938089912512183*^9}, {3.9380900351645193`*^9, 
   3.9380901221953783`*^9}, {3.9380902935973616`*^9, 
   3.9380903411319675`*^9}, {3.9380903829478025`*^9, 3.938090428204825*^9}, {
   3.9380905179831734`*^9, 3.9380905294575033`*^9}, {3.9380905966780825`*^9, 
   3.9380906048729734`*^9}, {3.9380929381942854`*^9, 3.938092939610141*^9}, 
   3.9380930921831226`*^9, {3.938093122469538*^9, 3.9380931307625084`*^9}, 
   3.938093191290807*^9, {3.938093464354912*^9, 3.938093467309965*^9}, {
   3.9380936171197777`*^9, 3.938093645942147*^9}, {3.9381076223137627`*^9, 
   3.9381076524190545`*^9}, {3.9381077519956627`*^9, 
   3.9381077662376986`*^9}, {3.9381100831202955`*^9, 3.9381100848898787`*^9}, 
   3.938518253163571*^9, {3.938518319265299*^9, 3.938518322342457*^9}, {
   3.9385184466625586`*^9, 3.9385184540228424`*^9}, {3.9385185159052696`*^9, 
   3.938518518590156*^9}, {3.9385186236319857`*^9, 3.938518646219316*^9}, {
   3.9385187666568723`*^9, 3.9385187835014515`*^9}, 3.9385188694276123`*^9, {
   3.938518909407398*^9, 3.9385189526641903`*^9}, {3.938519048007517*^9, 
   3.938519103635998*^9}, {3.9385191346728773`*^9, 3.938519149144885*^9}, {
   3.9385193304716954`*^9, 3.9385193905139065`*^9}, {3.9385200065708404`*^9, 
   3.9385200826448593`*^9}, {3.938520113767703*^9, 3.9385201335519314`*^9}, {
   3.938520169531402*^9, 3.938520281276335*^9}, {3.93852032462039*^9, 
   3.9385204141805754`*^9}, {3.938520468403674*^9, 3.938520575647784*^9}, {
   3.9385206218628263`*^9, 3.938520668409109*^9}, {3.9385206994337115`*^9, 
   3.9385207324704294`*^9}, {3.9385221910415645`*^9, 3.93852219649819*^9}, {
   3.9385222300313606`*^9, 3.9385222701041574`*^9}, {3.9385323030592756`*^9, 
   3.938532391215273*^9}, {3.938539303206072*^9, 3.9385393172659516`*^9}, {
   3.9385393501994395`*^9, 3.938539386688905*^9}, {3.938539499963971*^9, 
   3.938539501432091*^9}, {3.9385395520227194`*^9, 3.938539649579774*^9}, {
   3.9385398507325525`*^9, 3.93853986341019*^9}, 3.938539982409734*^9, {
   3.9385403347056274`*^9, 3.938540334918143*^9}, 3.938540396020734*^9, {
   3.9385404272250814`*^9, 3.9385404677010183`*^9}, {3.938540519567161*^9, 
   3.938540525752591*^9}, {3.93854056776022*^9, 3.9385406027528424`*^9}, {
   3.938540650362212*^9, 3.938540797285278*^9}, {3.9385408477798195`*^9, 
   3.9385409701590767`*^9}, {3.938541025262802*^9, 3.9385410500721335`*^9}, 
   3.9385412885645533`*^9, {3.9385413290879016`*^9, 3.9385413557636895`*^9}, {
   3.9385414011309233`*^9, 3.9385414267804174`*^9}, {3.938541469041239*^9, 
   3.9385414794444757`*^9}, {3.938541597735361*^9, 3.938541615140322*^9}, 
   3.938541680592162*^9, 3.938541776324587*^9, {3.9385421188293934`*^9, 
   3.938542151081791*^9}, {3.9385422849331255`*^9, 3.938542286822545*^9}, {
   3.9385427793076878`*^9, 3.938542784741162*^9}, {3.9385428204014034`*^9, 
   3.9385428230867968`*^9}, {3.9385428798975215`*^9, 
   3.9385429534903584`*^9}, {3.9385430768107305`*^9, 3.938543083121687*^9}, {
   3.938543114011552*^9, 3.938543114650999*^9}, {3.9385432356776733`*^9, 
   3.93854323787219*^9}, 3.9385436843423033`*^9, 3.9385437445311117`*^9, {
   3.938620159614958*^9, 3.938620159768613*^9}, {3.9392418133231363`*^9, 
   3.939241815869948*^9}, 3.9488342789684505`*^9, {3.948835031870015*^9, 
   3.948835038015755*^9}, {3.948835399993963*^9, 3.9488354065881815`*^9}, {
   3.9488357235950727`*^9, 3.948835772936112*^9}, {3.9488358404786587`*^9, 
   3.9488358554142976`*^9}, {3.9488359011811757`*^9, 
   3.9488359114972057`*^9}, {3.948835945494248*^9, 3.948835993197466*^9}, {
   3.9488365533992357`*^9, 3.94883657993071*^9}, {3.948836737696176*^9, 
   3.948836811992519*^9}, {3.948837338665156*^9, 3.948837340591156*^9}, {
   3.948837547245493*^9, 3.9488376033552275`*^9}, {3.948838124635929*^9, 
   3.9488382199091067`*^9}, {3.948838630173396*^9, 3.9488386658469396`*^9}, {
   3.948838703816801*^9, 3.9488387420268583`*^9}, {3.9488388200191045`*^9, 
   3.948838820510661*^9}, {3.9488529454890704`*^9, 3.9488529466792536`*^9}, {
   3.9488529996222816`*^9, 3.9488530224319196`*^9}, 3.948853330837572*^9, 
   3.948853422976591*^9, 3.9488737797304*^9, {3.950844607654785*^9, 
   3.9508446145181684`*^9}, {3.95084467793495*^9, 3.950844681882588*^9}, {
   3.9508468561279864`*^9, 3.9508469390797606`*^9}, {3.9508471281165795`*^9, 
   3.950847185516322*^9}, {3.9510081901209364`*^9, 
   3.9510082075861406`*^9}},ExpressionUUID->"bc3e0040-d232-4c1d-8e93-\
d2acff18a150"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"tempFittedPlot", ",", "\"\<\\t\>\""}], "]"}]], "Input",
 CellLabel->
  "In[294]:=",ExpressionUUID->"ea52b85c-6202-4ef8-a478-8f04b2e9958d"],

Cell[BoxData[
 TemplateBox[{"\t", "\"\\t\"", 
   TemplateBox[{"   ", "\"   \"", 
     TemplateBox[{
       GraphicsBox[{{{{{{Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{0., 3.550510257216822}, {0., 6.}}], 
               LineBox[{{0., 6.}, {0., 8.449489742783179}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{117., 79.5660188679434}, {117., 89.}}], 
               LineBox[{{117., 89.}, {117., 98.4339811320566}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{135., 50.38422689413609}, {135., 58.}}], 
               LineBox[{{135., 58.}, {135., 65.61577310586391}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{162., 6.83772233983162}, {162., 10.}}], 
               LineBox[{{162., 10.}, {162., 13.16227766016838}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{180., 4.354248688935409}, {180., 7.}}], 
               LineBox[{{180., 7.}, {180., 9.64575131106459}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{207., 16.41742430504416}, {207., 21.}}], 
               LineBox[{{207., 21.}, {207., 25.58257569495584}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{225., 57.87596159536404}, {225., 66.}}], 
               LineBox[{{225., 66.}, {225., 74.12403840463597}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{252., 97.60769515458674}, {252., 108.}}], 
               LineBox[{{252., 108.}, {252., 118.39230484541326`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{270., 98.55969349108945}, {270., 109.}}], 
               LineBox[{{270., 109.}, {270., 119.44030650891055`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{27., 35.51925930159214}, {27., 42.}}], 
               LineBox[{{27., 42.}, {27., 48.48074069840786}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{297., 72.94461486186259}, {297., 82.}}], 
               LineBox[{{297., 82.}, {297., 91.05538513813741}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{315., 42.}, {315., 49.}}], 
               LineBox[{{315., 49.}, {315., 56.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{342., 12.}, {342., 16.}}], 
               LineBox[{{342., 16.}, {342., 20.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{360., 1.2679491924311228`}, {360., 3.}}], 
               LineBox[{{360., 3.}, {360., 4.732050807568877}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{45., 72.94461486186259}, {45., 82.}}], 
               LineBox[{{45., 82.}, {45., 91.05538513813741}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{72., 116.68629150101523`}, {72., 128.}}], 
               LineBox[{{72., 128.}, {72., 139.31370849898477`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{90., 100.46434624714726`}, {90., 111.}}], 
               LineBox[{{90., 111.}, {90., 121.53565375285274`}}]}}}, {{
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{0., 58.81464722812755}, {0., 67.}}], 
               LineBox[{{0., 67.}, {0., 75.18535277187245}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{117., 77.67262094691118}, {117., 87.}}], 
               LineBox[{{117., 87.}, {117., 96.32737905308882}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{135., 94.7530492340404}, {135., 105.}}], 
               LineBox[{{135., 105.}, {135., 115.2469507659596}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{162., 84.30464028516734}, {162., 94.}}], 
               LineBox[{{162., 94.}, {162., 103.69535971483266`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{180., 42.928932188134524`}, {180., 50.}}], 
               LineBox[{{180., 50.}, {180., 57.071067811865476`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{207., 29.083920216900385`}, {207., 35.}}], 
               LineBox[{{207., 35.}, {207., 40.91607978309962}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{225., 21.803847577293368`}, {225., 27.}}], 
               LineBox[{{225., 27.}, {225., 32.19615242270663}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{252., 47.58380151290434}, {252., 55.}}], 
               LineBox[{{252., 55.}, {252., 62.41619848709566}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{270., 50.38422689413609}, {270., 58.}}], 
               LineBox[{{270., 58.}, {270., 65.61577310586391}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{27., 31.835585997031025`}, {27., 38.}}], 
               LineBox[{{27., 38.}, {27., 44.164414002968975`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{297., 78.61916848035314}, {297., 88.}}], 
               LineBox[{{297., 88.}, {297., 97.38083151964686}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{315., 94.7530492340404}, {315., 105.}}], 
               LineBox[{{315., 105.}, {315., 115.2469507659596}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{342., 76.7263815045043}, {342., 86.}}], 
               LineBox[{{342., 86.}, {342., 95.2736184954957}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{360., 51.318854252131395`}, {360., 59.}}], 
               LineBox[{{360., 59.}, {360., 66.68114574786861}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{45., 25.432235637169978`}, {45., 31.}}], 
               LineBox[{{45., 31.}, {45., 36.56776436283002}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{72., 34.59687576256715}, {72., 41.}}], 
               LineBox[{{72., 41.}, {72., 47.40312423743285}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{90., 78.61916848035314}, {90., 88.}}], 
               LineBox[{{90., 88.}, {90., 97.38083151964686}}]}}}}, {{{
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 8.449489742783179}, 
                  Offset[{3, 0}, {0., 8.449489742783179}]}, {{0., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {0., 8.449489742783179}]}, {{0., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {0., 3.550510257216822}]}, {{0., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {0., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 98.4339811320566}, 
                  Offset[{3, 0}, {117., 98.4339811320566}]}, {{117., 
                  98.4339811320566}, 
                  Offset[{-3, 0}, {117., 98.4339811320566}]}, {{117., 
                  79.5660188679434}, 
                  Offset[{3, 0}, {117., 79.5660188679434}]}, {{117., 
                  79.5660188679434}, 
                  Offset[{-3, 0}, {117., 79.5660188679434}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 65.61577310586391}, 
                  Offset[{3, 0}, {135., 65.61577310586391}]}, {{135., 
                  65.61577310586391}, 
                  Offset[{-3, 0}, {135., 65.61577310586391}]}, {{135., 
                  50.38422689413609}, 
                  Offset[{3, 0}, {135., 50.38422689413609}]}, {{135., 
                  50.38422689413609}, 
                  Offset[{-3, 0}, {135., 50.38422689413609}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 13.16227766016838}, 
                  Offset[{3, 0}, {162., 13.16227766016838}]}, {{162., 
                  13.16227766016838}, 
                  Offset[{-3, 0}, {162., 13.16227766016838}]}, {{162., 
                  6.83772233983162}, 
                  Offset[{3, 0}, {162., 6.83772233983162}]}, {{162., 
                  6.83772233983162}, 
                  Offset[{-3, 0}, {162., 6.83772233983162}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 9.64575131106459}, 
                  Offset[{3, 0}, {180., 9.64575131106459}]}, {{180., 
                  9.64575131106459}, 
                  Offset[{-3, 0}, {180., 9.64575131106459}]}, {{180., 
                  4.354248688935409}, 
                  Offset[{3, 0}, {180., 4.354248688935409}]}, {{180., 
                  4.354248688935409}, 
                  Offset[{-3, 0}, {180., 4.354248688935409}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 25.58257569495584}, 
                  Offset[{3, 0}, {207., 25.58257569495584}]}, {{207., 
                  25.58257569495584}, 
                  Offset[{-3, 0}, {207., 25.58257569495584}]}, {{207., 
                  16.41742430504416}, 
                  Offset[{3, 0}, {207., 16.41742430504416}]}, {{207., 
                  16.41742430504416}, 
                  Offset[{-3, 0}, {207., 16.41742430504416}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 74.12403840463597}, 
                  Offset[{3, 0}, {225., 74.12403840463597}]}, {{225., 
                  74.12403840463597}, 
                  Offset[{-3, 0}, {225., 74.12403840463597}]}, {{225., 
                  57.87596159536404}, 
                  Offset[{3, 0}, {225., 57.87596159536404}]}, {{225., 
                  57.87596159536404}, 
                  Offset[{-3, 0}, {225., 57.87596159536404}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 118.39230484541326`}, 
                  Offset[{3, 0}, {252., 118.39230484541326`}]}, {{252., 
                  118.39230484541326`}, 
                  Offset[{-3, 0}, {252., 118.39230484541326`}]}, {{252., 
                  97.60769515458674}, 
                  Offset[{3, 0}, {252., 97.60769515458674}]}, {{252., 
                  97.60769515458674}, 
                  Offset[{-3, 0}, {252., 97.60769515458674}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 119.44030650891055`}, 
                  Offset[{3, 0}, {270., 119.44030650891055`}]}, {{270., 
                  119.44030650891055`}, 
                  Offset[{-3, 0}, {270., 119.44030650891055`}]}, {{270., 
                  98.55969349108945}, 
                  Offset[{3, 0}, {270., 98.55969349108945}]}, {{270., 
                  98.55969349108945}, 
                  Offset[{-3, 0}, {270., 98.55969349108945}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 48.48074069840786}, 
                  Offset[{3, 0}, {27., 48.48074069840786}]}, {{27., 
                  48.48074069840786}, 
                  Offset[{-3, 0}, {27., 48.48074069840786}]}, {{27., 
                  35.51925930159214}, 
                  Offset[{3, 0}, {27., 35.51925930159214}]}, {{27., 
                  35.51925930159214}, 
                  Offset[{-3, 0}, {27., 35.51925930159214}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 91.05538513813741}, 
                  Offset[{3, 0}, {297., 91.05538513813741}]}, {{297., 
                  91.05538513813741}, 
                  Offset[{-3, 0}, {297., 91.05538513813741}]}, {{297., 
                  72.94461486186259}, 
                  Offset[{3, 0}, {297., 72.94461486186259}]}, {{297., 
                  72.94461486186259}, 
                  Offset[{-3, 0}, {297., 72.94461486186259}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 56.}, 
                  Offset[{3, 0}, {315., 56.}]}, {{315., 56.}, 
                  Offset[{-3, 0}, {315., 56.}]}, {{315., 42.}, 
                  Offset[{3, 0}, {315., 42.}]}, {{315., 42.}, 
                  Offset[{-3, 0}, {315., 42.}]}}], {{{1., 0.}, {0., 1.}}, {0.,
                 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 20.}, 
                  Offset[{3, 0}, {342., 20.}]}, {{342., 20.}, 
                  Offset[{-3, 0}, {342., 20.}]}, {{342., 12.}, 
                  Offset[{3, 0}, {342., 12.}]}, {{342., 12.}, 
                  Offset[{-3, 0}, {342., 12.}]}}], {{{1., 0.}, {0., 1.}}, {0.,
                 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 4.732050807568877}, 
                  Offset[{3, 0}, {360., 4.732050807568877}]}, {{360., 
                  4.732050807568877}, 
                  Offset[{-3, 0}, {360., 4.732050807568877}]}, {{360., 
                  1.2679491924311228`}, 
                  Offset[{3, 0}, {360., 1.2679491924311228`}]}, {{360., 
                  1.2679491924311228`}, 
                  Offset[{-3, 0}, {360., 1.2679491924311228`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 91.05538513813741}, 
                  Offset[{3, 0}, {45., 91.05538513813741}]}, {{45., 
                  91.05538513813741}, 
                  Offset[{-3, 0}, {45., 91.05538513813741}]}, {{45., 
                  72.94461486186259}, 
                  Offset[{3, 0}, {45., 72.94461486186259}]}, {{45., 
                  72.94461486186259}, 
                  Offset[{-3, 0}, {45., 72.94461486186259}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 139.31370849898477`}, 
                  Offset[{3, 0}, {72., 139.31370849898477`}]}, {{72., 
                  139.31370849898477`}, 
                  Offset[{-3, 0}, {72., 139.31370849898477`}]}, {{72., 
                  116.68629150101523`}, 
                  Offset[{3, 0}, {72., 116.68629150101523`}]}, {{72., 
                  116.68629150101523`}, 
                  Offset[{-3, 0}, {72., 116.68629150101523`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 121.53565375285274`}, 
                  Offset[{3, 0}, {90., 121.53565375285274`}]}, {{90., 
                  121.53565375285274`}, 
                  Offset[{-3, 0}, {90., 121.53565375285274`}]}, {{90., 
                  100.46434624714726`}, 
                  Offset[{3, 0}, {90., 100.46434624714726`}]}, {{90., 
                  100.46434624714726`}, 
                  Offset[{-3, 0}, {90., 100.46434624714726`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}}, {{Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 75.18535277187245}, 
                  Offset[{3, 0}, {0., 75.18535277187245}]}, {{0., 
                  75.18535277187245}, 
                  Offset[{-3, 0}, {0., 75.18535277187245}]}, {{0., 
                  58.81464722812755}, 
                  Offset[{3, 0}, {0., 58.81464722812755}]}, {{0., 
                  58.81464722812755}, 
                  Offset[{-3, 0}, {0., 58.81464722812755}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 96.32737905308882}, 
                  Offset[{3, 0}, {117., 96.32737905308882}]}, {{117., 
                  96.32737905308882}, 
                  Offset[{-3, 0}, {117., 96.32737905308882}]}, {{117., 
                  77.67262094691118}, 
                  Offset[{3, 0}, {117., 77.67262094691118}]}, {{117., 
                  77.67262094691118}, 
                  Offset[{-3, 0}, {117., 77.67262094691118}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 115.2469507659596}, 
                  Offset[{3, 0}, {135., 115.2469507659596}]}, {{135., 
                  115.2469507659596}, 
                  Offset[{-3, 0}, {135., 115.2469507659596}]}, {{135., 
                  94.7530492340404}, 
                  Offset[{3, 0}, {135., 94.7530492340404}]}, {{135., 
                  94.7530492340404}, 
                  Offset[{-3, 0}, {135., 94.7530492340404}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 103.69535971483266`}, 
                  Offset[{3, 0}, {162., 103.69535971483266`}]}, {{162., 
                  103.69535971483266`}, 
                  Offset[{-3, 0}, {162., 103.69535971483266`}]}, {{162., 
                  84.30464028516734}, 
                  Offset[{3, 0}, {162., 84.30464028516734}]}, {{162., 
                  84.30464028516734}, 
                  Offset[{-3, 0}, {162., 84.30464028516734}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 57.071067811865476`}, 
                  Offset[{3, 0}, {180., 57.071067811865476`}]}, {{180., 
                  57.071067811865476`}, 
                  Offset[{-3, 0}, {180., 57.071067811865476`}]}, {{180., 
                  42.928932188134524`}, 
                  Offset[{3, 0}, {180., 42.928932188134524`}]}, {{180., 
                  42.928932188134524`}, 
                  Offset[{-3, 0}, {180., 42.928932188134524`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 40.91607978309962}, 
                  Offset[{3, 0}, {207., 40.91607978309962}]}, {{207., 
                  40.91607978309962}, 
                  Offset[{-3, 0}, {207., 40.91607978309962}]}, {{207., 
                  29.083920216900385`}, 
                  Offset[{3, 0}, {207., 29.083920216900385`}]}, {{207., 
                  29.083920216900385`}, 
                  Offset[{-3, 0}, {207., 29.083920216900385`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 32.19615242270663}, 
                  Offset[{3, 0}, {225., 32.19615242270663}]}, {{225., 
                  32.19615242270663}, 
                  Offset[{-3, 0}, {225., 32.19615242270663}]}, {{225., 
                  21.803847577293368`}, 
                  Offset[{3, 0}, {225., 21.803847577293368`}]}, {{225., 
                  21.803847577293368`}, 
                  Offset[{-3, 0}, {225., 21.803847577293368`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 62.41619848709566}, 
                  Offset[{3, 0}, {252., 62.41619848709566}]}, {{252., 
                  62.41619848709566}, 
                  Offset[{-3, 0}, {252., 62.41619848709566}]}, {{252., 
                  47.58380151290434}, 
                  Offset[{3, 0}, {252., 47.58380151290434}]}, {{252., 
                  47.58380151290434}, 
                  Offset[{-3, 0}, {252., 47.58380151290434}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 65.61577310586391}, 
                  Offset[{3, 0}, {270., 65.61577310586391}]}, {{270., 
                  65.61577310586391}, 
                  Offset[{-3, 0}, {270., 65.61577310586391}]}, {{270., 
                  50.38422689413609}, 
                  Offset[{3, 0}, {270., 50.38422689413609}]}, {{270., 
                  50.38422689413609}, 
                  Offset[{-3, 0}, {270., 50.38422689413609}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 44.164414002968975`}, 
                  Offset[{3, 0}, {27., 44.164414002968975`}]}, {{27., 
                  44.164414002968975`}, 
                  Offset[{-3, 0}, {27., 44.164414002968975`}]}, {{27., 
                  31.835585997031025`}, 
                  Offset[{3, 0}, {27., 31.835585997031025`}]}, {{27., 
                  31.835585997031025`}, 
                  Offset[{-3, 0}, {27., 31.835585997031025`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 97.38083151964686}, 
                  Offset[{3, 0}, {297., 97.38083151964686}]}, {{297., 
                  97.38083151964686}, 
                  Offset[{-3, 0}, {297., 97.38083151964686}]}, {{297., 
                  78.61916848035314}, 
                  Offset[{3, 0}, {297., 78.61916848035314}]}, {{297., 
                  78.61916848035314}, 
                  Offset[{-3, 0}, {297., 78.61916848035314}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 115.2469507659596}, 
                  Offset[{3, 0}, {315., 115.2469507659596}]}, {{315., 
                  115.2469507659596}, 
                  Offset[{-3, 0}, {315., 115.2469507659596}]}, {{315., 
                  94.7530492340404}, 
                  Offset[{3, 0}, {315., 94.7530492340404}]}, {{315., 
                  94.7530492340404}, 
                  Offset[{-3, 0}, {315., 94.7530492340404}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 95.2736184954957}, 
                  Offset[{3, 0}, {342., 95.2736184954957}]}, {{342., 
                  95.2736184954957}, 
                  Offset[{-3, 0}, {342., 95.2736184954957}]}, {{342., 
                  76.7263815045043}, 
                  Offset[{3, 0}, {342., 76.7263815045043}]}, {{342., 
                  76.7263815045043}, 
                  Offset[{-3, 0}, {342., 76.7263815045043}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 66.68114574786861}, 
                  Offset[{3, 0}, {360., 66.68114574786861}]}, {{360., 
                  66.68114574786861}, 
                  Offset[{-3, 0}, {360., 66.68114574786861}]}, {{360., 
                  51.318854252131395`}, 
                  Offset[{3, 0}, {360., 51.318854252131395`}]}, {{360., 
                  51.318854252131395`}, 
                  Offset[{-3, 0}, {360., 51.318854252131395`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 36.56776436283002}, 
                  Offset[{3, 0}, {45., 36.56776436283002}]}, {{45., 
                  36.56776436283002}, 
                  Offset[{-3, 0}, {45., 36.56776436283002}]}, {{45., 
                  25.432235637169978`}, 
                  Offset[{3, 0}, {45., 25.432235637169978`}]}, {{45., 
                  25.432235637169978`}, 
                  Offset[{-3, 0}, {45., 25.432235637169978`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 47.40312423743285}, 
                  Offset[{3, 0}, {72., 47.40312423743285}]}, {{72., 
                  47.40312423743285}, 
                  Offset[{-3, 0}, {72., 47.40312423743285}]}, {{72., 
                  34.59687576256715}, 
                  Offset[{3, 0}, {72., 34.59687576256715}]}, {{72., 
                  34.59687576256715}, 
                  Offset[{-3, 0}, {72., 34.59687576256715}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 97.38083151964686}, 
                  Offset[{3, 0}, {90., 97.38083151964686}]}, {{90., 
                  97.38083151964686}, 
                  Offset[{-3, 0}, {90., 97.38083151964686}]}, {{90., 
                  78.61916848035314}, 
                  Offset[{3, 0}, {90., 78.61916848035314}]}, {{90., 
                  78.61916848035314}, 
                  Offset[{-3, 0}, {90., 78.61916848035314}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}}}}, {{{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 6.}}, {{117., 89.}}, {{
              135., 58.}}, {{162., 10.}}, {{180., 7.}}, {{207., 21.}}, {{225.,
               66.}}, {{252., 108.}}, {{270., 109.}}, {{27., 42.}}, {{297., 
              82.}}, {{315., 49.}}, {{342., 16.}}, {{360., 3.}}, {{45., 
              82.}}, {{72., 128.}}, {{90., 111.}}}]}, {
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 67.}}, {{117., 87.}}, {{
              135., 105.}}, {{162., 94.}}, {{180., 50.}}, {{207., 35.}}, {{
              225., 27.}}, {{252., 55.}}, {{270., 58.}}, {{27., 38.}}, {{297.,
               88.}}, {{315., 105.}}, {{342., 86.}}, {{360., 59.}}, {{45., 
              31.}}, {{72., 41.}}, {{90., 88.}}}]}}}, {{}, {}}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1:eJwVWnk41N8XtrTIPnYiuyzJvkTxUsku21jmU/ZBtrENCZWKkoSkUlSWFqkQ
hcRHJEWUr2gvkmSrVJTEb35/zfM+d+6557znPefeM8/I+0e5BHGwsbHFcLKx
/f+THqv3fGnJk+Q7WcLH+YcGzc2jO7RmPUmHesv8hCUafgqdGd056UkyI77l
/becwIGaxbl7LzxJiu+7TgshAhe+P5JKrvYk36es6P+lRiC4Nbn02mVP0sz/
v4EyLQLrc7XWvS7yJKt1DOdMDAjc0z65ySTTk7SynaVLg8CrKF/f3/4s+43r
x2rcCFw0F/6y1suTbK3WbTrjRSBEoCPaw8mT/CTJ6RO8k8DcDY0Dt009ScsE
panbwQREpmfL40Q8ycq4wyYquwm8vnd1fRm3J/lrc3ueZQqBkmPEnf/YPMk6
nQHm1v0EdDTvd+pOeZBOi5nti4cJOIYfm/j2wIN8pi150+wUAdGNiJNr8iDJ
jNNF2YUE3vD8WHCq8SBnMf6hvYhA2DVP/pvFHqToSxHHkVICunt4Tr3L9yCj
fSLDn1wiMG/bLMt/1IM8WXm289xVAofHFXUiEjzIwpp05ekbBJwaBxrORXiQ
uiuspRnVBMQyj1h2B3iQD0JGNr64RaBc7aurxnYP0mjp8RfvegLhfy6+8bby
IFdPnYuIbySg/8gtKHOjB/k+woub2UTgfkgj84uqB/k5pn6vGkngiHHEkoSs
BznVE+z8ppXAdi65w9aiHmRA0ur18W0EJF70CSbyeJAmVf8J/Wwn8P7yoTOX
2T1IqajWBc8OApcSjBUG56hkRarVl9KHBCK3TVSsmKaSSXG/nvd3EjAQL9Yz
HKGSufW55MQjAguj25uCXlHJC0cELo89JtB+m3PryadU8i1bfkZXF4Gj6bef
tHdQyT2i8b753QRcqKHUn01U8vH5DdqbnxCQUpF+r3iLSi7SzvwaZOGhXz3B
rlepZMFk8k2XHgJXHuz/lnaeSoa8+UfcYmHGSf3dNSeppPMF+r8/LGwU9Jl9
+CiVPHZaN0ell4Dgln59s/1U8tuRutgNLDyu0BpcyKSS4+yv7miycDv7jcLZ
MCq5fLSB4GTh4g+FT1z8qOTa6hr/Rpa9xJYMtptUKtkYE/T4/+e7FMfp8dhT
Sbcnt/O7Wf6tS/GjB1tQyVs/e+6vZeEVhOOZNkMqaXpNkhrIiu+DiWm37Doq
2WlmtT2NFX+jpOrSHnkquXRw2639LH7yf4vovhCjkn8GXPf7s/iLHGQP0uel
kmG8n5qUWPxa354+lcNOJZWY9SGdrHwonHz9eHLWneR50ZPh8IDAgEuddvmQ
OzlfIaG5wMpvlU5JAPugO1lWVtyozMp/puDxgh3d7mTWKd7H2s0EzHpCFkTv
uJPVC2r7JhpY+b/urhVT6U6KuVtpn71DYOaopX/PRXdy806l+HV1LP3ZSHem
Z7mThhLDfT9uEkhVXfV3eL87OdSybU7tOgHPlbOa5gnuZNVk0kOLCgK8D3pP
zPm5k4oRhofEygjE4YBPiJE7KWgsYeJewKovWUZe+zp38ux6jb1n8gioLhIP
5BTcyWs7Kytasln1dddQ4yWvO7m/wWSwOp3AZqPxWZthNzLU6OnB9fEEpMUG
1S4NupEOxt1/0hgEZn+2ERxP3Mhfc9EXGsIIVNQU3W+840b29226/sSPgNB6
52yNY27kiGnHQq49gUles9aMNDcyYLOuwR8rAh0T6j8/JriRa9//nLe0IJB0
dZn3OX83UnG7hl8qqz8NK9Ur8xm7kWJVVqsKpAlUr5a9Nz3sSmbT+hTcP9Gw
3TqJsfTClbz1ad5q1zsapuOeKwr2upKKUnUZ9EEa1HuOZurcdSUVWnlOijyi
oWTfb4+4E65kkexUoPU1GvI/PZv5s9mVtHunU7I6jAZdIc1L3Cau5Im1322v
+tPw1Oyw12ptVzI82n9xjTcNfKfNyI3SruTe2C0P71vTkG577djeny6kc39U
/ZQSDQk3D6ouL3cheYYfh3x44Q2xN+9fi551IWdS7fpne7xRy2V6XCXXhRQg
q+iz7d745vf917YUFzJy1XaH6ipvhIjsbMt0dyHV/fZuk8jwhvduo52CK1xI
BW3biiYtb2zaPH5idbAzmfHh8eVfDC80XplT37nDmcxafunP6UAvGPIvv3/B
1Znkren6oerpBe2Xst+U4Uw6TEpvEjD3gkKUu722pDOZc6S0ao7HCyvOksu2
dm0n636o/LQv8cTTmYL4SK3tZHuqZentVg882JJxI+2rA9mWWUTSnrljRFNM
x++VA3kmi6Mgu8UdHOLlt8wfOJBbtlucqrnuDrMv9+sXCh3IylUf63uOuKP+
2OJ9ppUD+bKnlaRZuKNyIH5wV5E9KXspPmPiuhvyQwLZXO3sSN2PXV8WUlzh
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
jCQajSzS6NnBiC66Ez1/WAqCOrmzpSeCUXDKJtJhTAp09aFdQ6eDsajjGUu3
WQ0hmf2uRGkwGiJSXD8LSmMXR6uSS30w7M+xk7x1MpB6goebhoPxhv2jTfYV
OTA6ckz3fA5G1HCxrt6oHDpaPtysnwxGV8xE8y0lecTU7DutNxcMBPJd3Vom
j8enyFA13hBsrP1eWXRdAUn+4BU1DMHBgaau82NKeErL2ediGoLotCtGTXrK
UHH/8PM4QnBTLFXw2l5l9G3b95bbLgTe3Z3J/yRVoK5J3mDzDUHGA6FVAZ5r
8XrO3HnySAiKLfOOnvmrBsfHnod6s0NAIXjqzjqo4/656IaaEyF4Hm4RaXdB
HRUWpfK7i0KQJHJQpXqbBpKOrphZXh2Cu+WH0g8Wr4Ok7JM82RchWGmkU3sv
TAseVt79LiqhqLRrfPW5RRePJWK5DDVC0RZ+/rncD12YTRzdKKkdio/1O7rK
VfSgknOv7P2GUJRfnFXJy9bD7Eu5+HCHUNwc+bzwxU8fJyM+i6bHhWIo55Oz
uZgh/suP82i4H4qEprrGGzUb0OzDMFzRGYrw/f99q/uxAVfUw0Vdn4Si0atT
faWBCVLJgP8mB0Px7odhxKF6E6hOujjJTYWC55vhzqH7pkjerLMtQ3wXHow4
phWMbILSzJShe/gunAuTWzmuYQGmU7DYd9EwDGt4E1FTW5HjnPPwtEs44v7y
e26jO+GtUQzHsiMR0LlH6ZS3dMPkHXhvy47A0Ju2z9/c3LBgJFCTeSICqy07
dtYGu0HauNKPUhyB6rG6KvFjbiCMR8k1tyJw+EDLHrtBN7w29t674W0E0l8N
3d8S6o6XGywXInUiITGqVxmeRsVYg6BbjWEkwkQS7JNOUPF7w/trv0wjITa6
uCuhjAoJk2RaslUkrl4wzDHvoMLT5HbjEVokPJcq93Gu8sCgifruskORMJxU
PG9y1APPTYVmX76MhKp4Ckfsfk9wnLzK1/YuEh6lVb7ax1lzwjSUKz9GolC/
uPz1OU9kXYhyS52KxNfLf5L/3vGE5fInNQrsUejel1i4Y8qTdV9kRIWpRmH9
kbJHJ9288G6tbIabZhTkJq3+U/bzAu/+28WbdKPwOei5cUmEF+td9+mJwMYo
XO//3uCT7oU1py3X1TpFYSp3mmfithey/P6NLTCjsHbIVE2L9c5vbMxnG90T
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
C0Mfh63x6o39r6WlRAh5jV3v4LXB/wCaZPId
               "]]}, Annotation[#, "Charting`Private`Tag$198791#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1: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
et5Y/fz3j4uAkTX0xZ9o+B99kkXo
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$198791#1"]& ]}}, {}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
jRg=
               "]]}, Annotation[#, "Charting`Private`Tag$198844#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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

               "]]}, 
             Annotation[#, "Charting`Private`Tag$198844#1"]& ]}}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Coinc. per 4 min\"", TraditionalForm], None}, {
            FormBox["\"Measurement Angle\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           Thickness[0.006], FontSize -> 12], FrameTicks -> {{{{-70, 
              FormBox["\"-70\"", TraditionalForm], 0.024}, {0, 
              FormBox["\"0\"", TraditionalForm], 0.024}, {70, 
              FormBox["\"70\"", TraditionalForm], 0.024}, {140, 
              FormBox["\"140\"", TraditionalForm], 0.024}, {210, 
              FormBox["\"210\"", TraditionalForm], 0.024}}, {{-70, "", 
              0.024}, {0, "", 0.024}, {70, "", 0.024}, {140, "", 0.024}, {
             210, "", 0.024}}}, {{{-45, "", 0.024}, {-30, "", 0.012}, {-15, 
              "", 0.012}, {0, 
              FormBox[
               RowBox[{"\"0\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {15, "", 0.012}, {30, "", 0.012}, {45, "", 0.024}, {
             60, "", 0.012}, {75, "", 0.012}, {90, 
              FormBox[
               RowBox[{"\"90\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {105, "", 0.012}, {120, "", 0.012}, {135, "", 0.024}, {
             150, "", 0.012}, {165, "", 0.012}, {180, 
              FormBox[
               RowBox[{"\"180\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {195, "", 0.012}, {210, "", 0.012}, {225, "", 0.024}, {
             240, "", 0.012}, {255, "", 0.012}, {270, 
              FormBox[
               RowBox[{"\"270\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {285, "", 0.012}, {300, "", 0.012}, {315, "", 0.024}, {
             330, "", 0.012}, {345, "", 0.012}, {360, 
              FormBox[
               RowBox[{"\"360\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}, {{-45, "", 0.024}, {-30, "", 0.012}, {-15, "", 
              0.012}, {0, "", 0.024}, {15, "", 0.012}, {30, "", 0.012}, {
             45, "", 0.024}, {60, "", 0.012}, {75, "", 0.012}, {
             90, "", 0.024}, {105, "", 0.012}, {120, "", 0.012}, {
             135, "", 0.024}, {150, "", 0.012}, {165, "", 0.012}, {
             180, "", 0.024}, {195, "", 0.012}, {210, "", 0.012}, {
             225, "", 0.024}, {240, "", 0.012}, {255, "", 0.012}, {
             270, "", 0.024}, {285, "", 0.012}, {300, "", 0.012}, {
             315, "", 0.024}, {330, "", 0.012}, {345, "", 0.012}, {
             360, "", 0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 260, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Before Cyc: 0-0\"", TraditionalForm], 
         PlotRange -> {{-14.4, 374.4}, {-28., 168.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox["\"\"", TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
     TagBox[
      GridBox[{{
         StyleBox[
          TagBox[
           
           GridBox[{{"\"Basis\"", "\"Parameters\""}, {
             "\"HV\"", "\"v :  0.93 \[PlusMinus]0.03\""}, {
             "\"\[PlusMinus]45\[Degree]\"", 
              "\"v :  0.55 \[PlusMinus]0.05\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7], 3 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}, {
         StyleBox[
          TagBox[
           
           GridBox[{{"\"Basis\"", "\"Parameters\""}, {
             "\"HV\"", "\"v :  0.93 \[PlusMinus]0.03\""}, {
             "\"\"", "\"\[Theta] :  86.8 \[PlusMinus]1.5\""}, {
             "\"\[PlusMinus]45\[Degree]\"", 
              "\"v :  0.55 \[PlusMinus]0.05\""}, {
             "\"\"", "\"\[Theta] :  -47 \[PlusMinus]3\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7], 4 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
       "Column", 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{1}}}], 
      "Column"]}, "RowWithSeparators"], 
   TemplateBox[{"   ", "\"   \"", 
     TemplateBox[{
       GraphicsBox[{{{{{{Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{0., 8.535898384862247}, {0., 12.}}], 
               LineBox[{{0., 12.}, {0., 15.464101615137753`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{117., 85.25320565519104}, {117., 95.}}], 
               LineBox[{{117., 95.}, {117., 104.74679434480896`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{135., 58.81464722812755}, {135., 67.}}], 
               LineBox[{{135., 67.}, {135., 75.18535277187245}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{162., 15.52786404500042}, {162., 20.}}], 
               LineBox[{{162., 20.}, {162., 24.47213595499958}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{180., 9.39444872453601}, {180., 13.}}], 
               LineBox[{{180., 13.}, {180., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{207., 35.51925930159214}, {207., 42.}}], 
               LineBox[{{207., 42.}, {207., 48.48074069840786}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{225., 66.33974596215562}, {225., 75.}}], 
               LineBox[{{225., 75.}, {225., 83.66025403784438}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{252., 116.68629150101523`}, {252., 128.}}], 
               LineBox[{{252., 128.}, {252., 139.31370849898477`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{270., 115.73057233041536`}, {270., 127.}}], 
               LineBox[{{270., 127.}, {270., 138.26942766958464`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{27., 40.144345399598954`}, {27., 47.}}], 
               LineBox[{{27., 47.}, {27., 53.855654600401046`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{297., 98.55969349108945}, {297., 109.}}], 
               LineBox[{{297., 109.}, {297., 119.44030650891055`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{315., 64.45599625468247}, {315., 73.}}], 
               LineBox[{{315., 73.}, {315., 81.54400374531753}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{342., 9.39444872453601}, {342., 13.}}], 
               LineBox[{{342., 13.}, {342., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{360., 8.535898384862247}, {360., 12.}}], 
               LineBox[{{360., 12.}, {360., 15.464101615137753`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{45., 95.704369859013}, {45., 106.}}], 
               LineBox[{{45., 106.}, {45., 116.295630140987}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{72., 120.51087470692394`}, {72., 132.}}], 
               LineBox[{{72., 132.}, {72., 143.48912529307606`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{90., 110.95463898281274`}, {90., 122.}}], 
               LineBox[{{90., 122.}, {90., 133.04536101718725`}}]}}}, {{
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{0., 64.45599625468247}, {0., 73.}}], 
               LineBox[{{0., 73.}, {0., 81.54400374531753}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{117., 116.68629150101523`}, {117., 128.}}], 
               LineBox[{{117., 128.}, {117., 139.31370849898477`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{135., 108.09128788536428`}, {135., 119.}}], 
               LineBox[{{135., 119.}, {135., 129.9087121146357}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{162., 89.0501256289338}, {162., 99.}}], 
               LineBox[{{162., 99.}, {162., 108.9498743710662}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{180., 59.75378874876468}, {180., 68.}}], 
               LineBox[{{180., 68.}, {180., 76.24621125123532}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{207., 18.20416847668728}, {207., 23.}}], 
               LineBox[{{207., 23.}, {207., 27.79583152331272}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{225., 20.}, {225., 25.}}], 
               LineBox[{{225., 25.}, {225., 30.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{252., 45.71989011071948}, {252., 53.}}], 
               LineBox[{{252., 53.}, {252., 60.28010988928052}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{270., 72.}, {270., 81.}}], 
               LineBox[{{270., 81.}, {270., 90.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{27., 32.7550020016016}, {27., 39.}}], 
               LineBox[{{27., 39.}, {27., 45.2449979983984}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{297., 114.77502783967817`}, {297., 126.}}], 
               LineBox[{{297., 126.}, {297., 137.2249721603218}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{315., 124.3380962103094}, {315., 136.}}], 
               LineBox[{{315., 136.}, {315., 147.6619037896906}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{342., 67.28220211291865}, {342., 76.}}], 
               LineBox[{{342., 76.}, {342., 84.71779788708135}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{360., 50.38422689413609}, {360., 58.}}], 
               LineBox[{{360., 58.}, {360., 65.61577310586391}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{45., 21.803847577293368`}, {45., 27.}}], 
               LineBox[{{45., 27.}, {45., 32.19615242270663}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{72., 40.144345399598954`}, {72., 47.}}], 
               LineBox[{{72., 47.}, {72., 53.855654600401046`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{90., 63.51471862576143}, {90., 72.}}], 
               LineBox[{{90., 72.}, {90., 80.48528137423857}}]}}}}, {{{
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 15.464101615137753`}, 
                  Offset[{3, 0}, {0., 15.464101615137753`}]}, {{0., 
                  15.464101615137753`}, 
                  Offset[{-3, 0}, {0., 15.464101615137753`}]}, {{0., 
                  8.535898384862247}, 
                  Offset[{3, 0}, {0., 8.535898384862247}]}, {{0., 
                  8.535898384862247}, 
                  Offset[{-3, 0}, {0., 8.535898384862247}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 104.74679434480896`}, 
                  Offset[{3, 0}, {117., 104.74679434480896`}]}, {{117., 
                  104.74679434480896`}, 
                  Offset[{-3, 0}, {117., 104.74679434480896`}]}, {{117., 
                  85.25320565519104}, 
                  Offset[{3, 0}, {117., 85.25320565519104}]}, {{117., 
                  85.25320565519104}, 
                  Offset[{-3, 0}, {117., 85.25320565519104}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 75.18535277187245}, 
                  Offset[{3, 0}, {135., 75.18535277187245}]}, {{135., 
                  75.18535277187245}, 
                  Offset[{-3, 0}, {135., 75.18535277187245}]}, {{135., 
                  58.81464722812755}, 
                  Offset[{3, 0}, {135., 58.81464722812755}]}, {{135., 
                  58.81464722812755}, 
                  Offset[{-3, 0}, {135., 58.81464722812755}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 24.47213595499958}, 
                  Offset[{3, 0}, {162., 24.47213595499958}]}, {{162., 
                  24.47213595499958}, 
                  Offset[{-3, 0}, {162., 24.47213595499958}]}, {{162., 
                  15.52786404500042}, 
                  Offset[{3, 0}, {162., 15.52786404500042}]}, {{162., 
                  15.52786404500042}, 
                  Offset[{-3, 0}, {162., 15.52786404500042}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 16.605551275463988`}, 
                  Offset[{3, 0}, {180., 16.605551275463988`}]}, {{180., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {180., 16.605551275463988`}]}, {{180., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {180., 9.39444872453601}]}, {{180., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {180., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 48.48074069840786}, 
                  Offset[{3, 0}, {207., 48.48074069840786}]}, {{207., 
                  48.48074069840786}, 
                  Offset[{-3, 0}, {207., 48.48074069840786}]}, {{207., 
                  35.51925930159214}, 
                  Offset[{3, 0}, {207., 35.51925930159214}]}, {{207., 
                  35.51925930159214}, 
                  Offset[{-3, 0}, {207., 35.51925930159214}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 83.66025403784438}, 
                  Offset[{3, 0}, {225., 83.66025403784438}]}, {{225., 
                  83.66025403784438}, 
                  Offset[{-3, 0}, {225., 83.66025403784438}]}, {{225., 
                  66.33974596215562}, 
                  Offset[{3, 0}, {225., 66.33974596215562}]}, {{225., 
                  66.33974596215562}, 
                  Offset[{-3, 0}, {225., 66.33974596215562}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 139.31370849898477`}, 
                  Offset[{3, 0}, {252., 139.31370849898477`}]}, {{252., 
                  139.31370849898477`}, 
                  Offset[{-3, 0}, {252., 139.31370849898477`}]}, {{252., 
                  116.68629150101523`}, 
                  Offset[{3, 0}, {252., 116.68629150101523`}]}, {{252., 
                  116.68629150101523`}, 
                  Offset[{-3, 0}, {252., 116.68629150101523`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 138.26942766958464`}, 
                  Offset[{3, 0}, {270., 138.26942766958464`}]}, {{270., 
                  138.26942766958464`}, 
                  Offset[{-3, 0}, {270., 138.26942766958464`}]}, {{270., 
                  115.73057233041536`}, 
                  Offset[{3, 0}, {270., 115.73057233041536`}]}, {{270., 
                  115.73057233041536`}, 
                  Offset[{-3, 0}, {270., 115.73057233041536`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 53.855654600401046`}, 
                  Offset[{3, 0}, {27., 53.855654600401046`}]}, {{27., 
                  53.855654600401046`}, 
                  Offset[{-3, 0}, {27., 53.855654600401046`}]}, {{27., 
                  40.144345399598954`}, 
                  Offset[{3, 0}, {27., 40.144345399598954`}]}, {{27., 
                  40.144345399598954`}, 
                  Offset[{-3, 0}, {27., 40.144345399598954`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 119.44030650891055`}, 
                  Offset[{3, 0}, {297., 119.44030650891055`}]}, {{297., 
                  119.44030650891055`}, 
                  Offset[{-3, 0}, {297., 119.44030650891055`}]}, {{297., 
                  98.55969349108945}, 
                  Offset[{3, 0}, {297., 98.55969349108945}]}, {{297., 
                  98.55969349108945}, 
                  Offset[{-3, 0}, {297., 98.55969349108945}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 81.54400374531753}, 
                  Offset[{3, 0}, {315., 81.54400374531753}]}, {{315., 
                  81.54400374531753}, 
                  Offset[{-3, 0}, {315., 81.54400374531753}]}, {{315., 
                  64.45599625468247}, 
                  Offset[{3, 0}, {315., 64.45599625468247}]}, {{315., 
                  64.45599625468247}, 
                  Offset[{-3, 0}, {315., 64.45599625468247}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 16.605551275463988`}, 
                  Offset[{3, 0}, {342., 16.605551275463988`}]}, {{342., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {342., 16.605551275463988`}]}, {{342., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {342., 9.39444872453601}]}, {{342., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {342., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 15.464101615137753`}, 
                  Offset[{3, 0}, {360., 15.464101615137753`}]}, {{360., 
                  15.464101615137753`}, 
                  Offset[{-3, 0}, {360., 15.464101615137753`}]}, {{360., 
                  8.535898384862247}, 
                  Offset[{3, 0}, {360., 8.535898384862247}]}, {{360., 
                  8.535898384862247}, 
                  Offset[{-3, 0}, {360., 8.535898384862247}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 116.295630140987}, 
                  Offset[{3, 0}, {45., 116.295630140987}]}, {{45., 
                  116.295630140987}, 
                  Offset[{-3, 0}, {45., 116.295630140987}]}, {{45., 
                  95.704369859013}, 
                  Offset[{3, 0}, {45., 95.704369859013}]}, {{45., 
                  95.704369859013}, 
                  Offset[{-3, 0}, {45., 95.704369859013}]}}], {{{1., 0.}, {0.,
                 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 143.48912529307606`}, 
                  Offset[{3, 0}, {72., 143.48912529307606`}]}, {{72., 
                  143.48912529307606`}, 
                  Offset[{-3, 0}, {72., 143.48912529307606`}]}, {{72., 
                  120.51087470692394`}, 
                  Offset[{3, 0}, {72., 120.51087470692394`}]}, {{72., 
                  120.51087470692394`}, 
                  Offset[{-3, 0}, {72., 120.51087470692394`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 133.04536101718725`}, 
                  Offset[{3, 0}, {90., 133.04536101718725`}]}, {{90., 
                  133.04536101718725`}, 
                  Offset[{-3, 0}, {90., 133.04536101718725`}]}, {{90., 
                  110.95463898281274`}, 
                  Offset[{3, 0}, {90., 110.95463898281274`}]}, {{90., 
                  110.95463898281274`}, 
                  Offset[{-3, 0}, {90., 110.95463898281274`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}}, {{Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 81.54400374531753}, 
                  Offset[{3, 0}, {0., 81.54400374531753}]}, {{0., 
                  81.54400374531753}, 
                  Offset[{-3, 0}, {0., 81.54400374531753}]}, {{0., 
                  64.45599625468247}, 
                  Offset[{3, 0}, {0., 64.45599625468247}]}, {{0., 
                  64.45599625468247}, 
                  Offset[{-3, 0}, {0., 64.45599625468247}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 139.31370849898477`}, 
                  Offset[{3, 0}, {117., 139.31370849898477`}]}, {{117., 
                  139.31370849898477`}, 
                  Offset[{-3, 0}, {117., 139.31370849898477`}]}, {{117., 
                  116.68629150101523`}, 
                  Offset[{3, 0}, {117., 116.68629150101523`}]}, {{117., 
                  116.68629150101523`}, 
                  Offset[{-3, 0}, {117., 116.68629150101523`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 129.9087121146357}, 
                  Offset[{3, 0}, {135., 129.9087121146357}]}, {{135., 
                  129.9087121146357}, 
                  Offset[{-3, 0}, {135., 129.9087121146357}]}, {{135., 
                  108.09128788536428`}, 
                  Offset[{3, 0}, {135., 108.09128788536428`}]}, {{135., 
                  108.09128788536428`}, 
                  Offset[{-3, 0}, {135., 108.09128788536428`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 108.9498743710662}, 
                  Offset[{3, 0}, {162., 108.9498743710662}]}, {{162., 
                  108.9498743710662}, 
                  Offset[{-3, 0}, {162., 108.9498743710662}]}, {{162., 
                  89.0501256289338}, 
                  Offset[{3, 0}, {162., 89.0501256289338}]}, {{162., 
                  89.0501256289338}, 
                  Offset[{-3, 0}, {162., 89.0501256289338}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 76.24621125123532}, 
                  Offset[{3, 0}, {180., 76.24621125123532}]}, {{180., 
                  76.24621125123532}, 
                  Offset[{-3, 0}, {180., 76.24621125123532}]}, {{180., 
                  59.75378874876468}, 
                  Offset[{3, 0}, {180., 59.75378874876468}]}, {{180., 
                  59.75378874876468}, 
                  Offset[{-3, 0}, {180., 59.75378874876468}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 27.79583152331272}, 
                  Offset[{3, 0}, {207., 27.79583152331272}]}, {{207., 
                  27.79583152331272}, 
                  Offset[{-3, 0}, {207., 27.79583152331272}]}, {{207., 
                  18.20416847668728}, 
                  Offset[{3, 0}, {207., 18.20416847668728}]}, {{207., 
                  18.20416847668728}, 
                  Offset[{-3, 0}, {207., 18.20416847668728}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 30.}, 
                  Offset[{3, 0}, {225., 30.}]}, {{225., 30.}, 
                  Offset[{-3, 0}, {225., 30.}]}, {{225., 20.}, 
                  Offset[{3, 0}, {225., 20.}]}, {{225., 20.}, 
                  Offset[{-3, 0}, {225., 20.}]}}], {{{1., 0.}, {0., 1.}}, {0.,
                 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 60.28010988928052}, 
                  Offset[{3, 0}, {252., 60.28010988928052}]}, {{252., 
                  60.28010988928052}, 
                  Offset[{-3, 0}, {252., 60.28010988928052}]}, {{252., 
                  45.71989011071948}, 
                  Offset[{3, 0}, {252., 45.71989011071948}]}, {{252., 
                  45.71989011071948}, 
                  Offset[{-3, 0}, {252., 45.71989011071948}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 90.}, 
                  Offset[{3, 0}, {270., 90.}]}, {{270., 90.}, 
                  Offset[{-3, 0}, {270., 90.}]}, {{270., 72.}, 
                  Offset[{3, 0}, {270., 72.}]}, {{270., 72.}, 
                  Offset[{-3, 0}, {270., 72.}]}}], {{{1., 0.}, {0., 1.}}, {0.,
                 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 45.2449979983984}, 
                  Offset[{3, 0}, {27., 45.2449979983984}]}, {{27., 
                  45.2449979983984}, 
                  Offset[{-3, 0}, {27., 45.2449979983984}]}, {{27., 
                  32.7550020016016}, 
                  Offset[{3, 0}, {27., 32.7550020016016}]}, {{27., 
                  32.7550020016016}, 
                  Offset[{-3, 0}, {27., 32.7550020016016}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 137.2249721603218}, 
                  Offset[{3, 0}, {297., 137.2249721603218}]}, {{297., 
                  137.2249721603218}, 
                  Offset[{-3, 0}, {297., 137.2249721603218}]}, {{297., 
                  114.77502783967817`}, 
                  Offset[{3, 0}, {297., 114.77502783967817`}]}, {{297., 
                  114.77502783967817`}, 
                  Offset[{-3, 0}, {297., 114.77502783967817`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 147.6619037896906}, 
                  Offset[{3, 0}, {315., 147.6619037896906}]}, {{315., 
                  147.6619037896906}, 
                  Offset[{-3, 0}, {315., 147.6619037896906}]}, {{315., 
                  124.3380962103094}, 
                  Offset[{3, 0}, {315., 124.3380962103094}]}, {{315., 
                  124.3380962103094}, 
                  Offset[{-3, 0}, {315., 124.3380962103094}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 84.71779788708135}, 
                  Offset[{3, 0}, {342., 84.71779788708135}]}, {{342., 
                  84.71779788708135}, 
                  Offset[{-3, 0}, {342., 84.71779788708135}]}, {{342., 
                  67.28220211291865}, 
                  Offset[{3, 0}, {342., 67.28220211291865}]}, {{342., 
                  67.28220211291865}, 
                  Offset[{-3, 0}, {342., 67.28220211291865}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 65.61577310586391}, 
                  Offset[{3, 0}, {360., 65.61577310586391}]}, {{360., 
                  65.61577310586391}, 
                  Offset[{-3, 0}, {360., 65.61577310586391}]}, {{360., 
                  50.38422689413609}, 
                  Offset[{3, 0}, {360., 50.38422689413609}]}, {{360., 
                  50.38422689413609}, 
                  Offset[{-3, 0}, {360., 50.38422689413609}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 32.19615242270663}, 
                  Offset[{3, 0}, {45., 32.19615242270663}]}, {{45., 
                  32.19615242270663}, 
                  Offset[{-3, 0}, {45., 32.19615242270663}]}, {{45., 
                  21.803847577293368`}, 
                  Offset[{3, 0}, {45., 21.803847577293368`}]}, {{45., 
                  21.803847577293368`}, 
                  Offset[{-3, 0}, {45., 21.803847577293368`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 53.855654600401046`}, 
                  Offset[{3, 0}, {72., 53.855654600401046`}]}, {{72., 
                  53.855654600401046`}, 
                  Offset[{-3, 0}, {72., 53.855654600401046`}]}, {{72., 
                  40.144345399598954`}, 
                  Offset[{3, 0}, {72., 40.144345399598954`}]}, {{72., 
                  40.144345399598954`}, 
                  Offset[{-3, 0}, {72., 40.144345399598954`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 80.48528137423857}, 
                  Offset[{3, 0}, {90., 80.48528137423857}]}, {{90., 
                  80.48528137423857}, 
                  Offset[{-3, 0}, {90., 80.48528137423857}]}, {{90., 
                  63.51471862576143}, 
                  Offset[{3, 0}, {90., 63.51471862576143}]}, {{90., 
                  63.51471862576143}, 
                  Offset[{-3, 0}, {90., 63.51471862576143}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}}}}, {{{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 12.}}, {{117., 95.}}, {{
              135., 67.}}, {{162., 20.}}, {{180., 13.}}, {{207., 42.}}, {{
              225., 75.}}, {{252., 128.}}, {{270., 127.}}, {{27., 47.}}, {{
              297., 109.}}, {{315., 73.}}, {{342., 13.}}, {{360., 12.}}, {{
              45., 106.}}, {{72., 132.}}, {{90., 122.}}}]}, {
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 73.}}, {{117., 
              128.}}, {{135., 119.}}, {{162., 99.}}, {{180., 68.}}, {{207., 
              23.}}, {{225., 25.}}, {{252., 53.}}, {{270., 81.}}, {{27., 
              39.}}, {{297., 126.}}, {{315., 136.}}, {{342., 76.}}, {{360., 
              58.}}, {{45., 27.}}, {{72., 47.}}, {{90., 
              72.}}}]}}}, {{}, {}}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1: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
Xgb8V7j8vUuxsc5wx/E8Bm6lf97YTLHkr849O44xQA4PvjxN8cKNBnidYcDO
JupdPMVv00sX9S4xMJ81sFWf4haT/TfXNTCQoVKm+pOy9zhXfMrCbQa+5mxO
KqGYdd9H990DBkou2yvpUeyWYzF7q4sBPv+TtvcpPbTs1a+V9DMQJPO315zi
lYJicbtGGXizKaK7gdLzexenOvGNgfGC70ZrKX5e9PUrfjNg2Nsuuo3SP2/d
nQgOfnfUuGbRRij/RQ5UyX1Y645vTn6eKyi2OVP4sX29O7Qf2HDKUv7mkQsP
+E/bHcoL/qQCFR+jn52kQo3dYULavl5zgcDdav13FtbumOF4uX2Giq89mgKe
PL7uSLgbsSbrHJVvo7cjb4a5Qz13dZPEWQJixdEZzDh3xEdUe56j4reO/emF
3ix3TBf9vbrzNIH0hrQbuYfdcay9LfrpScqeCJVnOO2Onmu5+oLFBIaf585W
1rnDc250dcBRKn72GSz3veWO9fevKjALCaToTkgIPXAH3XzWL/owpU+ZrfmO
d+7AGjZD3XwCpjHLC615PFCb+taeg8pnfpmWC39XeuATn/pEDpXvb3oiblyV
8MA4Y7aLg6oHcUYPh0U3ekDC/2QBmULlH1+2xrivBxQutccnxBCIvrPJvCTc
A1ynxBeSIgnoJX7ycI73wFCM1uK2CAJd/RYZLdkeODfAfUAqiABH9ZJnOfUe
6LrMd7DdjaoP/g3DRrc9EH5Do3qLM4HiVSGz0w88MBx3Mq3e4f/n4R0S3gMe
4Ny92TfQkkCgzd5IpWWeeP0iYO7vJqr+jbEtf+znCc/2MlutNQTyT9VKZER4
4uZugaZ6IQJeWwkNrQRPyPw3GyrDR2C6qdXj1H5PSE4L33rJSWBDVvqFyGue
IEJ0X0wP+mM3bcGMb7kXCGnJWx15/ogu+5VwcLUXpkIXdi/b6w+fdXPlQlJe
CHh41VYj2R+6QtNca7S8sLh9i61ioD8mFz51SPp54f6dhWMdWv7w6n5ppl7n
BV6JUZHabj9o7b1k5uLljbNDrgXibH7Uvqky4VWwNy4tedH+47svBHacL3eP
8YZdbpn31Q++GI8+w+Wzj1q3RQ02Dt7zxRmvYx3BV7yR3R/2RSDXF/yae81Y
HD6omhRKfinki0+DXmYnqnyw67BcwqsVPhDkH/8Res0HvFVlVu//eENPf8c5
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
/fFuzL46DrX/bfVPsfKCY7z2q2VkHAzGf7V8bfJEbtzI5d2f4vDyNr1OPdcD
3LGm/rE68eB9vk+PbyUDz1J9JTOH4uF2aPMsM2Qr7nlFzdNG4iFxOe+BiONW
3NZN67o7Go/lIic8OnS34srPU5lLJuIx/aQuVo53K3Ij+yf3zcZjLlAsxzzU
EVY+3q17VyTA8erfGDUuB5D6nsRu7QTwbraZyLWxRd1v17Op+xOQ3+xk1yhs
AV1za5+pAwlofTrWEv/NHK0HDdcE5ifgWxvvOdtOczyWpedYHknA9bCKGdvd
5hh1mItdeZp6nv+a+tFJM4idO2FSWZuA4aNi13OfbsFu24HBl68T4Hfxx/7u
ChPwHO0qtniTgCm6WF3QPhPkD95zbe5PQMmIznHhIBMUJ9Y8KBlKgEym9LFh
aRNcK82ojfiSgAnZcUn5EmDsx4aMf4sJUOWPG1U2NsbWU2FSSvREbFqSkqi9
Sx8rg55c6ZJPxO8/1/eKmuijW2GjUYpSItLExX0JTn24Ny36PFRPhNsj6YMi
+/Xg11VUHKafCHWd9wUmJzYjiqdDuHxrIu7IzGuNPd4E1WcKFbYuiZjV+3dB
p2gTvhUd1PrhlogW5RXzU76bkCDj7WLqnYgDnFtWV3zTQarRdMFgSCLcw3rs
6Ot0kJMgzSuxMxGTpely4/u0YKefebIjLRGEhIaLhKsW+DkmFCMzEtHHI7S3
TUYLhw42Wd/4LxF7izKOBXdsxPEqhyzPgkSw+n//XLliIy4MpnIcrUjEhfYb
tswrGgi/MHzIsDIRuqJD/j/2aUAx2mr9x6pEeNpMlk96a+DKn1XQqk0En5CX
guMKDTSuuZTW1ZKIgp4DjXdi1NFh1zfP/zwRohPnj0aWqkI4QyZ8f1cihEa2
DxsRqgitj3rN+SoROwyTznxZr4qlYhyN832JMDT1dOu5oAKbT4rxwx8SUbdX
1uDvLWWcFEsc9hml3t8S+KrmP2VM2Lc6vR5LhOInvhg4KCPvmov646+JsLrw
0ubvkBKe70792jCXiCL75t5vq5SwvuGej/rvRJw+frahZFgRcWOCj6sWEsF+
+0WDSp0iVjlWVJWys9DonX3om4siGOJPw/avYKHjoX/cqrMKuOAo8pqTnwWt
OkuN7iQFzO8JtEgXZEE6LO1RsoMCTnyelY0XZmH1v2X3oxfl0d8oNewjxUKB
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
wAzXPQf8D9YGD9w=
               "]]}, Annotation[#, "Charting`Private`Tag$200142#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1: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
FEzHqz6b33NzXBhxjm4tZtDxPwN1K7s=
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$200142#1"]& ]}}, {}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
9vPfv1h47Nw10CRsg/8APjmgdw==
               "]]}, Annotation[#, "Charting`Private`Tag$200195#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
XEQMzzKFKfw/+KLCXA==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$200195#1"]& ]}}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Coinc. per 5 min\"", TraditionalForm], None}, {
            FormBox["\"Measurement Angle\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           Thickness[0.006], FontSize -> 12], FrameTicks -> {{{{-70, 
              FormBox["\"-70\"", TraditionalForm], 0.024}, {0, 
              FormBox["\"0\"", TraditionalForm], 0.024}, {70, 
              FormBox["\"70\"", TraditionalForm], 0.024}, {140, 
              FormBox["\"140\"", TraditionalForm], 0.024}, {210, 
              FormBox["\"210\"", TraditionalForm], 0.024}}, {{-70, "", 
              0.024}, {0, "", 0.024}, {70, "", 0.024}, {140, "", 0.024}, {
             210, "", 0.024}}}, {{{-45, "", 0.024}, {-30, "", 0.012}, {-15, 
              "", 0.012}, {0, 
              FormBox[
               RowBox[{"\"0\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {15, "", 0.012}, {30, "", 0.012}, {45, "", 0.024}, {
             60, "", 0.012}, {75, "", 0.012}, {90, 
              FormBox[
               RowBox[{"\"90\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {105, "", 0.012}, {120, "", 0.012}, {135, "", 0.024}, {
             150, "", 0.012}, {165, "", 0.012}, {180, 
              FormBox[
               RowBox[{"\"180\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {195, "", 0.012}, {210, "", 0.012}, {225, "", 0.024}, {
             240, "", 0.012}, {255, "", 0.012}, {270, 
              FormBox[
               RowBox[{"\"270\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {285, "", 0.012}, {300, "", 0.012}, {315, "", 0.024}, {
             330, "", 0.012}, {345, "", 0.012}, {360, 
              FormBox[
               RowBox[{"\"360\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}, {{-45, "", 0.024}, {-30, "", 0.012}, {-15, "", 
              0.012}, {0, "", 0.024}, {15, "", 0.012}, {30, "", 0.012}, {
             45, "", 0.024}, {60, "", 0.012}, {75, "", 0.012}, {
             90, "", 0.024}, {105, "", 0.012}, {120, "", 0.012}, {
             135, "", 0.024}, {150, "", 0.012}, {165, "", 0.012}, {
             180, "", 0.024}, {195, "", 0.012}, {210, "", 0.012}, {
             225, "", 0.024}, {240, "", 0.012}, {255, "", 0.012}, {
             270, "", 0.024}, {285, "", 0.012}, {300, "", 0.012}, {
             315, "", 0.024}, {330, "", 0.012}, {345, "", 0.012}, {
             360, "", 0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 260, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Before Cyc: 0-1\"", TraditionalForm], 
         PlotRange -> {{-14.4, 374.4}, {-28., 168.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox["\"\"", TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
     TagBox[
      GridBox[{{
         StyleBox[
          TagBox[
           
           GridBox[{{"\"Basis\"", "\"Parameters\""}, {
             "\"HV\"", "\"v :  0.85 \[PlusMinus]0.04\""}, {
             "\"\[PlusMinus]45\[Degree]\"", 
              "\"v :  0.67 \[PlusMinus]0.05\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7], 3 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}, {
         StyleBox[
          TagBox[
           
           GridBox[{{"\"Basis\"", "\"Parameters\""}, {
             "\"HV\"", "\"v :  0.85 \[PlusMinus]0.03\""}, {
             "\"\"", "\"\[Theta] :  85.2 \[PlusMinus]1.2\""}, {
             "\"\[PlusMinus]45\[Degree]\"", 
              "\"v :  0.68 \[PlusMinus]0.04\""}, {
             "\"\"", "\"\[Theta] :  -50.0 \[PlusMinus]1.7\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7], 4 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
       "Column", 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{1}}}], 
      "Column"]}, "RowWithSeparators"], 
   TemplateBox[{"   ", "\"   \"", 
     TemplateBox[{
       GraphicsBox[{{{{{{Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{0., 8.535898384862247}, {0., 12.}}], 
               LineBox[{{0., 12.}, {0., 15.464101615137753`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{117., 131.0417392568986}, {117., 143.}}], 
               LineBox[{{117., 143.}, {117., 154.9582607431014}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{135., 91.90049506163793}, {135., 102.}}], 
               LineBox[{{135., 102.}, {135., 112.09950493836207`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{162., 13.757359312880714`}, {162., 18.}}], 
               LineBox[{{162., 18.}, {162., 22.242640687119284`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{180., 8.535898384862247}, {180., 12.}}], 
               LineBox[{{180., 12.}, {180., 15.464101615137753`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{207., 47.58380151290434}, {207., 55.}}], 
               LineBox[{{207., 55.}, {207., 62.41619848709566}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{225., 87.1511421982039}, {225., 97.}}], 
               LineBox[{{225., 97.}, {225., 106.8488578017961}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{252., 153.1159012732749}, {252., 166.}}], 
               LineBox[{{252., 166.}, {252., 178.8840987267251}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{270., 150.2328546651963}, {270., 163.}}], 
               LineBox[{{270., 163.}, {270., 175.7671453348037}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{27., 51.318854252131395`}, {27., 59.}}], 
               LineBox[{{27., 59.}, {27., 66.68114574786861}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{297., 127.2101738774484}, {297., 139.}}], 
               LineBox[{{297., 139.}, {297., 150.7898261225516}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{315., 72.94461486186259}, {315., 82.}}], 
               LineBox[{{315., 82.}, {315., 91.05538513813741}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{342., 15.52786404500042}, {342., 20.}}], 
               LineBox[{{342., 20.}, {342., 24.47213595499958}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{360., 6.}, {360., 9.}}], 
               LineBox[{{360., 9.}, {360., 12.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{45., 104.27619470523639`}, {45., 115.}}], 
               LineBox[{{45., 115.}, {45., 125.72380529476361`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{72., 162.7335008385784}, {72., 176.}}], 
               LineBox[{{72., 176.}, {72., 189.2664991614216}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{90., 189.7171431429143}, {90., 204.}}], 
               LineBox[{{90., 204.}, {90., 218.2828568570857}}]}}}, {{
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{0., 90.}, {0., 100.}}], 
               LineBox[{{0., 100.}, {0., 110.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{117., 133.91695402640542`}, {117., 146.}}], 
               LineBox[{{117., 146.}, {117., 158.08304597359458`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{135., 122.42416309720977`}, {135., 134.}}], 
               LineBox[{{135., 134.}, {135., 145.57583690279023`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{162., 89.0501256289338}, {162., 99.}}], 
               LineBox[{{162., 99.}, {162., 108.9498743710662}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{180., 65.39767473295737}, {180., 74.}}], 
               LineBox[{{180., 74.}, {180., 82.60232526704263}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{207., 50.38422689413609}, {207., 58.}}], 
               LineBox[{{207., 58.}, {207., 65.61577310586391}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{225., 40.144345399598954`}, {225., 47.}}], 
               LineBox[{{225., 47.}, {225., 53.855654600401046`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{252., 83.35634923900705}, {252., 93.}}], 
               LineBox[{{252., 93.}, {252., 102.64365076099295`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{270., 85.25320565519104}, {270., 95.}}], 
               LineBox[{{270., 95.}, {270., 104.74679434480896`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{27., 56.}, {27., 64.}}], 
               LineBox[{{27., 64.}, {27., 72.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{297., 127.2101738774484}, {297., 139.}}], 
               LineBox[{{297., 139.}, {297., 150.7898261225516}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{315., 127.2101738774484}, {315., 139.}}], 
               LineBox[{{315., 139.}, {315., 150.7898261225516}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{342., 112.86447127433996`}, {342., 124.}}], 
               LineBox[{{342., 124.}, {342., 135.13552872566004`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{360., 68.22503561260788}, {360., 77.}}], 
               LineBox[{{360., 77.}, {360., 85.77496438739212}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{45., 49.45016556472925}, {45., 57.}}], 
               LineBox[{{45., 57.}, {45., 64.54983443527075}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{72., 76.7263815045043}, {72., 86.}}], 
               LineBox[{{72., 86.}, {72., 95.2736184954957}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{90., 90.95012437887911}, {90., 101.}}], 
               LineBox[{{90., 101.}, {90., 111.04987562112089`}}]}}}}, {{{
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 15.464101615137753`}, 
                  Offset[{3, 0}, {0., 15.464101615137753`}]}, {{0., 
                  15.464101615137753`}, 
                  Offset[{-3, 0}, {0., 15.464101615137753`}]}, {{0., 
                  8.535898384862247}, 
                  Offset[{3, 0}, {0., 8.535898384862247}]}, {{0., 
                  8.535898384862247}, 
                  Offset[{-3, 0}, {0., 8.535898384862247}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 154.9582607431014}, 
                  Offset[{3, 0}, {117., 154.9582607431014}]}, {{117., 
                  154.9582607431014}, 
                  Offset[{-3, 0}, {117., 154.9582607431014}]}, {{117., 
                  131.0417392568986}, 
                  Offset[{3, 0}, {117., 131.0417392568986}]}, {{117., 
                  131.0417392568986}, 
                  Offset[{-3, 0}, {117., 131.0417392568986}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 112.09950493836207`}, 
                  Offset[{3, 0}, {135., 112.09950493836207`}]}, {{135., 
                  112.09950493836207`}, 
                  Offset[{-3, 0}, {135., 112.09950493836207`}]}, {{135., 
                  91.90049506163793}, 
                  Offset[{3, 0}, {135., 91.90049506163793}]}, {{135., 
                  91.90049506163793}, 
                  Offset[{-3, 0}, {135., 91.90049506163793}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 22.242640687119284`}, 
                  Offset[{3, 0}, {162., 22.242640687119284`}]}, {{162., 
                  22.242640687119284`}, 
                  Offset[{-3, 0}, {162., 22.242640687119284`}]}, {{162., 
                  13.757359312880714`}, 
                  Offset[{3, 0}, {162., 13.757359312880714`}]}, {{162., 
                  13.757359312880714`}, 
                  Offset[{-3, 0}, {162., 13.757359312880714`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 15.464101615137753`}, 
                  Offset[{3, 0}, {180., 15.464101615137753`}]}, {{180., 
                  15.464101615137753`}, 
                  Offset[{-3, 0}, {180., 15.464101615137753`}]}, {{180., 
                  8.535898384862247}, 
                  Offset[{3, 0}, {180., 8.535898384862247}]}, {{180., 
                  8.535898384862247}, 
                  Offset[{-3, 0}, {180., 8.535898384862247}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 62.41619848709566}, 
                  Offset[{3, 0}, {207., 62.41619848709566}]}, {{207., 
                  62.41619848709566}, 
                  Offset[{-3, 0}, {207., 62.41619848709566}]}, {{207., 
                  47.58380151290434}, 
                  Offset[{3, 0}, {207., 47.58380151290434}]}, {{207., 
                  47.58380151290434}, 
                  Offset[{-3, 0}, {207., 47.58380151290434}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 106.8488578017961}, 
                  Offset[{3, 0}, {225., 106.8488578017961}]}, {{225., 
                  106.8488578017961}, 
                  Offset[{-3, 0}, {225., 106.8488578017961}]}, {{225., 
                  87.1511421982039}, 
                  Offset[{3, 0}, {225., 87.1511421982039}]}, {{225., 
                  87.1511421982039}, 
                  Offset[{-3, 0}, {225., 87.1511421982039}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 178.8840987267251}, 
                  Offset[{3, 0}, {252., 178.8840987267251}]}, {{252., 
                  178.8840987267251}, 
                  Offset[{-3, 0}, {252., 178.8840987267251}]}, {{252., 
                  153.1159012732749}, 
                  Offset[{3, 0}, {252., 153.1159012732749}]}, {{252., 
                  153.1159012732749}, 
                  Offset[{-3, 0}, {252., 153.1159012732749}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 175.7671453348037}, 
                  Offset[{3, 0}, {270., 175.7671453348037}]}, {{270., 
                  175.7671453348037}, 
                  Offset[{-3, 0}, {270., 175.7671453348037}]}, {{270., 
                  150.2328546651963}, 
                  Offset[{3, 0}, {270., 150.2328546651963}]}, {{270., 
                  150.2328546651963}, 
                  Offset[{-3, 0}, {270., 150.2328546651963}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 66.68114574786861}, 
                  Offset[{3, 0}, {27., 66.68114574786861}]}, {{27., 
                  66.68114574786861}, 
                  Offset[{-3, 0}, {27., 66.68114574786861}]}, {{27., 
                  51.318854252131395`}, 
                  Offset[{3, 0}, {27., 51.318854252131395`}]}, {{27., 
                  51.318854252131395`}, 
                  Offset[{-3, 0}, {27., 51.318854252131395`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 150.7898261225516}, 
                  Offset[{3, 0}, {297., 150.7898261225516}]}, {{297., 
                  150.7898261225516}, 
                  Offset[{-3, 0}, {297., 150.7898261225516}]}, {{297., 
                  127.2101738774484}, 
                  Offset[{3, 0}, {297., 127.2101738774484}]}, {{297., 
                  127.2101738774484}, 
                  Offset[{-3, 0}, {297., 127.2101738774484}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 91.05538513813741}, 
                  Offset[{3, 0}, {315., 91.05538513813741}]}, {{315., 
                  91.05538513813741}, 
                  Offset[{-3, 0}, {315., 91.05538513813741}]}, {{315., 
                  72.94461486186259}, 
                  Offset[{3, 0}, {315., 72.94461486186259}]}, {{315., 
                  72.94461486186259}, 
                  Offset[{-3, 0}, {315., 72.94461486186259}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 24.47213595499958}, 
                  Offset[{3, 0}, {342., 24.47213595499958}]}, {{342., 
                  24.47213595499958}, 
                  Offset[{-3, 0}, {342., 24.47213595499958}]}, {{342., 
                  15.52786404500042}, 
                  Offset[{3, 0}, {342., 15.52786404500042}]}, {{342., 
                  15.52786404500042}, 
                  Offset[{-3, 0}, {342., 15.52786404500042}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 12.}, 
                  Offset[{3, 0}, {360., 12.}]}, {{360., 12.}, 
                  Offset[{-3, 0}, {360., 12.}]}, {{360., 6.}, 
                  Offset[{3, 0}, {360., 6.}]}, {{360., 6.}, 
                  Offset[{-3, 0}, {360., 6.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 125.72380529476361`}, 
                  Offset[{3, 0}, {45., 125.72380529476361`}]}, {{45., 
                  125.72380529476361`}, 
                  Offset[{-3, 0}, {45., 125.72380529476361`}]}, {{45., 
                  104.27619470523639`}, 
                  Offset[{3, 0}, {45., 104.27619470523639`}]}, {{45., 
                  104.27619470523639`}, 
                  Offset[{-3, 0}, {45., 104.27619470523639`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 189.2664991614216}, 
                  Offset[{3, 0}, {72., 189.2664991614216}]}, {{72., 
                  189.2664991614216}, 
                  Offset[{-3, 0}, {72., 189.2664991614216}]}, {{72., 
                  162.7335008385784}, 
                  Offset[{3, 0}, {72., 162.7335008385784}]}, {{72., 
                  162.7335008385784}, 
                  Offset[{-3, 0}, {72., 162.7335008385784}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 218.2828568570857}, 
                  Offset[{3, 0}, {90., 218.2828568570857}]}, {{90., 
                  218.2828568570857}, 
                  Offset[{-3, 0}, {90., 218.2828568570857}]}, {{90., 
                  189.7171431429143}, 
                  Offset[{3, 0}, {90., 189.7171431429143}]}, {{90., 
                  189.7171431429143}, 
                  Offset[{-3, 0}, {90., 189.7171431429143}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}}, {{Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 110.}, 
                  Offset[{3, 0}, {0., 110.}]}, {{0., 110.}, 
                  Offset[{-3, 0}, {0., 110.}]}, {{0., 90.}, 
                  Offset[{3, 0}, {0., 90.}]}, {{0., 90.}, 
                  Offset[{-3, 0}, {0., 90.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 158.08304597359458`}, 
                  Offset[{3, 0}, {117., 158.08304597359458`}]}, {{117., 
                  158.08304597359458`}, 
                  Offset[{-3, 0}, {117., 158.08304597359458`}]}, {{117., 
                  133.91695402640542`}, 
                  Offset[{3, 0}, {117., 133.91695402640542`}]}, {{117., 
                  133.91695402640542`}, 
                  Offset[{-3, 0}, {117., 133.91695402640542`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 145.57583690279023`}, 
                  Offset[{3, 0}, {135., 145.57583690279023`}]}, {{135., 
                  145.57583690279023`}, 
                  Offset[{-3, 0}, {135., 145.57583690279023`}]}, {{135., 
                  122.42416309720977`}, 
                  Offset[{3, 0}, {135., 122.42416309720977`}]}, {{135., 
                  122.42416309720977`}, 
                  Offset[{-3, 0}, {135., 122.42416309720977`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 108.9498743710662}, 
                  Offset[{3, 0}, {162., 108.9498743710662}]}, {{162., 
                  108.9498743710662}, 
                  Offset[{-3, 0}, {162., 108.9498743710662}]}, {{162., 
                  89.0501256289338}, 
                  Offset[{3, 0}, {162., 89.0501256289338}]}, {{162., 
                  89.0501256289338}, 
                  Offset[{-3, 0}, {162., 89.0501256289338}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 82.60232526704263}, 
                  Offset[{3, 0}, {180., 82.60232526704263}]}, {{180., 
                  82.60232526704263}, 
                  Offset[{-3, 0}, {180., 82.60232526704263}]}, {{180., 
                  65.39767473295737}, 
                  Offset[{3, 0}, {180., 65.39767473295737}]}, {{180., 
                  65.39767473295737}, 
                  Offset[{-3, 0}, {180., 65.39767473295737}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 65.61577310586391}, 
                  Offset[{3, 0}, {207., 65.61577310586391}]}, {{207., 
                  65.61577310586391}, 
                  Offset[{-3, 0}, {207., 65.61577310586391}]}, {{207., 
                  50.38422689413609}, 
                  Offset[{3, 0}, {207., 50.38422689413609}]}, {{207., 
                  50.38422689413609}, 
                  Offset[{-3, 0}, {207., 50.38422689413609}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 53.855654600401046`}, 
                  Offset[{3, 0}, {225., 53.855654600401046`}]}, {{225., 
                  53.855654600401046`}, 
                  Offset[{-3, 0}, {225., 53.855654600401046`}]}, {{225., 
                  40.144345399598954`}, 
                  Offset[{3, 0}, {225., 40.144345399598954`}]}, {{225., 
                  40.144345399598954`}, 
                  Offset[{-3, 0}, {225., 40.144345399598954`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 102.64365076099295`}, 
                  Offset[{3, 0}, {252., 102.64365076099295`}]}, {{252., 
                  102.64365076099295`}, 
                  Offset[{-3, 0}, {252., 102.64365076099295`}]}, {{252., 
                  83.35634923900705}, 
                  Offset[{3, 0}, {252., 83.35634923900705}]}, {{252., 
                  83.35634923900705}, 
                  Offset[{-3, 0}, {252., 83.35634923900705}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 104.74679434480896`}, 
                  Offset[{3, 0}, {270., 104.74679434480896`}]}, {{270., 
                  104.74679434480896`}, 
                  Offset[{-3, 0}, {270., 104.74679434480896`}]}, {{270., 
                  85.25320565519104}, 
                  Offset[{3, 0}, {270., 85.25320565519104}]}, {{270., 
                  85.25320565519104}, 
                  Offset[{-3, 0}, {270., 85.25320565519104}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 72.}, 
                  Offset[{3, 0}, {27., 72.}]}, {{27., 72.}, 
                  Offset[{-3, 0}, {27., 72.}]}, {{27., 56.}, 
                  Offset[{3, 0}, {27., 56.}]}, {{27., 56.}, 
                  Offset[{-3, 0}, {27., 56.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 150.7898261225516}, 
                  Offset[{3, 0}, {297., 150.7898261225516}]}, {{297., 
                  150.7898261225516}, 
                  Offset[{-3, 0}, {297., 150.7898261225516}]}, {{297., 
                  127.2101738774484}, 
                  Offset[{3, 0}, {297., 127.2101738774484}]}, {{297., 
                  127.2101738774484}, 
                  Offset[{-3, 0}, {297., 127.2101738774484}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 150.7898261225516}, 
                  Offset[{3, 0}, {315., 150.7898261225516}]}, {{315., 
                  150.7898261225516}, 
                  Offset[{-3, 0}, {315., 150.7898261225516}]}, {{315., 
                  127.2101738774484}, 
                  Offset[{3, 0}, {315., 127.2101738774484}]}, {{315., 
                  127.2101738774484}, 
                  Offset[{-3, 0}, {315., 127.2101738774484}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 135.13552872566004`}, 
                  Offset[{3, 0}, {342., 135.13552872566004`}]}, {{342., 
                  135.13552872566004`}, 
                  Offset[{-3, 0}, {342., 135.13552872566004`}]}, {{342., 
                  112.86447127433996`}, 
                  Offset[{3, 0}, {342., 112.86447127433996`}]}, {{342., 
                  112.86447127433996`}, 
                  Offset[{-3, 0}, {342., 112.86447127433996`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 85.77496438739212}, 
                  Offset[{3, 0}, {360., 85.77496438739212}]}, {{360., 
                  85.77496438739212}, 
                  Offset[{-3, 0}, {360., 85.77496438739212}]}, {{360., 
                  68.22503561260788}, 
                  Offset[{3, 0}, {360., 68.22503561260788}]}, {{360., 
                  68.22503561260788}, 
                  Offset[{-3, 0}, {360., 68.22503561260788}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 64.54983443527075}, 
                  Offset[{3, 0}, {45., 64.54983443527075}]}, {{45., 
                  64.54983443527075}, 
                  Offset[{-3, 0}, {45., 64.54983443527075}]}, {{45., 
                  49.45016556472925}, 
                  Offset[{3, 0}, {45., 49.45016556472925}]}, {{45., 
                  49.45016556472925}, 
                  Offset[{-3, 0}, {45., 49.45016556472925}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 95.2736184954957}, 
                  Offset[{3, 0}, {72., 95.2736184954957}]}, {{72., 
                  95.2736184954957}, 
                  Offset[{-3, 0}, {72., 95.2736184954957}]}, {{72., 
                  76.7263815045043}, 
                  Offset[{3, 0}, {72., 76.7263815045043}]}, {{72., 
                  76.7263815045043}, 
                  Offset[{-3, 0}, {72., 76.7263815045043}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 111.04987562112089`}, 
                  Offset[{3, 0}, {90., 111.04987562112089`}]}, {{90., 
                  111.04987562112089`}, 
                  Offset[{-3, 0}, {90., 111.04987562112089`}]}, {{90., 
                  90.95012437887911}, 
                  Offset[{3, 0}, {90., 90.95012437887911}]}, {{90., 
                  90.95012437887911}, 
                  Offset[{-3, 0}, {90., 90.95012437887911}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}}}}, {{{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 12.}}, {{117., 
              143.}}, {{135., 102.}}, {{162., 18.}}, {{180., 12.}}, {{207., 
              55.}}, {{225., 97.}}, {{252., 166.}}, {{270., 163.}}, {{27., 
              59.}}, {{297., 139.}}, {{315., 82.}}, {{342., 20.}}, {{360., 
              9.}}, {{45., 115.}}, {{72., 176.}}, {{90., 204.}}}]}, {
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 100.}}, {{117., 
              146.}}, {{135., 134.}}, {{162., 99.}}, {{180., 74.}}, {{207., 
              58.}}, {{225., 47.}}, {{252., 93.}}, {{270., 95.}}, {{27., 
              64.}}, {{297., 139.}}, {{315., 139.}}, {{342., 124.}}, {{360., 
              77.}}, {{45., 57.}}, {{72., 86.}}, {{90., 
              101.}}}]}}}, {{}, {}}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1:eJwVWnc8Vf8fNlKSpKGBMu61M7PKehDZ2zWTdQ+y7jWuESUVKqSBkojSkEqi
QnGEoigtIw1JEloi8pV+5/eX1/M64/P5vNfzPOeS8o90YvJwcXFF8XJx/f8v
Eb3p1b9/7iS/2rVWd00CyqbD21V/u5MpYx8e+m8mMLni1LDPuDsZWPjwnIch
gX1V89P3et3Jw+v3NS+1IHD2Z7to0g138nlZ/oVsTwJBTUnnrlx0Jxd06ifM
+xBQOaq6sf+MO9n5cvKdZwCBe2q5BlsOuZM6SVymfaEEXkf6+s74u5P52/SP
ju0iUGK08ouchzspe0pVonEPgeBlD9hu9u5kwtdqnj37CExfU9p3S8+d9C1g
XWs+RGDVt99lMavcyegzpW92nCTQf++yynkBd1IpQtQz9zSB0izv2y+43En9
hHczt4oIqCvfb9P46kbKBo2lNpwnYBeWNfaj1Y30m7mo/O46ARF9xEjedSOj
Fwiui6ki8GbJrzn7KjdysdSj2alqAqFX3IWuF7mRK1+fz75XS0Bj15L8dyfc
yLudD3V47xKYtWqQEDrsRqofdWzVbCCQMUpTD49zI3+5miV73SdgX9ddWxju
Rn5v+Fjs0EJg9aGDJh0BbmT9K8d89QcEyhS+Oys5uJHfzC78vtVOIOxPyRtP
czfyJvcPN6/HBDTbXZiH9N3IMP2ulLEOAveD6zhf5N1IFc7d9U+fEjioG/5v
rYQb+eWkV6b0MwIO/JIZFiJuJC3z9m2/5wTW9j4Xjl/iRorOxJ/JfEHg/cUD
py5yu5GKeRF6514SuBCnK90zzSB/a2YdKXtFIGLbWPnCbwxS7+73/OPdBLTW
FG3SHmKQXmo9TuE9BOaGHe4yXzPI8pryBo1eAi23eM1yuxhkxPHpvo8UPpx2
q7PlAYM8qs0+l9JHwIkRwpi8yyDXaf5ct/g1AVFZ8fe0mwzSwjpOP5nCH6ae
BDlfZpAHgxQE3lL4UuveH6nFDHK+xDlVvp8AK1czoSqXQfaZBJ/fQWEd5mfu
wcMMMuD+v8hUCgtvfalpuJdBlhy5q3KUwqPSTUEFHAY5vryHL4PCLdzXCn6H
Msi4lIApgsJFAwWdTn4MMvBl+V9lCsc3pnNdZzBIqTZFif+v71QUs2mJDYO0
6c71jKHwxmQ/IsiYQW7SfVH5izrPQm+7U83aDPLJx3lpLwoPbNHrkNjIIB0O
hlSVU+evWyf/b5cUgzTMOek7SMXrxMwqjd7VDHL1KnNVHgpH9HAzNQUZ5O4B
X0kBKr4Wt77l53BT5w0T1J6l8iGd2/9o/Lcradl7Nuo5la9upxq1sg+uJGd0
bKceld9K9dIA7h5XsuWDx8YOKv+HhI/kbe9wJdfbSEiaPSFg+CR4TuS2K/lI
0a/i+yMq/1ddVaMqXMlfGpttpKj6mjhs4v+kxJUsaJVQ1ntI1Z+leFtapisZ
HSLcLNdMYLf84v8G97qS6+zW7Z0lCbgv+q1sFOdKmjuoHKuh6luw9enxaT9X
ckdAbdMQ1Q8x2LcjWMeVfDXE/C5H9ZOdBOtYy0ZXMutG9FuDCgLy896tktKu
pMNLRxv9y1R/1Wsr9Qm6kulX9R9OlBIw1Rn9bTnoQu6h286Y5xIQX92jcKHH
hVx5ZuJGyVECvyebvXk6XcifE9Jyn7IIlFeduV9324Vc/tGZKZtGYIWKY7ZS
lgspLRFPPx5LYFzQsCk91YVMa8mq0GQTeDCmOPkxzoW0ut2g0xhGIPHyAs9C
fxfy6V/uPUeo+TRIvyOzVNeFbOhd/HO9A4EbYhL3vg06k32ZPxbN0al+skhk
/et1JsVt5styJQh8i3lFE37qTN6/79wtJkpA8cnhQ+r1zuThHMm134So+ZMy
4xZz3Jn0ZbAdrkwzceLTs4k/ps6kdeGN7GOtTGisUL4gsMWZtEstOTbbwESX
YYaHmJozqbX77qD9HSaWnjQk9cWdyYj8zwX3y5lIs7qStWfSidz5fHl/ezYT
cdf3y/OVOZGbPq0+EurMxOo37/tFTjuR51KGLlyzZqKaX++I7FEnclHG7ZH3
pkz88Ps5tS3ZiXT5dlF2qSYTwat8mg+5OpEiT+7pnljJhGeCjo/wQidS7nJj
pv/TQBiYjh4XC3IkR2oeRMRuCUTdpWlFn+2OZI0MY/6JWiC0hfjun3V2JAM6
omPWyQVCrU/ihwwcyWfzFt57VwZCOtLVRm2dI9k9NbGmeCwAC0+TC8weO5DO
m4MOSJ8KQNdEXmyEqgPZoXL4RdcXf7RuTb+W+t2WZJC6T90JPwwpr1b3e21L
brhA84p29wPPmrKbRq225PmWCudUKz8Yfrl/Z67Altz2XGjBbhU/3Mmav88x
tyXruSpqv0/5oqI7tmfnGRty/06nfT2pvjgRHMjlbG1NBu8ixxSVdsA/09iJ
dtGCvNNnnPXe2gv0W9LKC2pNyXy+lvzZAWf8cOfhKztnSsaeE1xr0eSMu/99
eGOWbUquqzqmUFziDFfjksz0AFPSYkZJNNTfGWkdEuMCQqbk0sa4D3uHnPBl
UPzK8gATcmaxlc7IqCOuLVujILHUmJw5m1exi8cBiVW/uchpkPm7etp42+1h
7trd6zsIkq9pW5Zmlj3eF+RmlN4GuZTrrjzfansIy64akfEHyXvxsAxbwQ7D
8dJ2HhFG5AeV9N/DbjZgP19tFXNfn/zReuJmR7cF9v9XlJF8Up8c8pfb711i
gTy63MO0CH2y5/fumxvCLFDH0dl6SlSfPP5hwbQejwV4xdwNG6L0SNeUlbHD
atuQG3BKg5+2hTzz5fK090kz1E6KiRXu0yGbloUItx4zQcf68x5lHjpksmmB
TWygCd6Zbzx5TVWHdOHjsWJqm4DnlL5IU782KSxuunJhvzGsDbYvG96kTXp9
/pjpKmeMtweKeNWGNMnm9wrsfyeNwL1Garx5qwb5C5/b/uVtAT3Of2Pxeg3S
8rM5Why2wKLnXFjib3VyMO6w1pIlW5CdL/tV7ZI6WWiVVCK9dzPE1278dmaJ
OrmVZOw5EK2LCI2Ige/nVUn/Z3GyGWxt1Ez88L3AUCWF9T/7X9+kjbmq6A/e
/Kpk9Earx76/tXBwU8Jge6gKKWt1dyQgWQvnNfcPndNQJpftNzk9fVQTr7UL
Rii2JJVfLii/+UoDUtPiIUJRiuQgV7XwjbMaCL5d/KWFpkgOB+TbG4VpYEqn
bFQ9XYHM68t5s4xPA8KbK8eX2MmTdLGJssMG6jDXe/CjsV+GfDXfIpx0QhVZ
/1mwOVkyZO05Ju8XfVW8rH/8c6ORDFlVFj6YOqwCP/1nE6dK6aTvqtsjRgYq
SDJ4MxkdQiMlV7xX/TGzETeMJmbkpiXJnRUqqlcuKyIr3uyxaakk6RraeTdm
hyJCbpw8s8NWknwZsedJ+WpFGJvv3q+yTYLMapee9TmoAMmla9csPStOxX9M
dmaPPHp3N9Rv/S1GKqXuLdY2lkfOj0DfJBsxUo5rv8kwrzy4Xt64PDazjnS4
ulDidJYcVa/W+o8c15AuQh3SIVWyyBOcGOC+tJpc4n19ynCPLOx2nzyweV6E
TJJ5+OSgrSwa/D49uVS+itw//npryjcZcF4cjh7gWkU+7Y+r2tgkAxUzjbVr
3VaSGr4HH9rnyqBIfo9fOu8KMkXyP+Z/xjJgFMgsbPRYTnJeW1zYLyoDIcGO
8t/XhcnZ40P/HZikY/ad+sjjO0LkpSdh6hMVdOy8v1tdj7mU9DZOvLb9MB2v
yx4nli8XJJsNVu8yCaWjNoy59ODOxeTg2svrElTpkHeoYsys5ienO99FPF5J
x8lN/4qDmheSnqckRE/+oYF/jc2X7kg+UrHou8v7ARriZ09qmIsvID1njruW
tNMw8vbTrpo2HjLNbIX9u5s0uDVptNJjucmfmmrsvGIaHpzfI3RCiovM2xA9
0p5JQ5jwqesLC/825pdIvIvfRYNNj4bJp8nZxgTLzfHnQmlQKup42Ww709ix
JbXPcjsNAkwiqPTCVOPj4USpMAcaRpW4ZlP+TTQ6PvALEzCjoX3iVOYO9x+N
FWKbXtD1aHCMDjJM8h9r/FF/KbRegwZh7tMBm1cNN6q/32zxRImGJ9lPMn63
DjTOTIvGb5elYd3mBd5B37sbh48aLAqRpkH5crdNc1lbY4yOw/wPCRr0ueWW
NjJPN877NPhPbaDh3UjmQeeOJqO7PpXaHOr6hPuOxOupL4zWBy9JiJaiIcZg
RlVL4p2R3CG2zFc6DXM5bVFvtw8ZLa831vyoQIMBb66tZMUXI94v+QWuajTs
jvWTD5j9ZsS/wtZqqy4NA7/yuJ3pE0Z//afVrxvTwKX8NyLm8aQRt8+ofp4N
DVJEwJvcqGmj64t0nP+402BS3G55e92s0SWxCo9eggb/XtXbveScEcOiW30T
h4Z9y/Pos0H/jNrZXHWL02lwkplvy1rEjeL/NnV6naLB8+BndvZWHqw8vP9i
xxUa/L52iR7ZywuPxf68GY00sGrOheX8x4fWbqsLb0dpiFuXJXJUdxH0+8ML
4njo2J3MaTgay4+bPbY7vcToyDKzFD7+XQC3vji/+edAx4nLGrXHNwpSc71v
DRlOR+FScf8TIUuhFfbar52qz/JX327mflyGxgP/dG89pmNI45FSR+gKBL9e
KTzhKYORIcMUG4GV6Pr5a/zXXhmM5d182XFpJXzVBh/ql8tgYrYwufPTKiSt
UTEunZcBd3Pk0yc71kD5ypPNN2/JYkHsEM1+fg0WrDssPPRZFvxyHvFPC9ei
PTVd10NUDsKHTaS6+tYhZHvltNA+OWxwFol+5iyOMa6dS84EyEOa79BDxwlx
9Do8dv1UJA/Z2/Niz3PWg+/igcsR/fJQFhtped65AT4hnqdN3BVQxN6+ZPSc
JFxt3xGDvoo4+yhfS/GXJBpFNB/LXFBEKe35jp0mUijrjHG7MK6Islfm1aMD
UjC78bTdO1kJFZvVto+tpyGNbUceuboR147tTFcKp8GXNr/h6txGVI6dvxF6
lwaX0t0beW2VUX1m3cJxTzp4Oc9GGT+VUc/Ne308XwZ1q1KOHbZQxaP2V1zf
lstjKLkhynqtOnq9di8t3iGP9jS90T0W6vj8VVbU4ao8auafppglqGPBivhN
VRYKoE3uPZf6Rh1GnqIEZ48iFJwfXqu7rIHqUZ/H8+MbkaN+aLbTRxP3kxb1
Xt+iDK1n/60dydfEM6HKId8MZTALw5D1TBPfNLjn79NUsHCjG3ecuRYUdp1T
S/dUxYp0gdi72tp4yjf5aNGQGh5U6OpeVdNFt52F44CAOka2v122NUoX7/IL
e+6oqyMjefy1T7UuxhXMhkL2qGNig1Lghi2bIWCX9/exKMVDWSV3b1tvwdY8
XbUcx01IZdhuHUrTR61scu7aRi286Ivdd68C4Gz6EmX4RQtHE4f3N/QCGnB1
CFypDfuSTFVePmNUeCgvqQzSBvtZMRfDxxhFmW9TtgnrQOa00a/Vq0ywf8Ig
jOOni12HOp2uHzaFQ8O8yUtePWR1hl8JumSOSUXMbKMDo/2VRQ/32CJooCCi
WcgMH5oWdfEPuCJD8NvDL/5WuOLWfpPs346kz99OdcdZ4fa0T6jO7Haw7n8P
bc60gm2J6u6StT5wi/+57MwtK+QX/71h5+oD2aFJNwcBazy91WW08IkPmuv/
+3zrhjW0+NTv37i7A/M7F/Pv57KF1/TLjuIHvpgwE3jNErHFwDCp9OKlL4Yl
l1RsV7TFgoYzlnODvujsFnTQcbGFjvMOS9V/vig0ET45etEWr3i9hUV0/LBZ
dI28o70dtjeKN7ee90NMO91iQ5E9esYu8/7k+OM9v+W60hv20MxXGGpL9YeV
RfioTCul8/5G1J/I9ofkw5pM5XF7dF3v+L3ogj8I/3PBG9Y7gBnjYuz50h8r
fTWvKoc64H5vfuxplQCEeTG0bRY5gn9jase/3gBI7xrZILTcEWmDph+VPwag
pyBxUZeoI4yHqv1tvwbA5HVRr7OKI/6Lynfw5Q7EWo/PiV6ujlDS+jvwQj4Q
rYz4xp3nHHF+SdDkh5hAbHAqsDho5AQpLdFmSW4mmvwn0jZYOaHXxP8/AQEm
AqOtWm+6OOFPf/2BDyuYKD8xa/wuhLo+ecbUmc6Edo+n3qYTTrihH+G0zZwJ
W28xlbcjTkggUhr80ij/ERYdFvXLCSHfz4fyU/7lWPLj8kXzTjD0vWRVkMtE
b9EuOY2Vzihx8Pbec55a70O/ZLqBM0RDRwVsm5hIIgpXqh+jrpfmLvvymwmJ
uEnHB4XOEA/9sEfvLxP3021yvC46Y7bBUDWelwD/5TnBtLvO+OgwtKpyGYHj
Y94L+4edMT247dBaOQLac9VbWT+dkbjUOKV+I4FewaX7+OacUXXmhK2FBoEN
Kvf+qS53QaU+j6GEAeU3Wev/7NdzwYnE0ypNjgRs98bqiJq7gPmsNu8Gg8CP
o52x1x1csJ95PPGwF/X+m8kTfUwXlE1YHf4vkMD9qbdjKjkuYOV4VD/mEGAu
1FZsKXBBvmLGm4W7qP2uyQ72KHOBTK+4utIeyj/rGn7aV+eCb7uT9VTTCfQl
Fr3rHXJB1UrVIVoegTsGGYW131yw4ly2WdgpAnlcUZ4FMy74ekL30NlCAi5p
Zt1egq74fFytrIPy1xqWqif0V7ti2wgZ2VJGYLngOqf1kq74z1Ry4aVLBJ4c
He98t8kVLJG4FI1rBK66dB9uNHCldOKQR18lgcw1pOXZba44wS84GnqTgOWZ
461+Xq7Y/22DmMsdAi2XttwbSnXFje9dUGui/G8ofVdrpiu2RO2z12wmsFdF
aPOFPFfELVo4QWslYFj9oTqo3BXLBD9/bG0jsD7ucZRFtSuu7/PeGP+IwNzm
GjWFBldcVeqaFekgUNuYUTH6zBVjQZnrVz0lcDI1aufjfldcKqKFxXQR4Jh5
y1d8ckW+K0OLfEbAld98OPO7K+7uvMqZfk5A87Hq+fA/rphp71UWfUlgRfY6
fzteBkLY193lXxH46cArqbqUgX2xqlNS3QS6Vn59u2wNA98W7OZe1EPgWnf3
6R+SDPwN/byrh8KZp0iPZ4oMzKx573+8l0Cod/maKk0GFhT8q97SR8BK4sSr
Y4YMdF8WYHdSWH4w+Xi0BQOL5L/kWr8msKgsyNHFiYGNklekayg8HOS4TMub
gdOP0lcL/P97laJepwjBwHjWW5YVhc99pR/+HUndz6WhzqFwaqWQZU8CAy2f
1d2yKOwbPbPwzj4G1unfGDxCYSPtwZaTWQy8k7nyIpnCG/48Tk3IZ0Dqn7Gi
G4Xn6mvgWULt17lxWIzC/buL57dcYUDn7fHFHdR+6owP3hWrYUDsoNvxIAqf
XBCdONfAoPqgff836jych966b9sY4O5/+s6Xwq6HzH/fe85A1Zb40gYqHpq2
atVFbxhoVJruWkThFcKiUXuGGXBmXwrVp+L38zmvmu8PBhR+CcV4/z/euV+/
YpaBK3Uvx4KofGSJNYXwCLkh59UXNeMXBMLelct9XOMGuwcOPMuofFqVnPjU
LOWGMlVz6zYq//xywX4HtNzQHlxr+7eTiucXRwnCyA1vrNMFE6j6aa3Qe2tu
6YbZ5n22A1R9pWos8+Df7obTB1z92Q+pfhtuCLsb5IY9nwX4oqn6FC2ISGFF
ueHnB4VL3lT9VnE/udib7gamWArPSAOB3TXJ9ZnH3HB9orz54F1qPyHKT3HG
Db1JsqdW1hEY7Mr8famKev61Sf77aqp+9usLbL/nhrMVqY+lqggk6o6vX97m
hmsrHJVsrlPxOWttlvDWDaI7pdI9LhMwiRQ4YcnvTunUT+FuVD8L0eou/l3h
DoZ1Qn3/SQKvu0Pqb6x3x5YmoXCLXAJRhu2D6za5o984QLw/i+q/pRnqo9vd
ceiG/snhZAIRTTpmRcHuSN3868e1BAJbYj+7O0W7o6XT+teOWALP35in1GW4
44VYrlhSGAGeCr6nh25S619pXlXkQc2HHTWDhg3u+Bvm/qLChUDBSubviTZ3
pLnoZJ+3///38Jb1Xu/cYSk+J2NvRsDfal+Y0mIPdBf9oB9TpebfCJdAh48H
vP/7bPz6HxPZhZXrU0I88I10T9j9hwlPB191zRgPlM3Vxgv+YmLidqN74UEP
ZG9etXj4ExPS6bsvhlV7YMDWb9nRR0zslZnbulTAE6H8bTYvjzARcfZPzJFV
ntiluM8DGUx4i02fXy7hidYvut/zU5jQXT6xYLWmJyq2VU0vZjPxbe5zywYf
TxS4mrj+50Ct//LFVrUqT6wbUjghvZQJzX1Xtjp7eqGoO897YVwgpOcvxbwK
9MKp/SvuLAwPxLKEC+fdIr2wy8liftI/EKMRJQu893shU6qx5LRdIEo881sC
r3mB+dXp6kqZQAhp7NvK4fEG+wI7//6TAHwe8Nx6qtwbPPvqtjaJBEBYaPQX
Ue0NVvXOl7sEArBFL+GcZoM3iPY9Rgr//JGZm8/T9cwbkv865rxH/KFh9ZJc
+Mcbd3p+hSrW+SPppq1BzLbtqG06ocjy8sfyNGjbD23HzsTSbVtz/aCnJCvP
t2EHXJMGv8Z170B07y1D2kdfnGtcaH5g1g3kYE7/TUlKl7x/KP/orAMSVZQ2
HpXxh6awyLzSAQdoJrYmRSj648HN1trTIQ64tHx2vYKmP3aWXrlepuGAHAT4
Fm3zB54lGD4/ZA/fIq1PGRGUDnrgwF3dbwsuz9fftt/1R2oOV15ivhXqymKM
9Jr8cWqQUxgfaIWYn0I5ax/4I+amZnWRuhVGMkzVXzylzi2emx3YYYmu2xXR
Fh/98YLvlcQHXkucFdkzo0HF6UpTqcG3xG3UujQefvcAuJ3fMfv48FawRUr+
2m0PQNNnkUUXPLei1GPDn1z/AByjP3K/q7AVvINrf9DCAxDpczS6uM0UDyaW
vjNKDcCUDGOB9WJTWK+aqY2rCIBo8+fmo3nGYLh1sD9zBeL+5UPN9IcGSDtt
Ga6yMBDEEv5uVqwBbr9/EBy7JBD6nQMDtnQDrA1u2sG7OhBXawyL7+3TR3/8
LVsJJep+O59baZZ68C04q+DmGoiw48VfnH7qIvRtzIcHlwMpv3mJsfGWJupm
6wpvXgtEmY+17p9dmuBfy+1+9mYgvkoVOrmaaOKCU9aThHuBqK81H7rbtQkD
D8vqNz6j9rdfUsZ1UgMuVd25x2YC8W2y+gOvmzpKn4o77vlL7SdXSnhKRh0/
x/0Fw3iYSFGLeLBrSg3Zct9TzQSZiDI30bXOU0Nb4SLWjAQTM1EvP07fU4V+
uq6VzzYm5BKYWu/WKePQ+d181jZMpK5OK77/aCP6mlpIHUcmHh1OS32TtBGc
OQed5V5MOCmpzFcNKaGSHUJviWDi8+J299n7ipjPvv6+MprCwcdlC5IVYVsx
VXAmnokVf1MfRm9WxOjw3uVxqUy4Swrv765WAN27YF4hj4k/l90igurkEZUw
ULv6NBNp3VOhH3fLoylPNpb3LBPG4qU8Z7bKw+dZ1diby0wM91288eiFHE6a
P+49co+JpxsMcsS45TAcsPxE0n1KVz7NGDjyVBZae93sQx4y4et34c/WYlk8
r//YavKM2r+N/c8oE1ksVZ+rmhpiwmCJpM9nykc+N5dZZzNKrW/kMaYYLoOT
3nZ7Sr8zcbEzwGvUVAbSGWet7WeZkNTQtn83RcfnM+03yqi5N/DXL2XlMzoq
bk6smVtAgJYl8731Kh3a77cOXaJ0Ks/WN/XnQun4bzLc6t8qSjc9rq94akMH
KZBf6SpK4NsRAe5EVTrSJMnVFRIESuQn/5SupMNa+0sSjwwB6zVOr6z+0CBs
s+KjuyIBhuGVTvYADd1+epbXqTn8w2eT6Np2yjdnZYl4byGweeXfXR+LaJA5
d2tXlRGBEHee7/yZNIzeef+Bn5rjkwr32NcSaah8wm+xw4qA3qJ6xZc7aYgd
Ur9WQ8394283GSR607Bl1nOVoCuBN7WL28/a08AlvD/R35PSFXvbRrdtpaFV
5urAnR2Ujq4uq4/cQsMhvW7zZUyK9zVSHNdq0GDv+K+CuZNA4dKBBmMlGlYF
ya+8G0ngz/bfK8ZlaHid5JiwguKpe9JnPNZI01B8LPF9cCKlI2XdTjdL0BB4
6ZzZ/383Thuzf/tjAw2KDR1XRA4QqC71kiqmrn9/MbU87BAVX5lp5hMpGqq/
bIi/f4TSZTPbLuym3p/wb9u7tRSPrvAQf31dkQZDEfbWyAICYnZjU37qNCxQ
KihvLaZ0N/ly9MRmGtrRLCxO6ejQopILFqY0ZDPGOVHllC/gblmZbEeDS5jI
2zaK1//tcFun4UXDulRDU4kaAt0tkqeDQmiUfw+6HEvphGLBIwnrE2g4dzVn
WUcjxesb6486H6IhuLk2VprSIYv3Bt9bfIYG5b7B/v/r4p8SfC+MbtAw8W2J
yf9/972uU1429YCG2wu0LslQuqmALc6n9I6GJFEfoSRKt0Vu77j3/jcNi8wr
X8t/IiBO8nk/2EhHh1cf9owS4OLpap+2pOMYm+fiq+/UenmeJReD6RA/4xKd
OkugaMPVhL3ldHyoSu7r/UdANUphpLyTjgttF4xU+YLwWrTrtOMEHWqTM0ve
LAtC3PrTB0Ugg6nF0lEaIkHYVvffao0QGdRJWPdmiAah4wZXzqPjMjCzPnNe
SyYIz9xlH4Z/lYFnqbHBkS1BuBT5UTKqShaVp4/e6DAKQlWljErwsCwW5n6Q
ETALQnbpOt12MTlUpe8VOmAfBI1Hb2MfHZKDQHjT+8TAILhJ3/C4myAPX2K5
y50Q6rrbOem/d+Rxa4df21REEOiftbnL/sjD34n7BishCCXGSc/l9iigTsc4
lcgOwrRKyNCXAkUIqx/9fe54EB4P+2Q7f1IEofhh54eTQdjiU3NBQl0JK9bv
dfY+F4TbV7zy3nQoYSdPE93pThAq1y2c7l6lDNFOPDQYDEL45oJtasOqYD3I
0dv1OQg2T1wVdWhqeNA4cP3OeBDQdrOM20UNUVUpJzdNByG1p9At/7YaHuWT
IQqCwVj96tdAbZo6Ev0hKKIdDNES7ivxWzehyysnxUkvGEssQsZE92yCrOvA
5BEEw980NNKvbhOeb0t5K2AdDLdQFbM+DU0oKpPXuHyD8Wqm/TtTSQv900aO
4weDsT7w1IrkLTqwe+R+4Gl2MOJn1t3am6iD+4Xs2qrjwVicta17ab0Oyo3P
SSWcCUZv+Z3yOgNdJB5eOMF3Ixg37TOMPCw3Y51E5zGJ3mCsCy9p00vQg5u5
50sn2RCEtfWK/xEDHq2N5tdWCoHsUqnEKVPAcOyw/jq1ENRctZZTDgNkc+6d
f785BEWOKma294DffZKxYbYh8HBLN7HwN0Zu+GeRtJgQiGr7Jn+6ZYIXJ2Lc
au+HoOyiaujBDDM07GBpL2wLQcw/h2qbejNcUgwTce4MgZ/4lRbLb2bYTQa8
GO8Jwavcu7u+u5hDftzJXvJrCPg3TY6/oW9Dkqn6tvQ1O3Ff/82p/icWoE98
1XYN24n6xRaBKhY24NgHrf4pEoqXN9oLD7x2RI5jzsOTTmGgW/AmhBl54K1O
FM+Cg+HICR4TvKnii/Hb8NyWHY7/HoW/9zPwxZzOsqpDx8Nh2c99cpGNL8R1
K/yWF4VDUm5IXyfEF966w+SGm+FYtOHsEO2cL/p1PfdsfhuOtqbokDUifujb
bDIXoR4BE7/3fUd/+GGkVtilSjsCGj892z789cPM5vdXpvQikJ8n/pK+xB9r
tyR5JZlHwGZsumsfpePct9yqO+gVAa+Jka2lHv7o2aKYcP5ABOIkf5y2aPTH
K70Vv/v6IuDdMpqYvCcAPLmXlza/i0Bd3wN9nUMBUPsGmYqPEUg/3vp28EQA
Ms9Guuz+GoHSbN7wZeUBMOHrrJLmjkT1Yrvc+hcBFF+kR4bKR6KrUG6pPT0Q
7+Qk0l2UI1GwcPjEepVACO69VWSgEYnwhbkP3+gEImjTp85l+pEY+X10aKN1
IDacNNlYbR+Jm8HcvCvYgcj0+zsyx4nEDNvPf6A2EHV1J7iGd0UiVUrc5Mb9
QIys3Lj2aUokRpOZNezHgTB94Lmt5FAkOEe+r2p6E4hZxTtlZkWReLqlcSJ/
PhDBk1H+2a2RcIw6FbTWiIk8W4HEuEeR+Dm5VqjfnImWCyVHfZ9Gojio1D7T
jgkJjy5Soy8S3YJrd9ZtZ6L7nrJEz3gkju04H2m6i4lS08mvywRY6P+0uHmu
iomYMHX7WkEWSkyvvlCrY8I8N6LSfxkL8idCY+ybmBgbHomqWcXCCr5EOZun
lN849HbaU4KFC53CF40pXbHwpqjHAmkWRG5EH2r7wURvv1vdVToLtUJ2BzZP
U7pF+XkSlyILeyTKM/p4KX/b9YD7giYL7Rd2mgqLU379D2+AvQ4L0k6lPsNS
BHZKG7fMbGbBduAh/YIc5Sdj6tOsjVhgvNDfM6hB6YQ1lUt+WrJQv3KbiK0F
gZHtp0T0d7Cw2XDH1fcRBOrSujmf/Fj4tfXtd6toApnXV/ZmB7JQcDZMoTiO
gDp3dsGHEBbKD1zz4kmh/O35VIn0GBYUf8Xcq6J41qazMUUtjoW/957eDjxO
YMPvuQ99CRQ2svH/l0egeVvc+Y17WBDw57n07QwBwbFQhecHWXhvtYZeTfHq
u5WXD+3KZKG6/fHj8qsEKvWHx+hHWHhw79iXg5UEXLN9r8WdYOGPqWIE9y2K
12+fWSaVz8JKteG2U3cIzL5/zXp0igVB38N7RespXlN33bS+mIWj2y/8fknx
Lsvz2IkHJSwI2V2+JHSf8t/7nk5FnmeB+f76ObUWAsMvLe/cv8yCmKO0v3Ib
pQP+pq0Lq2DhSXaDOD/Fy4dkWxJFrrOwW69R6PFjiifjDQ2Cq6n8JeUcXEzx
dM5S391Dt1jIc6wvC+siMFG6t9G3lgWVsTszdc8IOOue43pbz4KXOF/K5HNK
t3S2GHs0sKjBabp53UsCIgHDqa9IKh8/IK1A8TxnZlGLYzMLa87/0KV3E+jJ
UuB70srCEtHIXQI9BHRp1uZWbSy4XOIa6afwqTth6Q8esZD9aHnyyV4qHrbZ
bSadLDTTdTajj4D3x+uLG5+yIJGmLPaCwvfin1npPWchcKxPypHSERuEfh2+
/ZJ6/15LmzoKp5xb1bmph4XVZTdOCfUT+KCrLVTZR51vJHKxHYVNnrjZb3zD
woiwwOn4/3+/CkjIufSOhcK1KnbZFF7wp+AZ/QP1vFqV9P+/VzGz764o+Uj1
z70Ta3dR+AHtnfP6YRZO+cypOlFYrvbfiVMjLPQO6YSsonCGnVS3yBgLhHtD
SxO1n9GPJmuOfWUhYkrF1JPC1gmB7kI/WLBScvz0ljpPhVDaqUMTLMwVrKqw
obDQ+YuvF06xECRy9OQFKh6Rm9vF9k1T+Ti1sGKMilfXk1Hvf39YcHZ4+1mM
wuqBgkW75ljgZJXZ6lDxPvZH+f30PAtv29a8N6Dy4UJn+/3gZWN38/lMwRcE
amqPlYYtZENQ+E/FSyq/q+2rP47wsxEYvpM7g8p/b8I088NSNvQ8uxwqOykd
vmzdxe3CbBzgM3KU6aB03PktI30r2Cj+1pBzgKqv7U+Tdz5fw4bh7aK+RQ8J
NAQWX7ETZUPp5J0vCpROlJwlxx+Js0FWuJnrNP///5kWRDZLsREc6DC5kqpv
IvFQdLUSGzvEluW9onTow2UV1WoqbKzctCHJ6SbVL2WdUxVqbPTPrXhWR/XT
6FPh+DItNpqMuvptr1DxkclPyjNi42i2hsBuSgd31d25t8KEDa+sif8YhQQ0
HF7PZ29l48rBgQyxU5RvSFy/N92SjemFbllBxwjEd507EO/MxrLlNTNL9hMo
7em1HXFl47Z8/VVXal48frd0tbs7G5pxiXOHk6h6+xp3QWc7G+uF3Pc1xBBo
WWzz8DfBxr7LHbz6gQSETSf5YxPZuKGeeq2Y8i1brBSeDSWxse47b/4tytcE
OPqcctnDxi1p1YI6LYLSf20KmvvZWMg4KnJIiar3pEKrX1lsiM3kjG1bTeBy
zdZMdgkbF66mvts2wsTzuwkuH86xsXTvluVag0zMNV8Td7zAhrnfAR7hN0w4
PF97Ve0KG43Ku+yOUPP797fxzu/VbFgYv3heXcOEiXzusog2Ngp0RTQu7Gbi
dcGnYzu/s0F0Km7czcuE0YZMtWUTbNBd9gylzwbifInGk5uTbOQu5xfb/TMQ
EZf2LP77h4pH2kVHtfeB4L61LuXIgigYrv+5+hrFf/LPbMOr10WhesfztVKh
geAsurVt3jQKNWcluCmtg/5D3p9KzaNwzbW3GTUBgBDvvm2WUbhvm9U+cTkA
AiIODTl2UWjTP8klczwAZ6RHNWkeUbCOftTTEhiAFoMN0hYRUSiwjozm5wvA
ipi0uaMno9DEZVHsvsUfCwOXJy4+HYUDU38erlbxx6xz4XTKmSicyiwwaZfy
x4dNVRORpVFoZMocXrLYH5W/3o7YVkQhVfbk3KIeP9hHa71aTEZh76MgTLH8
kBk1dHXv5yj8NSdCbM74YiHbZAdbOxpJTaWnueu342nS9g1pH6JhJ588lnzb
FQ88w2dkhqLxV1jD7Xu+Kxp0k5+3Dkej6lXiEiLeFdcmC9P4xqNRdLTRO3Cz
KzLD3nzb/zsact0S/BX1LrDw9mrctyQGo+fO7Cttcgap5+G7VysGa6xXRnG9
ckTVrEtp0sEYbHWOSzpvbwNdM0vv74djcDD1kzafmA0ajxis9s+OQabCFtfD
w9booMse2nY8Bjce15st3m2NYbtp9oozMVDdmlHcfc0KoudOGV+qjEHeCr6c
JWstsdf63cCLnhjws1N12EvMwZ/3vMD8dQzi2r4+1H5jhuyBBy61b2Jw+Ldh
iPJVMxTEXm8r+hADRvWkwXV7M1QXp1SGjMVg/yae20L5WzHySzrl33wMxsmY
0XRVUzgUBkkoycbCZcuA7MWDwIqAzmvP5WPh814l6vF24KXCJsNEpVhMKbak
aGkAbrfnvdvVYiG9ob7jzm0j+DzPLQjSi8W/k8b2/wINEc7fInLeIRZJpwzR
91oPKk8VyqydqefvafurZ+rhR+4RzV+usWiV3s6SNNRDDM3L2cQrFpMPTedb
z21BkuFEzgAzFgcZV52MOZtxKEZScP2uWBy+ELs6Q1cHNnppp1uSY2G2Wii9
8Jc2hHjGFcNSYvHnxPRfx+vaOHrktmX9gVhYHG11LZXXxslyu3SPnFjsLsog
R6S1cHEgiSevLBbrWTeTM7Q3Ifji4FGDS7F4Ij135sd/GlCMsJD6VB4LJxOB
ZJ77Grj230poVsbi6nHnaBkHDdxafSX5eV0sRLmznsXGqKPFpm9GqCsWQeyr
vA71qhBJoQUffB6LmFCFPyL+qiBuhvfwvopFR8aTKGEBVSwS5bk10xeLA43t
x8q2q8Dqs2L04MdYnLanM/1XKuO0aOyg93AsCvrKQ981b8S4baNjz0gs+vk8
Zo/HbkRWtbNax9dYLH3xgO/aGyV07U36WjMdC5FBXLpaqwipmgfearOx0D13
/wVfjCKiRoQ7yudi8UbKfOq0qiJW2peVF3NzIFy9ib6/XAEM8SdBB5dwcExO
9qfjdXlctF/bwyvEQW7ty8KL0fKYSfU33y3MwdeHYquMNsvj1Jff9GgRDmpO
lUhrtcnhzS2JQW8JDo7zngy0nJKF8miIY48UB6PkuHRtsyx2r68mHekcSNq5
jYQfl4XEfoticwUOZjpWzlzUlgXr9jGhJiUOQk5LTSoLyIIcfZOsp8LBUFG9
5+w7Gfg7sr3VNnHAX6teGZQpg5v76x+Xa3GgtsjIYDFTBgvu8OnJ6HJg+mgz
e8JQBmUbCtaJGnBAt2J+L/xNx8jY/W7ebRwU/VhU5hFLx2aJpea7LTlIOSHW
b+ROxyEnt5oZaw4OfBGsj9SnQ6l27PhXBw4m7TZZX+WnI2lcizfYmYM7wUd9
6n/Q0CGREjXoykFAxobBla9piEhb5djjyQHn1fDQ+UoaGmp9SMftHDTcT735
9gwNy75eUu3YQb3/jNBRv0wafCV/FZn7c/CwdnGxWhINlc4GQk2BHLh8i5+z
CqeBOz09WS+Ig9Mew62VO2hwqns2XhPCwQNFPxF/ZxpKv4p5q4VxsJyVzLPD
goZfksTj8ggOLL84l140pEHwQXPTWjYHYs1JWgHaNMiGSt1Ji+agt6mkarsq
DUbCe65NxnJgsatSNl+BBveaN+f94znoM7AuXCZDA9tzy+muRA4E/7aJPZSi
4dC//KOGyRzMGWtduSdBw7nzU+kVezgIlHSw+7WBhruWzrtFUzmoVM1eGExd
f/WtMiZjPwcGGWtfiFHPfzsuFPo7jYP/Wjoqheg08G8O8ws8yIHAYoMCyNMg
9a7d7flhDr4srky/oUzDln1ydsjm4PJ6qUg/TRpc5A9svZbDgY4ttjro0xDe
ObhF/DgHG0OjZpLNaEiLgvqhXA7OqjxLHLWnoXhNkdxMPpUfJ6U7uV403Ln7
33qigAONOwtO7wmm4Zmfx6qXhRwY5eQtucShYXThbQGTYqpeDjz9LpRGA2/F
Ku7KEg6ejDkrVefRIO4YNb3+PAdnppOL8y/RYH9aeejPJSofu+qurO2iIRiH
Xwdd4YBoEf6v5hMNqZ9Gul5d5aCn98TPnDkaqlXP37tRRfXPkUMK/5Tp6HzJ
XS1Rw0GCxp9lxyzoGE7YUZ51m4NVFjmf/QLpWNsimh9ylwO7beKnbxfToR4S
n9XTwMHOvmeLDRrpsBLq3mfWxMHhGfUj8++p+nQ/ypJ6wEF9csSopowMPowv
sup7yoH4IK0+qEEGs0eZ2PacA81bxMMHn2WwSqdZu+YlB4WBbm07VsjCfO9u
2tE+DqY528IMQ2VRLjI1Z/GRgzWDzqJlSnJornP6desTB4N/22sf+VD9vqPy
C32Eg9lV0afljstBqDy0m+srBysckksO/JNDtOHg9Tu/OWBcNDj7cFge+kFP
/eUF4rDX4Z0n73dF5GQUqTwWjAM3N0M6Rk8Jny6Hz4YviwPbof6r1UElZI8v
OXZzVRw+CO4alVPYiAG2RZOhRBxofGOWmQnK2J/UJOGqGYdpMqpQWUUNvWdy
xqa14zC37I116A41KDfuuF2wOQ5bBR7xMo6qoZt73m7AMA7xt7j61abVIJ++
ZXeoZRzsqrumvj9SR8fRm2/2+sThcZFPnvKxTZC8mXqJ7hcHo6s+43xPNiH2
pWPMw4A4mHyrfL1PQBMb1vxYsjQkDt3Vu6IiDmiCVbhR72R0HEYcf73/nqqF
VRfLTl3LiIPQYNothUIdeN3NZ/RXxUFs7sFpf1N9GFpZ8zjWUPebvu9JydKH
dO/81Qe348ClP960oVef4mcmX9XdOBjsrwntiTAAR0mzOuNBHBy0d8dsLDXE
sYKu5dqv4xDgJlA2cQRoi1/cmcMdj7QrhO2NzabQ0tplau4QD41VEz3ySpZ4
uctEkc85HrH2toIlAZaIur94eYtrPHbdFaqwK7REpf3Jd8Ze8bjUTl9rIWQF
xZ01CQZEPEaqHH6cn7TChuLv1zWT4mE0JJ1+5JEN+BcHitMuxUPdoce1wtoB
F+yVeAfL4/HMp7O8dqcDzPImvpy9Gg+xzILJ3oMOSKXtvb3hZjzWBD4ztmlz
wJxBkZNoQzwEb/nd/mvmiJ9RvRnLX8aj+kemlvVWJ+TUFkd2dcdjqDV6k2ug
E1S4ghhH+uJxd0Brb9h+J4RlTdGWvo+HxVLHd00tThi+uKKRfzQe9rO7GP/M
nLH/W1/Zw/F4TN+tORxKOIOmVZKZ9j0eS6UHbgymOcP3vqrngql4XPh3uPjH
Q2fM80+jeToeumornqSNOOOMfYNc6mw8VvUfr5dd7AL9vANCxn/j8fuiu1iX
ggtev7GZ+vcvHq2Ljp1NtXLB/wAzERCl
               "]]}, Annotation[#, "Charting`Private`Tag$201493#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1:eJwVmnk4Vd8XxlWUFFIpkiFTkjKVIdRrHs41KzLdY8p0jVdcUkkpSaUMRShE
ERVK+JZORCVTUaYGipJEg0hJv/P76zyf556zz15rv2ud/e7nrvMMsfOZz8XF
pb6Ai+v/1z1s9Rf//jlR/l5a+jcVHbDJ8IOb8pQTdZ4RbF6i6YDJ5Zkf3Mec
qCtSZ26WGDngcMXc9L0eJ2rTpk/ade4OuPTtyZrYcifqUlRA0qZUB/SFkOQv
TycqM/t+0uq/DrBinfz8tdGREgrw1g/o2glNn4/z3p3YRa30TbPbd8IR5WKS
98bf2VNPZjRzp9VdYGMWE/qvx57KvnBl8B9cMB7xQmZZuz0lL7VJep6VCxTb
TiSp/mdPff4XrDHu64L8uF+OEan21PbPSd9DLrggbfjZ9xlDe+pa/kGJWS5X
RN04osBTaEfdO5ZScLLRFateve0XvmBHxVaNqxx95opbvDqn5c/YUZM/Kqoj
Xrviq8e3n6b77ahli6+5qP90hd9K94aknXbUpVa7sC2ybnCO1nRfttCOeqwd
u0ktzg16hqOpYr62VIhW7vN4ZXfUXp1WdHezpZp+3hnu03aHhgBP/SV7W6rq
B+euvJE7VHolv8rBlmoVf+WX6eQO6ZCdDBVRW+pbTWbZSJw7Fl6guI2f2lA/
X4jckWh3R8f3jL3ByjaU/5zTDpYHEwyny0vL5Wwo302br4sGMPHkXnnBDzEb
atbzT1l1OBP1iS3POLw21Ke2Z1JPDzPhr8fturDBmnr9KkcMhUyopfe1KK+3
pt46VHC5DTPRaHTsevyEJdUaoHpqTonE0KZVqh59ltTswpGPV1VIzF9dWLmj
0ZJa1VBYZb6FxPZP9dWzWZZUvWZVarAOieqTc/WRJpbUq5ZtEUbmJEpf7u0O
yGFQv/LOOqzxItF8n9vZPJFBJTwzjVbYQ+LT1dRX69kMSsj+XK6SPwn5feWD
Q2YMasXF3o5VISQuSX757D5JUKaa8evCY0ik+Xlz2RMExbs4QGHHaRIVtj/i
VTUISnqRCrvkDIln2+J5lq0jKP/IQeaSNBIC/Jf4WqcsKL8LfnzXz5NILO9f
aZpvQbX+KRaJzCNRlBVwTu6kBRXY3f7hZAGJxsMzotwcC2rtxh/KFwrpeHet
lnxgaUEZpLLWZRST2PfbboPOjDl1n+fJYv5yElnvB6+JDplTHN1ezY4KOv6W
0M2/2sypmZ7y+4m3SEzmnlK/fdmcYpX2tPbeIbE8Ubwq9bQ5FSU7wQivIaEa
VqoVHmNObU1zX831H4lgw2Y9ZRtz6vN4T9yfeySSlXZT/DrmlEnsHlH/+ySu
CY8YjMmZUzsc7L4+pUiMfOQxK/5jRv2OJCzDGkh4JuvbyVwxo8a1V+zd9pjE
YqGyFwGpZpTch3U+O56QuJkusrvioBm1YcWmoW3NJOZyJ5j6TmZUL2/PMeEW
EoUyLu8TjcyopvWTVydpZlxt2tOhYkbdjOGxa26l4y3PCWIuNqNMqcatu9tJ
6Gss/lb005T6nhMXtLyDnk9tRMT4oCmlfMJsfT3Np3cMTG9tM6W+hnd4+D0j
ofGQ2Le/1pQ6jNdiPM9JvDa7M/ewyJT6MGjscJ7mI63S8UtTTakZ8x+LpTtJ
PH85k3gh0JTycF/zSaSLRLSLz9L3jqbUszXUsqM0Sw10nFY0MqUuPZhf8Ynm
R966K8JVTKnQGLkWwxd0Pj9dyahZa0rJx+53T6NZOHjFmnmLTSktgXC/fprv
fj+QY/bThHp0PPaTyEsSXlGjUimDJlSOs8Igg2a+2Z2Xu1tNKCGuFdZRNJfH
PVgvWWtC1fGPqZ2n2Yln07U9RSbUaqW9yTdo/nf8/ObrZ02oIZF4l3s0Fwlw
V/w8YEKlXfl18QHNlqkhW/UCTSjWg47dd2meXN1ffcTRhMr0WXm8jObsbBPd
FkMTam3x203pNBuuq7i/QsWEyqgizdg0jxaKG7qsNaHGWrt7TGk+q3i8KZ/X
hOoxPPd2Oc3aNybNRyeNKd1DC9y66PgG1MlW1UFjau/8VNtkmo9VP7WJbjWm
Qne13dtG82Y9zS6qxpgqFrfJf0vn78WDfEfeImNq4eLGfzE0x5oI9FufNaYy
ej6/XEqzzNNo93MHjCkx53SFdHp9mq2HB98EGFPHfS//XEFzWJeNj7yjMeUw
zL/jOL2eIrvvjgQZGlO5VA/PT3r9779ez7qtbEyZfREnHGne45k6MStmTL3y
4l12k9bLrcCAqROTRlTbmk5xY1pfLl9fRHcOGFE/rbz8D7XR9bhX/++aViMq
/sYv7Vu0Hm0OiHCXFBpRyy84hf59SmJ6/pFj384YUXL9nr0raM49NsGnfcCI
On/tW6sUrfexlCahx7uMqNK8QVKCro9UYbV0QUMjSqJfaIHgIxLbsnJEHJWN
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
amz0R4OP7V27xzbY/vmErqiKPybZaj921NlAPuXe5bfa/vR4VCdKbDDVK7WX
ZekPPr2zvm/ibZAe9FH4aIQ/mhdubjqvYYPOtAjHmnp/PD+XqbjY1hp1zFCN
hY/9cVAvw6ZzuzWuKrKE7Vv9sfBm5V5KyRoHKK/OsW5/eIx4u3AvtobCmJ21
1Bd/3JjCS40GK8QaqpoeWx0AklmY7rvdCnsENsl3rQ1AmtT2s+zNVrDtVeBZ
Jx2AQ39L3l2WsIJ8iFRDrVIA2j+qL+b8s0RHluCOcf0AlKl6Sg/VW0L2+xeN
nawA8N38LPHVxhIC9z4J54cF4Lfi4zekoSVmjg1PjkcGQCYr4uevrZZoE39d
kXgoANfPkdkXxSzBMW/ZfDcjAAEtCd+ejDDgufIx/+LsAOw00z3BecWA5duG
sZ15Acgw3uJm3cGA9N7/SiauBeDiqnUrI6sZaL1UIi/zIAAnukTyS5IYqA4s
4gltCsDHgKCunIMM5GvkD919GoDC78F8tREMcFoy83e9DMAZgeSBICY93q9E
iaTPAVCunKpt1GAg0tp31TfhQNQN5CmZfyFw4MfG2+/XBML3iWO8zzCBY+e+
2r+UDMQDne7/il4TOP82+sx/GwJxsnKZ8Pk2AjUhyUuP6gVCq2PJF80KAvUr
bK9xDAJhuOn8ROw1As13hC0CTQOxY1uM0cfLBPr+5R6zsQ3E564dq5XO0/78
dPl8MZ9ARP1WvxEVR/vlLZF5/AH0+F/q00ZiCPD3bKP3foGwzPTecHAvAQmp
h/uHOYGIVfycKB5I+9uHiWt79gciMybPV24P7XP9LP9rjg/EazV+cXsPArj5
8teN5EAsyz2pIuVEwMzhwrn8M4Ewfat66T7t721/MTXSMwJRdrhkcYI1AU98
YsdcCsRbAbHRQ6YEAobKlgcVBkLttHtojSGB8MTwcmZJIFIT+QVXg8Dhjj/j
RrcCseuIXLmRNoHkCOqkZk0gXJzSHqzUIJAmkqCkWBeIZ8ox3EvUCVwmBQIE
HwdiXmOaVsAmAqXcnbzzWwNRMXdsS6cigdtXz12ZfEbnTzKE46lAoOmr1HBv
fyDWs8NHf8gQaEsbPtwyEIiCI9zrptYR6NYqkb4/HAi5DZE3JaQIDLwKflA+
Goi9LkR2kASBkTh18vJEIFT76z6+W0vgq+yvuYzJQBTL16cfECMw8/huzvGZ
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
JvA/N7NWXw==
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$201493#1"]& ]}}, {}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
GAO9MhnGbjDzrzOeZ1L2iILlWifc8ELe5rX1EQLSSb9c2grckNpcMfL4OGU/
w/6Y3xU3nEtPVjTII8B7dU4gvd4N0rGXeZ4UEjj51Z+nd9gNZy/HGb2/QUB/
rtKC9dMNFR9xo6yCsi8guI97zg1Spy5xB1YTkFK/t6Ah6o6vCrNmafcIlLHW
/t5v5A5vxkfJiseUf3sTDSSt3CGyaKinuYPy73hHYrmzO8o/2Vs0UPut/u2d
E2+Z7rhwIeN3ZBfFX/NrzRiWOxroP9eve0v506kWs3iHOxICJ3gbqP35/lTf
V/Vj7rDqXGtxi9qvmTz6yi357ghYkVK85CPlz6qj4T4l7jil/nS31SdqX11v
8mlfnTve58yd3Ent7z9t8mgSre74r+5icyK13+f4fAu+8cwdKmndfp7jlP3t
hf3dQ+64uORR1fMfBGqMMwtqv7kj/enQe6cJAnkccb75s+44tCUlpm6SQGKz
n/gOLg8Y8r8OFpki4J5u2eUn4IGzW6IqXaYJaG/WyNm40gPcUu8Zu2YIiApI
uK6V8cB1x2+svFmKj6dcIvNKHhjYkN515jeBp8fHOvp1PMAVW3sy8w+B6+5d
hxqNPaD2oulyyF8Ch1eRmy9Ye+BMOoeQ4hyBrT1Xl+x18cBN4fkH3RTefO5k
a7CfB16Zbn2V8I/az4N27jNnemDIbI3GHIV5aGFmtBgPROUv64meJ/Dpk/PC
ohQPnFKKf9VO4ZZSw3tDaR5oUD0kuXKBwKVt9B2thz3w1PTZDVsK71UX2nA5
zwMWW3qzt1I46OfMdPoFD0x+jLuXSGGTyoHKsDIPsI/sMYik8NqkJ3E2lR5w
SV4570DhuQ1VmkoNHuiXjRZdTeGeucJvSx9S528biX1F2a9tzLw2+sIDqccF
ZZIofDotbuuTXg980TyyhofCbEt/xWufPBBmYRK+h/LHg9dq+PB3D/DLSi8e
pvzXfaJRHPXbA/UpHj/1KbzsqESI4yJPLHNT14qn+PvpvEhGQ9ATL/mkWvMp
fp8vH+8TXuUJNWfyxnWK/xtdXWd/yHiial339/+o+Bw+Q/q8UPbEv0dOWblU
/Lb5l62q0PXETO/6PVup+CoO7jwZb+OJpp6IjC5KD0tKwlzcXT0Ro33mXBSl
l+EwF2E9f08YkbwSPyg9FY3TD03HeMI9X97uDqW3tJtCm9+kUOf3TS2Zo/QY
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
wgv/AzglW1s=
               "]]}, Annotation[#, "Charting`Private`Tag$201546#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwVmnk4VV0UxlUUMkQTKYRKSIaiMr1m7jXLPJ2LzOO94qZSGqQyNEqSJhql
UkQlx5AmopJQVJKQIRJC+vb3V8/v6bhn7bXetfZ+93OW+0Y6bJnJw8NjP4uH
5/9/Azia7/79c6WLXs26m7LBBWuMu7zWjrrSf8/ONhoxc8GI+Oku7z5X2nih
ibSXkwv2Fk6PlTW70r+uqTlosF1wfuj5kh13XOmtB6/d+X7DBa2RFDXu60qn
BhqeDpBxhU1Y6o+fT1zogeZPDmN8btDe8n1Gx2FnWsZPXCXhpTvmmTSu0090
phML8xLTW93RK1cRmBXrTH9LXxaf1eOOnM9ZdQ4sZ1qiaupV9hwPzPa0OV2l
5Uwz13NDbI090ORQpJb3xYkOabW5YVvqgRjs9QnSdqItrmeOtuR4wkYm6li1
ihMtfFL4+Od8TyhOez6RlXOiWy/r1n184ImPD7WUW4ScaFnBkHNFTZ4w1u4d
tezYTC/amkx9E/aCuKp9mnLqZlpfpOy1XLwX7kjJlA10ONLKPpU5ZpbesLOI
j/rX7Ei3vyjx+7XZGwMx7+Tn1TvSDz1EfhynvKH06vAh9YeOtPtk1Pdbcd64
uHvcJea4I/3Zc5+SfZ43Tnx7PfzH2JEeu77vyYppb8Td2qfIl+dA89xK69ib
54NFHz99WHjGgW60k9q565YP7vHrpK886kCvVVlnEFbqg5+sod/mOx1ovwtV
/RJ1Pgha4F11yMmBLrpT0vnolw/ct2l7z5vtQJ95lJImKkNBz7j3uFSgPV0U
f/RfkB+FB1fHlLy97OnX7xJ6HAMpaInwVZ53tKf73bdd0QqloNYi83MF7Ol4
la49X9kU5CKdrNQk7ekMwRXDLYkUZp+heU1f2tEiJ9pKNHMo7OF5deZAhR3d
Efz0cuYFCv+2fNB4cd+O/lU2MTWSS2FcbZSyzbWjC3Wjnx+/QeFHjXKZ2047
2nTWvg3BJRQahjO2Rqy1o0+sc3WMaKBg5ZordGeFHX3nt/I/s7cUnpfdufRL
yo4udgm8v6iJQmVy7Wsuvx1tYey24cwHCsF6vJ6zq2xp3k/XB7S7KPjyyxw6
fMuW/qb4PPJZNwXPtxtL5mXb0qbzD76z/UHBJjhygdRWW/qHp6Wu8U8KGidb
a9eusqUlHv4be/iHgjL1e+LefFs6275HetYUBQXleas38djSW2w6ZxtOU1hc
YbrfpMWGnp44KHBhJgtTfbf13A7b0AlJRcFDgiz8vv8ytD3OhnbVbFQcEGJh
YE/XaT9/G1rH+MHBLyIsfJZYOhquZ0P3ndklly/OwhOTAwV7Bq3pg2Xqtg2S
LHSuWaTOarWms1YY8F+WYmHm4ry7Bk+saQFdyzNRy1jQ76ksmcqypgu/vDXo
lGXB8429zof91nR12GvLVDkWtj/8XFYaZU0bFjyRVlZgoSR1ujLWzJqGV6aU
6SoWmmJTTZ3UrenpjmLdCkUSr8/SZ5pLrWlbbyspDSUWNDQ21f0csqKV6GDe
YRUW8pu2vg85a0WfWp6/rledhRflvO6WyVa0cueCwbmaLPRcPf5xFceKvtuR
Zie3joWV2+986bSwog15XP+paLFg4g//Kk0reuLSeovl2iz4Wdd3XZC2oosy
DNcKbmDhvEz/D+8RJi35UqyhdCMLj/l3ROh9YtLxpUpJuzex0DYkOCT1gklb
u0q91dEh+W49zZm4x6St5loV/SC8pFpxtPkck64T0Vc+osvChpv3ufcPMem/
8Yc1V+ux4JJhNnlyK5MeMPteW0w4dte7nTEUk45gLhvdoM/CiSB/Hkcmkz5n
Kl5wi3Ch/a896lpMOrCl6tcSAxZeb9rDN285k84+blETT/invFjywFwmzddX
r1BPWET4vGDdKIOWMr8oIgEWVEZVU298YdDnxmT3OhFmfioTPVTLoHsNahIP
EA55ZnUs6D553nGFYAHh5DsfFphfZNATTr1Szwlfzgo5tSKVQRf5tBY3E36y
948kL5dBe8W/bf1IuDMsObvDl0FrXqo98I7wTOfFMhXWDLr4xbuySsKyBpcv
nNvAoJMaF+/MJayvuF4hQZ5B859qfBJP2FOs+rKnCINubg3INCW8fcJhtc4f
S5rP3eg3L+Gsr19uSHZa0kLlvz6WkPWV1Eapjr+ypO9fkrVjEW4q+ne7qdSS
vph+wHaa5GskJ02zKNeSvjH670M6YfHkZcXH0y1pMe340YWE1aPzN7DjLenY
U//OHSH5jzB+obfWzpKmbepy/Ui9UlTcaGEdS9rxSu7MR6SeNxZ2G/WtsKRv
Lcsb4Sfc/Z3P4tqkBd3UaXdmN9HH7NcnXhzosqCfCzs43iD6WfFA3jrgtQV9
4u+qyy+IvnxTDB3kr1jQQ09EFL6vZ0FA7Oa7kOMWdMBo4q/fRJ+3T0q4Fe6y
oN85qbZNEP1O5wz6GLpa0LsWFc3+TvSdJ+/xNdnEgg5L2cV4pcaC1dWagAY1
C1rP0e/2jbUkP3fOhvsIWNDbXiv8sFjDgqGWwNDl3+b0+03J1fykX7ofxMQM
fDGnI+3mPX9M+kmrmrl95wNzei5PoJcw6bc3TX+Sz4Sa07sjlafWkX7d5rFF
6KuLOV10XjXuMuln2c8N6Uom5nRWTK+GiAzJV8+VjNKl5Pc7i7g0mQeCU065
7+vM6KmlzzNuL2DBeHlh+Xw1MzrJZo9cJS8LvXnLjD2WmtELxHh0T5P5dEzp
YM1FfjO6vlSlPoCHzB9Nqk79iykt88+K822Swg4zkQ+2x0zpwdzbytHDFO6F
howeHjGhb/oN+tS0UfD4+W7b288m9MCE8do5ZN7O3Gr4d0mdCR2Va1Gl30zB
LkGC93qeCb1HNtXm2BsKfUdqxJ45m9AzPkwffFlD5mex3BreUmOaXSKbevgm
hZ+uM/nyLhnTs78atP66RuHR5JePpmnGdKwxX5n9ZQpOhhdSDvgZ02kzR/wG
yP6SVCvTJyhiTN/YuV8mP51CT8fSG2J+RnTw7OgWRFIoEF28WkbYkLb9mmY1
bxWF+MJRHnoMdIl89C1dOQpmTk3NVAdoscsSTT7LKHzKOpl88T7ophKJrEPz
KcxbuaB7hS/o9wd+s7qmfdDFlbNxizCg05YJT6y74YPoN4sYMZW69H2jI4ar
x7yxbzIneWemLr39i9T8Uz+8kaGw6mlShC7t+11y8vcnbzyI1TY5vUSXVtnr
yT7wzBuzpFz1H7N16NtPI+nJTG+c9DutwS+/idbfUecIbW+UjkhJZe/Vptcs
oVR/BXthxuLlfVUmGvQxq7EFKws8cMdgeHzVmCz90uBIxLHVrnBYMf0sdc4M
GB1U95l02gz3g9+j00xmIq7cbtzOYjNY/Q1L0hNn4euvG+dubtqMqKJLYUcm
+XBvVWDiDpnNSDW1nHd8UBCcO0uDOD2O6NR4oVwbKg7PZkurjwmOkHZcyHnt
uBQcqen9zNsOkOM79NR+eCn+CSywu3fJASvvT0u9ObIM4eFLrVedcsAaqe7q
N3XSmHL/a6CS4ICcaK+5vZdk0bU/JveelQPyN6p5/VgmD5+HdTyNP+zx4vk7
ngExRSyuV/Pt17BHs0eC8DkfRfSea4mZoWiP7/0rl9jdVIT3o88icsvswSvO
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
yDlMKH+wjPzeq/cbJyRZWJtwXxVVFL5Ve0QslmDBLFto3Zc6Mtfm0ZJqC1jg
NBfry3+loLDdZ6R1LgvZUEqU7KYQ6l/kWC/AQs3Vs1Wi/RT49Zz/lc4h79u2
z2JqlEKR+WEmm8yjR5IODu8ESR/bb1aJJPNqtkf/lgNk3RVt+36eJfNvbRV1
dSfJ4/xvU0v/kPe4Kjf2ckhd/M23tDPIvLwx+SCSMmNhZPutdW8+ULDLTt62
0Z2FeXvvVUWR+ZvVJp/6I5EF82W7GMP3KVSZnqr/kkTmXtdz59J7FPpuCoo3
H2Zh+vkjh7g7FAwShjKqT7KwPPqORvN1Cp3S5efPXmPh8xY9M9WzFNZQ7vds
X7NwoZBKV99Nge448uGurC96UzJKawzI/qGqrHJ0hS8mmq40p+mQ/S3+yY4I
JV88alu33FabwlWxiWWr1/lCyHKNTQnR2RH4UTnmvjAwvTa6ZhkFKmf9t+QI
X2iev27vMeQDHvfWAa9HvlCeeVJ362Yf4LX8TH5XP3wrzLmh/MsL0Qsv/LXx
8oPQIS8bzy4vXHST/nPS1w+PBePn7W4h+0yHxE/5cD/Y55/zvVDuhZph4XaD
PX7IjApxtDnsBeaC8dK4fD8or1q4JYTsO84utdHfefyhyL3vzzUi+2hbzJea
a/74d8R+6dkwdwirTxX+7tyC6DtLY/PeOuON2QpJq94t+N1xXlaw2hmZnja7
SM/CWX8jN/qeM+SSzzNtJ7bg87MNpRYnnaH1yaTzqmgAFH7yMpe5OINKTV3o
uSkAqZWPW3Z8cMK9HmluZXoApi+PL+br3gz3i4Z66ZsCobkiQujwYkfcPnP0
Tq1BIH70SX34JuCI2Se/rBA0DcSxt7IbmVMOKDyQKLLfNhAHy88u1vriAMHw
ik/x/oEo7HFOTr/hgAfahnsC0gLxfXjuphAjByypw1O9jkC055wsTtxmj6ia
IzrbvweCr1+cd0u4PWrKP98q6QtE1lKVzc4se7ALd2dqjgVih7Gbn5+lPV6c
ooNXCwWh/jS/gNISe8ST0i7UCoKb4VjArsd2+DBmYN93MAjnoyLZv8TtYPPC
dX99WhAe8xoEbRWwQ2V2dGnh8SC0JbqsmM1jh+uGl5ZvOxuEwQzFuKuttog/
PHuY704Qfu+Zsd3yqC0kZeqOyTQH4fWx9OdMXlukDH2rmdkWhFcLdp/d8MsG
PNXTE9++BMFpweBi0w4bdAep+eX/CEKnoWdCGW2DksLjmhv/BaFu9nTs2l3k
/G/m3uiwMhjP9gUkaMy0wQsJDr+WcjA4qWG8ir+sof/jsK6kWjBuhwwJG3Ra
Y+WRstxPG4Php+qw5E2NNUZbZLeGWQejTvqGeHqqNU6Gf1+YFBMMx2+ee7cT
v8IPHkbwtmD4jHx8eHIB8SPikglWCcFY9TZu0ds51vC/z+gSTw6G2ozXR+4P
WGHdjILic2eCsbs/Wl7psRXenohxKa0k8R1tUn/uZ4XHPlFas58F40+4qL2O
qxWuKoUtdKwLRvRie+9mKysk0H5v+94Hgynrevm4FvFnfQ62sv3BeNR0I11M
yAri921Uw4eDUfp1uLpthhX+JjKEH4wFY/6/2Lx3Y0y8WWz00nFmCBZ9flxu
0ckkdVY3P7A4BBJnZ1/TL2ciQGTNysalIZDpO3wopJgJ+xZFvuVyIbjSm/mo
8iYTKyNlqx6ohODt/Qqv8WwmGrJEDQYMQ9DsZ5Yev5OJB1vmSuuYh6D72JVh
wVgm8tTm/D1gFYK8wQzNZxFMxNdMP1juEoIPHV6pzykmFIb7tZzCQnDD/6Zp
jxkTImU9Cy9Gh8Ck11avA0z8OfBtZCA2BMHlv5P4dZh4taytMDkxBG3OKsZt
a4l/724++i4pBAd41r86rMTEpbuNUXIpIWg9pvYxcAXxs5a1qo8yQuCjffXm
VSkmfBc8ExbIDsHeEwlJwov/99dVfU4XQhBtOCV0nvh9ua0Prw/eIPFMOFna
EJ8ojPsHde+QfD0PFQuZzcS44N2gg8UhyDLOvnF3JhN156+vlK8IwfsF0bEN
kwyUhF7mi6oJgdBKleJL4wxc1LrY+ehlCDZpr+3K/U186oycKoHXIdBVFhRu
HGaAW3v6onNTCNo1utXUfxLfeupk4qUPITAvT3d51M+Ate9R6ufnEARu9U3a
+oOBDWtSDfS6QiAr51Xp2cOA3Hiy9KEfIfC4tXge+zsDQlX7/jb9DMGk5BNO
0TcGxlJ3f5QfDcG1IM2hlZ0MdLjueBg1GYK4Sy8P13QwUCvPzSrjCSVxHDU7
8YWB4gHONsHZoZjXoqBw5DMDF0ojXV3mhsIy//HKB58YSNkXqp07LxTdYuvs
xAnH2gYuGloYii0PRi5ktjOQ8Eu56OuSUCw4I3bPjvCBUz8dm2RCIZ1qzaNO
+IhO0fAzhVAkL/yWtJFw5qdtRx+uDsXj/qfmIYTP79VXK1ANRdGs00ZVhK+u
mlV/XjMUZ+MLYk3I+26/fBp+fEMoZPPFvvYTLo1MEUrSC4Wu0q6kchJv5Xz7
G1yjUNyqCPApJet5cX8hI9Q8FMM7foR+IOt949Ha7WUVioorX6+tIPlo/Zdz
wM4+FBZvmxdlknx1XPJbaewcimetc25rkHz+MFd8st4jFAPdFPt3NwNT6Xdm
Sm0JhW3MG/9ffQzwrou9IBwSCqO5VqmqgwwIN28CT2Qoanvv1B8dYkBatnrn
N24oIoMfpDeMMrCyOnlp885QmJS4zcr/w8DaIOuHL/aQ91e277g1xQBuN43f
SgmFTgEjRHUWExabz5y6eDQUlXNevr5G9Gc/7qN1MiMULvL+K62JPn3Rw4k/
H4qU+tr4uUS/exsmB0zuhWJk0mxyizwTKTF0qnZpKF77ssdlFJk4IbFfRekx
yU/Zu4sz1jCRS4mEiD4LBXtNYYuONhM1P2W/tXwIxeqAjSWHrEm/nfi2t/Zz
KELzCgQSHZl4v+G6XPm3UATopxTluDHRvVuTyh0Mheh4Yr9tABOCYmYfImaF
Ib9+al9yIhPiRYLxLP4w8BYHOZQkMyHlVi+xWTgMO+ZfXiB6hAmVC67OGxeH
IeU+DNTPkX5UD309SzkM4wfDj5mReXTE/sjTTIcwbBoxCLky2wqrW7bHsF3C
UHDKPENknhUqqcDlVp5hODX6fWOWpBV+R+pv/7clDD4auRek11jBPa1PNWBb
GCpibMdbnKwg/9IiQ/N8GNTeMecLFljhkcM6Y+G8MBhNOA/fKrWCc6vMz65r
YQh5/kxs2xMrJPeMWmbdDYN/tvzDmDYr9M3J+8vzNAype7gMUVFrFJvM2PKq
PwwiczbIlnGtYVvbJ3Z1OAzaHctdUpKs0e3Y/DhxLAyZnBznnSesIeV3S2L9
jHAs76iyqL5tjd2JXrVnFoRj8SRb+muvNRiPSzWDdcJxd9HrPqstNmjTZs/k
PRiOgPULyuewbdF3H+7maeGI2p122Ge/Laa0RQsPHQ9HSHJDfWumLZZuyGeJ
5YQjYXTuYh3aFp4bumjpu+FI2XX3jw0/2a83uO/a2BaOVi8n468edmjZaDQV
oR6BAMr0hpqoPd7piI+2tEQgqKlZtee8A2aevCZc1R6B/ndbPXxvOkBtACvy
v0bAOV9ox7dSB6Scj9yc0B+B4lfjmwTeOsCIr65QbkYk0hp3SFTzkfPMqwOR
oYqRkG9y8BoOc0QK62/3VGwk4v51/tlvuBkXjUf6RQWjQLnaR82YdsJarr5e
0L0odLsZ9l3tcMMRYSqhszgKKgWyb/iH3DB8MbGcKo1C4t/bP/z/ueFeXbWh
2+MorHpgwBRb6o4N8kwzxrMoPOE1va/t5A6jVy62Kh+jINk3pn2pxh2bFaJZ
P2dFo0Ziw26tPA/iBy/t5zpG46BPLnMvk5wv3zdbdztFY/vnwY9tLl542S68
yNU1GmavOuNV/b0g3R93WdsrGpmzLyXe2eGFagGrp6MB0Xj4kwPdm16YZzzC
vzU+GnfZlcN2Qt64VmSSEn0hGjrWynXtFd5482jb5i+XonGqU9uoodYbU1UF
S+0vR6NvQEes6L037N5I3FS7EQ3RPWlhrv3eGB3oqxu8Fw2ZSkbPLAkfGCme
FI14Fo3wqg+vP4b4oDXr27GQwWiwpselBIivNJBOURMdjsauO3zh/PwUci9o
vLo7Eo264n9900IUIq7uEvj7JxrGm1NtXi+iMKNYcnc6LxteOvwRgkoUFF9b
h9+TZOOY10eRJ8TnpW4eEXRbyobMWHegBvF5w++zrv6VZkM2dYlVhguFR+3f
v5opsBGyryzdkKJg25fo3qLKRmSM8V+FaAqxc4rNp43ZcC+x2b34KIUPhzy/
XTRjw1A3Wa/nBPGpIrP2mluyYfqgaPQ28XGCC+0eH7Fhw7pFVFfuPIWzcr3r
5N3YYAjuVz9cQKFaT1rOIoKNNVJes6OeU1hdUV3eF8VG2PknTWdrKaSZhHod
5bChpEuvrqgnfopZktnKZWNJi6Ju9zsKP1wdRMP3svFbbML1PvFX4jFJU0cz
2fjWv+Kn4xjxZ/5i8QJn2HincN0z/w+FCcfssd1n2dAa2W43OUnhi2bhcORF
NvofH3+0g4eF27/auq3z2dgv4KwmTPxg7teggCcFbBwNOExJEr+Y+fbXV907
bHjLT45KCbOw+67AJ+ViNvTl3cx5xViw5ax/J0CzseDSA1EW8Z9GfrRDYiUb
W2YNCsouIX7bkdkwXs1G+Jlm23fEv0prsl5+f87GgHjXNTkZFgaGUyqevGVD
eestCwvifzs6FhvoNZF88b7ZVLqShaY3Fx/da2bjrg7tLUv8c1lhyf1LbWyY
nAlVf63EQgq782bidza2M2Y/erSWxOcbqfynh42lMkKj7f/fRzlMXI3qY+PA
3yybMXUWPDTm5foMsTFTZZGj4DoWbOTOLH//i41dGeKTvMTvG4mvPGczyoak
eUnpb8JKwzpZepNsmCUNcEqJz5XuqFlc9JforWBFWMoGFsTf2J9U4eFgxMkx
xmkjCxN3Ao9I8XGgXVZQ8HwTWd+FYeHjczhYPynZHqND1nd052FBQQ6OPhhd
/P/9xfPo40l/RDgoP2V7eZMe8dssad5oMQ52hJ0fLyN82/5aYvd88vw6IXtt
fVIfw3X/fBaR38/JL7hMOFO9fMd7CQ5eWhTMEzIg+VjOmLCR4sCtxi42kPBu
sXdxNcs4EDjb1f7/9z4xM6jferIcRFi8s+QBC0FDvewiOQ5yN50s1vv/+6Ev
W3+qrODAue2OAulK2L3michdxUH2sefHswibVBz+IaXEwc2i1FkPCGvfWRR8
XIWDXWcqOf/fLylduNAluJYDjeMGna2EpY+q+O9RJ/F0DWz+//sm8cT7X/5o
crC2pe7JW8Kzo418orXI+q73aVUQXt+mX7hsIwc95k8aLhD2t9The6HDgdke
0ZuxhI8XabvG6nPglahca0C4cvm6G3KGZHadOq76l6xvKFVt+pUxBzoGHxsL
CMtOqNhvN+OgYOm98s2E7QJW566y5MD/z9fBAZK/XW9WjL1lctBZZROwk3CB
vhxjtw0HW1OH5HkIt1+XPqtiT+I58HV1HKmH8GKpn82OJP5Zzts6SP109y42
3u/MQX7IiflGhEMH52eou3HgZMQ7cZLUO8tjXk+bBwcn5FeothM9jGsKpGux
ODhQPrGfSfSy6jxfR4cfB6v+qN2MInpyFpq5Pj2Ag0ANqdWHiN7udU60fg/l
QLBVZVUW0eNXu7E1JyI4+N6Sd/MI0a942a/diObg/vDWo9s1WYg+2bfydCwH
sn8/xKsSvZ+f0bPNdBsHj8eP7R8l/dEQ/q12aDv5+4VfxwpVWVA1a2czEjl4
oH9TWkCFhd7R+seThzn4dVT+hRLpP0m/WrGraRxkVCgGZCiwYFH/zH/zUQ5+
88jtHZVj4fKVCsGbGRxUaSXZnCD97Od619n7AgefjlVlmJF5cKz61jXBXA7e
3/XLc15E6qWWP1V8meQr4cFmjwWkPgJ5F0XzObgbZ3fFaB4LH0szBuhiDlRa
Z+UcnMPC3JXHDcNLOfCLTNU04GNh07H0E5KPyPNGXek9M1k4HZK8iV1B6j9j
8M7SaQrOUvFJ8rWkn9Q0NP/+olC/w0s66QsHRYZRm/LbKNS4h4+v6OQgrkuy
63Erhccbdr550sXBw5BrUk/fUygYyU7i6yP16BHTL3lNISXs48C+UQ62ayyQ
kH5CwcLTo3zv3BicWjRHafoamf+bQk/Li8Qg7/ynC2GXKWhLbOdUzYvB0KXZ
C15fpLCyMWvVrEXkeRvn2TvOUOC1ak3fIxsDLQ2zGR4pFGgdNypxfQwsV+kk
m4RRKJEM3rR8QwxUbqZsXRRE4dYYd0HFphhkXpL82u5HIedu5jMexOBembaf
oweFHcrNarsZMRj+uXbipSWFjVIuM3b5xKB4VLh11goKhRObL+44GIMy5yH1
69d8sMHU0nPwcAw8TBXLXpzzQXm63iLftBhMmJr++XjSB7UKKw+ZH4+BWPbh
V02JPuiyGYsWPxuD7Tg8udzNB0sunTa8epvE++n1ylV8Pkhktn9++z4GEaeG
V3Idyf6fHSijvHIrJJ883PKxzhPifnUFbxS3IljFtv53uScaV2vqxytvxYrj
e+7zFnrC5f6053O1rSh4xkmYleEJ7zcnswJ1tsLOXMIs2csT4fzVC3PttsKr
L5TnRa8HDsXICi3bvhVvOuK9hP65o9qqZVykYSv4hBuXFy10wy/ZgJfXI2Kh
8DeDZ3GcE4RqqiokomOhpyVirBXshJWhy0uSOLEoyfqk4+7hBNeij7m+3FhE
ns0qvm3ghEeWjglL9sSibsXDzCx+JySxoX7oZCzEtTw1uGc2Q6J6yangR7EI
DY/MFqhxhHowN/X941h05Uw6/SxxBEOkaa9pRSx41Z5/ab/hiB2uR6OW18SC
J8m14e1RR3zpm8NoqY9F7gvvKzLejri+8PeUxddYaOsemXQcd4BuYL2vomAc
imffanqt6YAjyTmqL4XiYPaMOadtpQO+XQufCBeNQ/W4RuOIpAPS+uYeu7sg
DlmN1woZPA74HG1RoS8Th8yK3EPH6uyxb0eFjNO6OCQ82Z5yPcQetUfvfkz0
jgMP9fXTvVt2kL2756oCKw6WphIZB3LtsLXRPuapXxyGDneuCTltB+nFP+cK
B8fhBM8OX5+9dojKVtHJ5MTh48WT24Rc7bDgSt7pguQ4HItLe7Cf1w4ej045
fygk8a7SvC/zzgb6DOZM+6I4rB+4sMSy2gZyzdM3a+7HIfXCp65jd23Q/WsL
X+GjOIyF3tZOPmaDWOV195Jr4vBhxkHpv/Y2OJbVIKbVGof9yumOSu+tEau4
r+zGxzh8buXuC3pmDbdi7eDln+LgFrDvz7NSa8i+yaGFOuPQ4yQnPZRtjZsC
4ZFf++Pge26l2Rd/azzjCtQdmcFFhu6qTy6TVsifXcadzctF0kLfwpoBK6Sf
iFLYMZsLg8fR/m4dxE/dfr89cC4XaUWnK3ufW+Hr9zwl/YVcXHg61FWeZYVp
Z6PkH4pczDAZ6TcztkJH529NljIXsXn/Fk1vsMIT9rVPTWu48NTr29qqaoWU
tHnalRpcnKi/sXyWlBWW1LR/y9TloqRUWXvRbybWr99ubGbHRfGhm7kOt5lo
3G6kxOfIxfrZCfw7rjDBrhQQq3Yiz7/9Ifsuh4nbtpnthh5c1BscpRelMaEU
UrRNL4CLRs4MYoOYeHZ7BzUVxCX7xIuZewOZCBwzNn8YysWemAtxnhTxz/ve
LNgYzcWAnsX+8w5MSJ8bvLVuBxcKvIwfERuZePStOONXAheJJwOVszWZ8FBJ
2FmYyIXV+3NqE8R/Z5YKMdUOcNEa0vPYgvh1bZ5G9cGDXKyTkGVtlGaiyeyM
REEKF6LDDyfcJZmY37i6S/kYF9V8OwzV5zFRuGSotvcEF4ZRKrxdc5mwY5Xc
vXaKi4717j0v5zCRNmCWuOosF7fbbQ2VeYjfXi8S1HWOi7bsOTW5Uwy83P7O
Ju8iF38Mlx61/cMAv4D/UvmrXKzuNJTc+IuBy7bKszquk3xWXeqM+8mAacZw
z/mbXOxcwzu/u5+Bzo+lDT63uahwC75+8AcDe+QT70vf5SLEdsvt/++nZEMs
ctqKuOhpWqjE+s5A+W3R/dklXGhEKCw99Y0B77GmUI+HZD16NYemvzIwpZfj
sOQxFy9FHm071cFA1r4tG1toLvSNHPpYXxjY+FJFNrOKizXPqW9enxloFhuZ
7VLDxRxpZuDh/++jXB/2L3zOBY8BT0xvOwMLz+1pbHzJxd5rE0L/f19175vl
w+OvuHjkDE09wg4qYhcdXnOhXOr7XY3wELs5WayRC5uHCaud/7+vKj0X2dDE
RWC57p98wqo8gc7pLVzonG9wWk/eV2emqmfzkYvxwj96g4TDUn/LC3/iYu2L
mbdbSXyCjY8Ea79wUbex8toYif/akn1Dhzq50Pp4WtGMrNeCxWy2/M5FqETc
6ppOBrquiJfz93LB7HlzNa6LgX0DLXlP+7ho+Hbnons3A/LrL6QkDXKxjZEr
HtnLQOX2II7pMBf3Z9X8utfHAFW51p33NxfBpY+hMsjANP8Yqsa4CP9Q8atx
iIGzto9X7Zkg+ruVNvvWCAO6GftFDP8SvXhHsR+MMdD60er3v38kv/z6amMT
DPwHvBUFjg==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$201546#1"]& ]}}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Coinc. per 6 min\"", TraditionalForm], None}, {
            FormBox["\"Measurement Angle\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           Thickness[0.006], FontSize -> 12], FrameTicks -> {{{{-100, 
              FormBox["\"-100\"", TraditionalForm], 0.024}, {0, 
              FormBox["\"0\"", TraditionalForm], 0.024}, {100, 
              FormBox["\"100\"", TraditionalForm], 0.024}, {200, 
              FormBox["\"200\"", TraditionalForm], 0.024}, {300, 
              FormBox["\"300\"", TraditionalForm], 0.024}}, {{-100, "", 
              0.024}, {0, "", 0.024}, {100, "", 0.024}, {200, "", 0.024}, {
             300, "", 0.024}}}, {{{-45, "", 0.024}, {-30, "", 0.012}, {-15, 
              "", 0.012}, {0, 
              FormBox[
               RowBox[{"\"0\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {15, "", 0.012}, {30, "", 0.012}, {45, "", 0.024}, {
             60, "", 0.012}, {75, "", 0.012}, {90, 
              FormBox[
               RowBox[{"\"90\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {105, "", 0.012}, {120, "", 0.012}, {135, "", 0.024}, {
             150, "", 0.012}, {165, "", 0.012}, {180, 
              FormBox[
               RowBox[{"\"180\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {195, "", 0.012}, {210, "", 0.012}, {225, "", 0.024}, {
             240, "", 0.012}, {255, "", 0.012}, {270, 
              FormBox[
               RowBox[{"\"270\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {285, "", 0.012}, {300, "", 0.012}, {315, "", 0.024}, {
             330, "", 0.012}, {345, "", 0.012}, {360, 
              FormBox[
               RowBox[{"\"360\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}, {{-45, "", 0.024}, {-30, "", 0.012}, {-15, "", 
              0.012}, {0, "", 0.024}, {15, "", 0.012}, {30, "", 0.012}, {
             45, "", 0.024}, {60, "", 0.012}, {75, "", 0.012}, {
             90, "", 0.024}, {105, "", 0.012}, {120, "", 0.012}, {
             135, "", 0.024}, {150, "", 0.012}, {165, "", 0.012}, {
             180, "", 0.024}, {195, "", 0.012}, {210, "", 0.012}, {
             225, "", 0.024}, {240, "", 0.012}, {255, "", 0.012}, {
             270, "", 0.024}, {285, "", 0.012}, {300, "", 0.012}, {
             315, "", 0.024}, {330, "", 0.012}, {345, "", 0.012}, {
             360, "", 0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 260, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Before Cyc: 1-1\"", TraditionalForm], 
         PlotRange -> {{-14.4, 374.4}, {-40., 240.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox["\"\"", TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
     TagBox[
      GridBox[{{
         StyleBox[
          TagBox[
           
           GridBox[{{"\"Basis\"", "\"Parameters\""}, {
             "\"HV\"", "\"v :  0.90 \[PlusMinus]0.03\""}, {
             "\"\[PlusMinus]45\[Degree]\"", 
              "\"v :  0.43 \[PlusMinus]0.05\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7], 3 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}, {
         StyleBox[
          TagBox[
           
           GridBox[{{"\"Basis\"", "\"Parameters\""}, {
             "\"HV\"", "\"v :  0.898 \[PlusMinus]0.015\""}, {
             "\"\"", "\"\[Theta] :  86.5 \[PlusMinus]0.9\""}, {
             "\"\[PlusMinus]45\[Degree]\"", 
              "\"v :  0.44 \[PlusMinus]0.04\""}, {
             "\"\"", "\"\[Theta] :  -53 \[PlusMinus]3\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7], 4 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
       "Column", 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{1}}}], 
      "Column"]}, "RowWithSeparators"], 
   TemplateBox[{"   ", "\"   \"", 
     TemplateBox[{
       GraphicsBox[{{{{{{Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{0., 27.25543735346197}, {0., 33.}}], 
               LineBox[{{0., 33.}, {0., 38.74456264653803}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{117., 201.30306154330094`}, {117., 216.}}], 
               LineBox[{{117., 216.}, {117., 230.69693845669906`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{135., 132.}, {135., 144.}}], 
               LineBox[{{135., 144.}, {135., 156.}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{162., 39.217670016874735`}, {162., 46.}}], 
               LineBox[{{162., 46.}, {162., 52.782329983125265`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{180., 16.41742430504416}, {180., 21.}}], 
               LineBox[{{180., 21.}, {180., 25.58257569495584}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{207., 59.75378874876468}, {207., 68.}}], 
               LineBox[{{207., 68.}, {207., 76.24621125123532}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{225., 120.51087470692394`}, {225., 132.}}], 
               LineBox[{{225., 132.}, {225., 143.48912529307606`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{252., 236.12549213361245`}, {252., 252.}}], 
               LineBox[{{252., 252.}, {252., 267.87450786638755`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{270., 287.53575080342705`}, {270., 305.}}], 
               LineBox[{{270., 305.}, {270., 322.46424919657295`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{27., 82.40833695337456}, {27., 92.}}], 
               LineBox[{{27., 92.}, {27., 101.59166304662544`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{297., 189.7171431429143}, {297., 204.}}], 
               LineBox[{{297., 204.}, {297., 218.2828568570857}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{315., 140.630683123147}, {315., 153.}}], 
               LineBox[{{315., 153.}, {315., 165.369316876853}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{342., 38.29179606750063}, {342., 45.}}], 
               LineBox[{{342., 45.}, {342., 51.70820393249937}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{360., 22.70849737787082}, {360., 28.}}], 
               LineBox[{{360., 28.}, {360., 33.29150262212918}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{45., 149.27207793864216`}, {45., 162.}}], 
               LineBox[{{45., 162.}, {45., 174.72792206135784`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{72., 250.6598653616318}, {72., 267.}}], 
               LineBox[{{72., 267.}, {72., 283.34013463836817`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{90., 252.59878053314327`}, {90., 269.}}], 
               LineBox[{{90., 269.}, {90., 285.40121946685673`}}]}}}, {{
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{0., 123.38104996137776`}, {0., 135.}}], 
               LineBox[{{0., 135.}, {0., 146.61895003862224`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{117., 194.54316770519904`}, {117., 209.}}], 
               LineBox[{{117., 209.}, {117., 223.45683229480096`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{135., 199.3712611616722}, {135., 214.}}], 
               LineBox[{{135., 214.}, {135., 228.6287388383278}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{162., 165.62091183974036`}, {162., 179.}}], 
               LineBox[{{162., 179.}, {162., 192.37908816025964`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{180., 110.}, {180., 121.}}], 
               LineBox[{{180., 121.}, {180., 132.}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{207., 60.69337613708193}, {207., 69.}}], 
               LineBox[{{207., 69.}, {207., 77.30662386291807}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{225., 63.51471862576143}, {225., 72.}}], 
               LineBox[{{225., 72.}, {225., 80.48528137423857}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{252., 106.18334617360803`}, {252., 117.}}], 
               LineBox[{{252., 117.}, {252., 127.81665382639197`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{270., 149.27207793864216`}, {270., 162.}}], 
               LineBox[{{270., 162.}, {270., 174.72792206135784`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{27., 79.5660188679434}, {27., 89.}}], 
               LineBox[{{27., 89.}, {27., 98.4339811320566}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{297., 208.06681547693194`}, {297., 223.}}], 
               LineBox[{{297., 223.}, {297., 237.93318452306806`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{315., 225.47582530373998`}, {315., 241.}}], 
               LineBox[{{315., 241.}, {315., 256.52417469626005`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{342., 200.33712170138483`}, {342., 215.}}], 
               LineBox[{{342., 215.}, {342., 229.66287829861517`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{360., 135.83447493940355`}, {360., 148.}}], 
               LineBox[{{360., 148.}, {360., 160.16552506059645`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{45., 57.87596159536404}, {45., 66.}}], 
               LineBox[{{45., 66.}, {45., 74.12403840463597}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{72., 93.80196097281443}, {72., 104.}}], 
               LineBox[{{72., 104.}, {72., 114.19803902718557`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{90., 172.36181830301413`}, {90., 186.}}], 
               LineBox[{{90., 186.}, {90., 199.63818169698587`}}]}}}}, {{{
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 38.74456264653803}, 
                  Offset[{3, 0}, {0., 38.74456264653803}]}, {{0., 
                  38.74456264653803}, 
                  Offset[{-3, 0}, {0., 38.74456264653803}]}, {{0., 
                  27.25543735346197}, 
                  Offset[{3, 0}, {0., 27.25543735346197}]}, {{0., 
                  27.25543735346197}, 
                  Offset[{-3, 0}, {0., 27.25543735346197}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 230.69693845669906`}, 
                  Offset[{3, 0}, {117., 230.69693845669906`}]}, {{117., 
                  230.69693845669906`}, 
                  Offset[{-3, 0}, {117., 230.69693845669906`}]}, {{117., 
                  201.30306154330094`}, 
                  Offset[{3, 0}, {117., 201.30306154330094`}]}, {{117., 
                  201.30306154330094`}, 
                  Offset[{-3, 0}, {117., 201.30306154330094`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 156.}, 
                  Offset[{3, 0}, {135., 156.}]}, {{135., 156.}, 
                  Offset[{-3, 0}, {135., 156.}]}, {{135., 132.}, 
                  Offset[{3, 0}, {135., 132.}]}, {{135., 132.}, 
                  Offset[{-3, 0}, {135., 132.}]}}], {{{1., 0.}, {0., 1.}}, {
                0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 52.782329983125265`}, 
                  Offset[{3, 0}, {162., 52.782329983125265`}]}, {{162., 
                  52.782329983125265`}, 
                  Offset[{-3, 0}, {162., 52.782329983125265`}]}, {{162., 
                  39.217670016874735`}, 
                  Offset[{3, 0}, {162., 39.217670016874735`}]}, {{162., 
                  39.217670016874735`}, 
                  Offset[{-3, 0}, {162., 39.217670016874735`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 25.58257569495584}, 
                  Offset[{3, 0}, {180., 25.58257569495584}]}, {{180., 
                  25.58257569495584}, 
                  Offset[{-3, 0}, {180., 25.58257569495584}]}, {{180., 
                  16.41742430504416}, 
                  Offset[{3, 0}, {180., 16.41742430504416}]}, {{180., 
                  16.41742430504416}, 
                  Offset[{-3, 0}, {180., 16.41742430504416}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 76.24621125123532}, 
                  Offset[{3, 0}, {207., 76.24621125123532}]}, {{207., 
                  76.24621125123532}, 
                  Offset[{-3, 0}, {207., 76.24621125123532}]}, {{207., 
                  59.75378874876468}, 
                  Offset[{3, 0}, {207., 59.75378874876468}]}, {{207., 
                  59.75378874876468}, 
                  Offset[{-3, 0}, {207., 59.75378874876468}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 143.48912529307606`}, 
                  Offset[{3, 0}, {225., 143.48912529307606`}]}, {{225., 
                  143.48912529307606`}, 
                  Offset[{-3, 0}, {225., 143.48912529307606`}]}, {{225., 
                  120.51087470692394`}, 
                  Offset[{3, 0}, {225., 120.51087470692394`}]}, {{225., 
                  120.51087470692394`}, 
                  Offset[{-3, 0}, {225., 120.51087470692394`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 267.87450786638755`}, 
                  Offset[{3, 0}, {252., 267.87450786638755`}]}, {{252., 
                  267.87450786638755`}, 
                  Offset[{-3, 0}, {252., 267.87450786638755`}]}, {{252., 
                  236.12549213361245`}, 
                  Offset[{3, 0}, {252., 236.12549213361245`}]}, {{252., 
                  236.12549213361245`}, 
                  Offset[{-3, 0}, {252., 236.12549213361245`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 322.46424919657295`}, 
                  Offset[{3, 0}, {270., 322.46424919657295`}]}, {{270., 
                  322.46424919657295`}, 
                  Offset[{-3, 0}, {270., 322.46424919657295`}]}, {{270., 
                  287.53575080342705`}, 
                  Offset[{3, 0}, {270., 287.53575080342705`}]}, {{270., 
                  287.53575080342705`}, 
                  Offset[{-3, 0}, {270., 287.53575080342705`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 101.59166304662544`}, 
                  Offset[{3, 0}, {27., 101.59166304662544`}]}, {{27., 
                  101.59166304662544`}, 
                  Offset[{-3, 0}, {27., 101.59166304662544`}]}, {{27., 
                  82.40833695337456}, 
                  Offset[{3, 0}, {27., 82.40833695337456}]}, {{27., 
                  82.40833695337456}, 
                  Offset[{-3, 0}, {27., 82.40833695337456}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 218.2828568570857}, 
                  Offset[{3, 0}, {297., 218.2828568570857}]}, {{297., 
                  218.2828568570857}, 
                  Offset[{-3, 0}, {297., 218.2828568570857}]}, {{297., 
                  189.7171431429143}, 
                  Offset[{3, 0}, {297., 189.7171431429143}]}, {{297., 
                  189.7171431429143}, 
                  Offset[{-3, 0}, {297., 189.7171431429143}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 165.369316876853}, 
                  Offset[{3, 0}, {315., 165.369316876853}]}, {{315., 
                  165.369316876853}, 
                  Offset[{-3, 0}, {315., 165.369316876853}]}, {{315., 
                  140.630683123147}, 
                  Offset[{3, 0}, {315., 140.630683123147}]}, {{315., 
                  140.630683123147}, 
                  Offset[{-3, 0}, {315., 140.630683123147}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 51.70820393249937}, 
                  Offset[{3, 0}, {342., 51.70820393249937}]}, {{342., 
                  51.70820393249937}, 
                  Offset[{-3, 0}, {342., 51.70820393249937}]}, {{342., 
                  38.29179606750063}, 
                  Offset[{3, 0}, {342., 38.29179606750063}]}, {{342., 
                  38.29179606750063}, 
                  Offset[{-3, 0}, {342., 38.29179606750063}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 33.29150262212918}, 
                  Offset[{3, 0}, {360., 33.29150262212918}]}, {{360., 
                  33.29150262212918}, 
                  Offset[{-3, 0}, {360., 33.29150262212918}]}, {{360., 
                  22.70849737787082}, 
                  Offset[{3, 0}, {360., 22.70849737787082}]}, {{360., 
                  22.70849737787082}, 
                  Offset[{-3, 0}, {360., 22.70849737787082}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 174.72792206135784`}, 
                  Offset[{3, 0}, {45., 174.72792206135784`}]}, {{45., 
                  174.72792206135784`}, 
                  Offset[{-3, 0}, {45., 174.72792206135784`}]}, {{45., 
                  149.27207793864216`}, 
                  Offset[{3, 0}, {45., 149.27207793864216`}]}, {{45., 
                  149.27207793864216`}, 
                  Offset[{-3, 0}, {45., 149.27207793864216`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 283.34013463836817`}, 
                  Offset[{3, 0}, {72., 283.34013463836817`}]}, {{72., 
                  283.34013463836817`}, 
                  Offset[{-3, 0}, {72., 283.34013463836817`}]}, {{72., 
                  250.6598653616318}, 
                  Offset[{3, 0}, {72., 250.6598653616318}]}, {{72., 
                  250.6598653616318}, 
                  Offset[{-3, 0}, {72., 250.6598653616318}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 285.40121946685673`}, 
                  Offset[{3, 0}, {90., 285.40121946685673`}]}, {{90., 
                  285.40121946685673`}, 
                  Offset[{-3, 0}, {90., 285.40121946685673`}]}, {{90., 
                  252.59878053314327`}, 
                  Offset[{3, 0}, {90., 252.59878053314327`}]}, {{90., 
                  252.59878053314327`}, 
                  Offset[{-3, 0}, {90., 252.59878053314327`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}}, {{Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 146.61895003862224`}, 
                  Offset[{3, 0}, {0., 146.61895003862224`}]}, {{0., 
                  146.61895003862224`}, 
                  Offset[{-3, 0}, {0., 146.61895003862224`}]}, {{0., 
                  123.38104996137776`}, 
                  Offset[{3, 0}, {0., 123.38104996137776`}]}, {{0., 
                  123.38104996137776`}, 
                  Offset[{-3, 0}, {0., 123.38104996137776`}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 223.45683229480096`}, 
                  Offset[{3, 0}, {117., 223.45683229480096`}]}, {{117., 
                  223.45683229480096`}, 
                  Offset[{-3, 0}, {117., 223.45683229480096`}]}, {{117., 
                  194.54316770519904`}, 
                  Offset[{3, 0}, {117., 194.54316770519904`}]}, {{117., 
                  194.54316770519904`}, 
                  Offset[{-3, 0}, {117., 194.54316770519904`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 228.6287388383278}, 
                  Offset[{3, 0}, {135., 228.6287388383278}]}, {{135., 
                  228.6287388383278}, 
                  Offset[{-3, 0}, {135., 228.6287388383278}]}, {{135., 
                  199.3712611616722}, 
                  Offset[{3, 0}, {135., 199.3712611616722}]}, {{135., 
                  199.3712611616722}, 
                  Offset[{-3, 0}, {135., 199.3712611616722}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 192.37908816025964`}, 
                  Offset[{3, 0}, {162., 192.37908816025964`}]}, {{162., 
                  192.37908816025964`}, 
                  Offset[{-3, 0}, {162., 192.37908816025964`}]}, {{162., 
                  165.62091183974036`}, 
                  Offset[{3, 0}, {162., 165.62091183974036`}]}, {{162., 
                  165.62091183974036`}, 
                  Offset[{-3, 0}, {162., 165.62091183974036`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 132.}, 
                  Offset[{3, 0}, {180., 132.}]}, {{180., 132.}, 
                  Offset[{-3, 0}, {180., 132.}]}, {{180., 110.}, 
                  Offset[{3, 0}, {180., 110.}]}, {{180., 110.}, 
                  Offset[{-3, 0}, {180., 110.}]}}], {{{1., 0.}, {0., 1.}}, {
                0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 77.30662386291807}, 
                  Offset[{3, 0}, {207., 77.30662386291807}]}, {{207., 
                  77.30662386291807}, 
                  Offset[{-3, 0}, {207., 77.30662386291807}]}, {{207., 
                  60.69337613708193}, 
                  Offset[{3, 0}, {207., 60.69337613708193}]}, {{207., 
                  60.69337613708193}, 
                  Offset[{-3, 0}, {207., 60.69337613708193}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 80.48528137423857}, 
                  Offset[{3, 0}, {225., 80.48528137423857}]}, {{225., 
                  80.48528137423857}, 
                  Offset[{-3, 0}, {225., 80.48528137423857}]}, {{225., 
                  63.51471862576143}, 
                  Offset[{3, 0}, {225., 63.51471862576143}]}, {{225., 
                  63.51471862576143}, 
                  Offset[{-3, 0}, {225., 63.51471862576143}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 127.81665382639197`}, 
                  Offset[{3, 0}, {252., 127.81665382639197`}]}, {{252., 
                  127.81665382639197`}, 
                  Offset[{-3, 0}, {252., 127.81665382639197`}]}, {{252., 
                  106.18334617360803`}, 
                  Offset[{3, 0}, {252., 106.18334617360803`}]}, {{252., 
                  106.18334617360803`}, 
                  Offset[{-3, 0}, {252., 106.18334617360803`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 174.72792206135784`}, 
                  Offset[{3, 0}, {270., 174.72792206135784`}]}, {{270., 
                  174.72792206135784`}, 
                  Offset[{-3, 0}, {270., 174.72792206135784`}]}, {{270., 
                  149.27207793864216`}, 
                  Offset[{3, 0}, {270., 149.27207793864216`}]}, {{270., 
                  149.27207793864216`}, 
                  Offset[{-3, 0}, {270., 149.27207793864216`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 98.4339811320566}, 
                  Offset[{3, 0}, {27., 98.4339811320566}]}, {{27., 
                  98.4339811320566}, 
                  Offset[{-3, 0}, {27., 98.4339811320566}]}, {{27., 
                  79.5660188679434}, 
                  Offset[{3, 0}, {27., 79.5660188679434}]}, {{27., 
                  79.5660188679434}, 
                  Offset[{-3, 0}, {27., 79.5660188679434}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 237.93318452306806`}, 
                  Offset[{3, 0}, {297., 237.93318452306806`}]}, {{297., 
                  237.93318452306806`}, 
                  Offset[{-3, 0}, {297., 237.93318452306806`}]}, {{297., 
                  208.06681547693194`}, 
                  Offset[{3, 0}, {297., 208.06681547693194`}]}, {{297., 
                  208.06681547693194`}, 
                  Offset[{-3, 0}, {297., 208.06681547693194`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 256.52417469626005`}, 
                  Offset[{3, 0}, {315., 256.52417469626005`}]}, {{315., 
                  256.52417469626005`}, 
                  Offset[{-3, 0}, {315., 256.52417469626005`}]}, {{315., 
                  225.47582530373998`}, 
                  Offset[{3, 0}, {315., 225.47582530373998`}]}, {{315., 
                  225.47582530373998`}, 
                  Offset[{-3, 0}, {315., 225.47582530373998`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 229.66287829861517`}, 
                  Offset[{3, 0}, {342., 229.66287829861517`}]}, {{342., 
                  229.66287829861517`}, 
                  Offset[{-3, 0}, {342., 229.66287829861517`}]}, {{342., 
                  200.33712170138483`}, 
                  Offset[{3, 0}, {342., 200.33712170138483`}]}, {{342., 
                  200.33712170138483`}, 
                  Offset[{-3, 0}, {342., 200.33712170138483`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 160.16552506059645`}, 
                  Offset[{3, 0}, {360., 160.16552506059645`}]}, {{360., 
                  160.16552506059645`}, 
                  Offset[{-3, 0}, {360., 160.16552506059645`}]}, {{360., 
                  135.83447493940355`}, 
                  Offset[{3, 0}, {360., 135.83447493940355`}]}, {{360., 
                  135.83447493940355`}, 
                  Offset[{-3, 0}, {360., 135.83447493940355`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 74.12403840463597}, 
                  Offset[{3, 0}, {45., 74.12403840463597}]}, {{45., 
                  74.12403840463597}, 
                  Offset[{-3, 0}, {45., 74.12403840463597}]}, {{45., 
                  57.87596159536404}, 
                  Offset[{3, 0}, {45., 57.87596159536404}]}, {{45., 
                  57.87596159536404}, 
                  Offset[{-3, 0}, {45., 57.87596159536404}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 114.19803902718557`}, 
                  Offset[{3, 0}, {72., 114.19803902718557`}]}, {{72., 
                  114.19803902718557`}, 
                  Offset[{-3, 0}, {72., 114.19803902718557`}]}, {{72., 
                  93.80196097281443}, 
                  Offset[{3, 0}, {72., 93.80196097281443}]}, {{72., 
                  93.80196097281443}, 
                  Offset[{-3, 0}, {72., 93.80196097281443}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 199.63818169698587`}, 
                  Offset[{3, 0}, {90., 199.63818169698587`}]}, {{90., 
                  199.63818169698587`}, 
                  Offset[{-3, 0}, {90., 199.63818169698587`}]}, {{90., 
                  172.36181830301413`}, 
                  Offset[{3, 0}, {90., 172.36181830301413`}]}, {{90., 
                  172.36181830301413`}, 
                  Offset[{-3, 0}, {90., 172.36181830301413`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}}}}, {{{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 33.}}, {{117., 
              216.}}, {{135., 144.}}, {{162., 46.}}, {{180., 21.}}, {{207., 
              68.}}, {{225., 132.}}, {{252., 252.}}, {{270., 305.}}, {{27., 
              92.}}, {{297., 204.}}, {{315., 153.}}, {{342., 45.}}, {{360., 
              28.}}, {{45., 162.}}, {{72., 267.}}, {{90., 269.}}}]}, {
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 135.}}, {{117., 
              209.}}, {{135., 214.}}, {{162., 179.}}, {{180., 121.}}, {{207., 
              69.}}, {{225., 72.}}, {{252., 117.}}, {{270., 162.}}, {{27., 
              89.}}, {{297., 223.}}, {{315., 241.}}, {{342., 215.}}, {{360., 
              148.}}, {{45., 66.}}, {{72., 104.}}, {{90., 
              186.}}}]}}}, {{}, {}}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag$202844#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1:eJwVWnlcTO8brahv0k6UVChJaJO0yWnflO6079OimplbqRk1LSJLQipaEKEo
IVGRSnJtISlL0iJClCQkKpLf/f01n/O5M+993+c5z/Oc835mcXA0Y5OQgIDA
6hkCAv//DOOufvHvnxeV98XFq8E4AKssP/pr//Kijr2fe/KYWwDGZI9+DBj2
okKlUo7uiQrAzqrp8RudXlTXc+7HXcUBOPX94YLkSi+qeco2XWp2ILqjmcyJ
YC+q4rb1a6PXgXAmD3z+ds+Tunc0QevOPSbWbhoQfLffg1ocEHeIlxSMSkWV
GyPvXKng1/eahBaHwcUucfO/TlcqJvHPUQGtMIzwXqhKt7lShcX90ePGYdBs
3b9P97orZT4wj2pzC0Px9glPXo4rJZH50VgjPQy5H56OTlq6Uvq+r6RDvoQh
/tIuDeESBiUWpq/mWRmOea/e9MgdY1DvpH4vsLkRjiuiJlnqBxnU1YaVc1c8
DMe3oO8/bbcyqBBxZlVHXzgi5gbc2efOoF40/lpcJRUBn4S1AdIiDOqP1mnt
ME4E1lkO5SiGE5Tl/OkIzQUs1JeNawb4E1R61dzViWosGEgK3z7lSlBj3JPN
N7RY0OlS+bYUBFV9z2jeIksWlkS7b9BRIKgeqkBmI4cFkWPUTOtHLtSW4RVx
NnUsPBnN3xKl7UKNc1PalB3Z2OB1RrxyqQuV/G+W4z1XNh7eqDz9Q9GFal6m
FOLvx8bt9JanfFEXKskkaHlwJBusdTP9RO5spGZ9+urZkMmGXl53i/ayjZRd
8Nt3Ja1s3LPaU7HjqxN1Knkgd9CCg/5V83SDup2oPovlrLUOHAjNL6lef8+J
mkXdNuASHJh9ul07VeBEqWRpbasM5KD2wPTtOBsnSupN8DzbJA7KO7a8ZBdu
oNinlXkPKzhovjnTxz59A/VK+mhn3xUOPpXlvFrG3UDtXbDBub+eA/Wkyrf9
dhuoh7laRpeaODil8uVzwJgjJXNB55xrLwe5EaECro6OlIheZWiLCIkq4scO
XQNH6tv2VQtOzibx1HiHsPRiR8rfc6GavzQJSYlTYo9/OVDFewzEjymQSK/s
mWtb7EDd09k+X2kFidIC9uGlBxyoVcUJ3vbaJO7tnFSYyXegzgrbFTNXkxDy
mK9yy8mBWtYypuZiQiLpN2O5yaQ9Vfdsn4CeA4mC928vKPTbU+tsP+296kSi
tmWz1kSrPRVwfeClKkFi7ETm6qtn7KlkZ7kzlCcJ2XSlmpwse+r0tr45X31I
6MaUG8Ym2lOzxnauEA0gEWXZvE7bxZ5Kc9u39ncIiYyV3pSEiT3VPDSl/DyM
xAW5QYvhpfZUm354bj6LxOCAsN25P3ZUsaGlTG8UieAMc4bqWTvqdoxBTTif
xCyZiy/YOXZU9xBjLDqRxOU8ee+qbXaUkW164KZkEtMnvgaae9lRiyv2VMzf
TqJE1fd9upUdFSLisr89lcSGsqawJzp2VNHQqj0pO+nzVhZGBs6yo36EXm47
mkbC3GDW99KftpRORsy82en0fup5vJG3ttRXMnUzay+JrPV942tabanTo7Y9
V/aRMLjrmLS13pY6O+zi9mU/iV67a9N3S22pLtkNXbIHSOx6vGSHeI4tNTVL
ImJpJolnHZPpxzi2lOa1dwUy2SQSfDeJv/e0pYSTGCafabyo70mWppUtFaRn
9rryIIn7oaZzYnVsKQHfVTs2HaLj+elsft1CW8qB92ipSA4Juag5CwRn2VIt
goP3c2jcMJpSaPfThko6EBcumUsiJH5oUfZbG+rSucwZcTQWm3I/8/KxDfV2
lHOsmcaV228tU6m3oeRkorTE80h4Ca+6EFZqQ8nXyTcY0/jf3iNaFYdsKP+L
c6w8aFwqObPqZ4oNVdGo2RRAY6ec6DXrODbUgRYnCzcaj83vqd3laUM538uu
NaDx8eM2pi2WNtRkyYrlIjS2XFx1c46ODdWZkJh7m37/UImSpe9CG6rN++9v
Do0Pae5tKha1oTZxvPyFaGx0acx+aMyaynrj2rCbPl/fauZj3bfWlO73Hvlf
dDz21D5ySXhsTYW9F+C50lhr3dp2qs6a4v371VpIx+/FrWJP0VJrateheSte
0PFNtpHs2XjImlr4uWfvZBYJ1UcJAYdTrCkHj4FhMRo3b/zw9jWbft/Cv+6z
6HzFtLtsUve0plJThO+PZZCQ924YjLS0powrxS0e0/m+2buMvKptTUV0Wzw8
RPMhLDjn65SiNaUnPhVgTfPlCof9a/+YFVXv/udmDM0v328vEp73WVH/RAqz
P++i63GL+d8Fj62oe5/4iQyajy4p8jPPl1hRqVcXlQ5sIzEutGvP94NWlEV7
2IhcCokTe76KGaVYUR07e/x0ab4PZzfJPPCwoqYMW+u16frIkdPLk7K0orQ3
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
79VyXbHAKPe1zWgkKnqHIjWyXeFj1LrO7b8o/P30V/dxsyu6jCymonSj8E/M
NUza1g2DddJuVQZRePRjw4V1nm6YMHpz4adJFIb2Pl6UFe4GeeNk32SbKNjb
zpM+ke4GL+Oa+r2+UTA5WyMT0eKGl8aaCWd2R6HnatiaDB93vDCR/dXVFQWx
VaauQtkeEMo7J3HndRTKliqcFT/tAZ0RLC1/H4WJhUc09Wo8kHEq2i3lSxRY
ajY6ra88YCH8uGqJYDS2BXYa2azwxOXWPdEcjWiwer0b5R57IiPo7+BUXDS2
bj3EV1P1RrHl2Bcpsc1IfCISMi3lBx6pu7FOfDNiWElfLmr6wSYv6nKw1GbI
O27Xi7H2w+ePg7FX527GkdXb/+km+UF/X++4j8pmzNv3ZUn+gB/uPWkSLNXf
jIWRr39W3/HHoP9ROdPAzTjxss3q6J5AaPPN1kVc2QyT/hMGi44Egf/k9G6+
awwkyyo608Q3ofhlp9Ogewwqo9wKGxU24dFriXleXjHIboo5+119E5S/xJeu
9Y9BioWbpr35JtydteH+r7AYPLNLwfUtmyBtOSa6JTEGB+1ck/N7N+HcVauM
mKIY3JwxsyO1LAzPGhLc3p6OAefetqoftH6dulOxkCiNwQXOh27/W2FweSZ/
UedCDAyVd1cv6A7Dr5Hhx1+vxIC89HGG/uxwWGjkSUU9iMHsRd7EU044ugs+
HGJ/jYGwpm60onoE1itn6EiN0r+35hgz9SJwpkivtXosBr3FhjVHzCIQVbZt
1t/JGCQ4qrn3e0RAsEZhe9bMWGg89XJ6nxZBfzpFXlGIhc+Dbg6rPwJx/9XY
TlvGYmfEyL6PuSz07PP7UGwTi5b0W3+iT7IAyRk7be1jobf3kuDQORbE5Fwa
s51joRNxMeZSIwuFS4b0Vb1jUeboxdk6wMLddcpL7KJisXh42XZZAzZkeWlT
B4/EYvsWnncmrXtEQmUSZx2LhXUqVzeG9iu/XY+Pby+MRai3h58VrXverq4a
jS6OxfSr5OjrH2hd96N30Kk8FtevPB0dmsHBRu6aF7OoWBzPXythSesYixCK
kXo7FqwYp0A1Kw4MXB2fTNyNhcCFPrWfDhworw56NPAwFinz+zpCveg5PJpx
695z+vfpz7hJsRxkxPZfTB2Ixenp8o+JpznYHhy9YvJTLNwnX5Q4naP9GON3
2ebhWLiJJ8pLXeLAV0/6TOD3WJBVRcP+9bQOGjUpWPeH3t+a8+qaT+j3vWua
f/VvLPK7BD1jXnAg+4zIWynARb2RxEBpNwe/K8OzFYW5UBJvn37Vz8HDmJy0
SUkuBkoOCPAmOGgIUp4ZI8PF/cXCi1f95eAycS51cA4Xfq333NsF6TmiezP5
pTwXid++dQ6L0XP0+1Ds1SVcfByY5WlNz2mRGIvAGAMu1O2frThgQmJNr1mV
khEXAvt0GqLXkwi1NxFuNuFCVSzooik9V28v1r+wxJyL3QfSsvNoP77t2dLx
545c3PmTz7fwIlFhtsRhuzMX2ec+rYz3JfH6vHLhSoKLmwJ5M/IDSJjunG+5
24MLtonb1MFQEhOrZ2UZBHHx6W596A56Ti47JfzuXQgXJU/vcP+Lpf29uNCa
rDAuzuR3x8bxSFzp/909wOGCNevyCll6jr53GV+VG8XFRt3lPWZJJGRv/NiO
GC6KFi4Nc99KIiZvWP1oHBf8ZsOp9akkTgl+SrBO4EK2O296Dj1nn0R+aPme
xEWlj8Cjp7tI/Ot6q3IihYvUM/n+CWkktGxexzqkcjFytKxKLJ2ea1Xd937t
5KLv0rWm3XtJZCi/lD+dxsXWn3H5Q/tIDP1qa/yzn4vwpGa/mAMkFEJaZMoy
uYhQuuGUk0nCru1BqNtBLmbcXPj1RBaJeJN71wRyubTfzDXLzSZRevaW2MV8
LuqKhIy5//9/1JxGf++jNJ6/5Y3JIVpnbK+/LHycCz2BVatGaKw/XDOj6gQX
7V+OL96XQ+sCr2qPgCIuyi1Z16X+/3+tu5fOiZ3hYqVhxGQKjW/rlE/VlHJx
/WVR90safz9etjHkHBdDIi4BC/JILJpVUixVzoXartc7bWi8cUvRz+sVXEwO
Djn8/z4u5W2hXUQlF//OW1X70viiU8GxuVe4MFn4pcGKxq/q8keoGi6UOfMj
5tN4tnqOeWQdFzLFGlef//9+8FBWrkIDF4dLr51J+P/92/T+gXuNXHqOHlg7
i8ZH2enGsbe4yPlyOmoHfZ4HHbsOKN/l4oC+huMH+rwTFql9zU1ceDjxW3Vp
vOzS1tXxD7lIs1P7HU7Hy0MxMU21hYuoGSNte+h47t4T19XWysUKtYfEQTre
V37Erkx+yoW1XE/qLjof7wOjt2m0c/FZICk4iM6XbAvnWXsHF9Qj3V/LaN1l
bhixNLWLCy2p+vWddH43nwnlr3rFhfscAYtYOv9tyf7KaW+5sKCitobQfGny
iZxY2s+FdpNKxW2aT42GW5/d+0jXj8epWHGabxVjx9OEh+n4Ko3dC9xG5/tZ
ObNkhItDG8r9WDRfCy83GFt/5+LVh7/5/jSfM8hXI7t+0fHz0BEViad1pMPw
A7VJOn82m+zq6XpI0pgqvvuHi2qqx8ybrhd2v6LnTEEedD6sDPGMpPnm53tz
52we+m3rVN2DScCYc1RVkof3HnMuBQaSWCufxL0jzUPG7ixld1rnqrcXLJsx
j4fvzmZ3BTxovm3oztqxiAfnjfuHfWkdPbV8iLVElYdXuq3ejVYkfvz32/L2
Uh62N7L6Z5uTeHdHYUJwBQ8bjAtjImidTpl4M1PX0O8/E+iusZxErQLLeLEh
D8WLD+f1q5G4NM6fe8uYhxyJvLUZi0icqD7yQAA87G4KbyqkfUXyik6d7Q48
XOCfU3k0k9atip6C2wJ50OPmP/OkfZPOZFiPcjAPimtzv7bS/VPjZdzVxlAe
NK5CXo/ur/I5+axpFg/m0eI3Gu5y8Eus4+lWHg/Wcw9d7i+nfe9vt+LkvTxM
ZxMX9iVw6Dlp7/d1Pw/Cg/7u67gc3MxaNy84k4cVE+k+b0gOWtTU99nm8DAQ
Nl7yPZCDj87jMbKFPCzWUMl3seZgwemj5mWXebB4nDQgJMFBquPrvucvebia
2/fycDYbovnPCmy6edjmIGaxMZ2NzL4mt7pXPPwl9zSOb2OjYMulByfe8sBy
mFy5MJqNKye3X2Z95iH2usGxKxvYGPyxZPu/aR4WbsoY1RVmw+V4uMoK9S3I
TU85/4LDgmzI44pnGlsgfiWs9heThfblq80SV2zBScL5tqgHC57Xpv0e6mzB
fp6bpgBYCHiWVxBusgWpwZ9+mM1hIVL0rtwZly2If+OlKHstAvt4i8SVkrZA
Prst5vZYOO5u6JqQfLIFB+Qm51g5h+HHorBH56PiIBGpt2Tdl2CYhrcFa4jF
Q3BH26eGJYHITj+h9Ug8HorvRYr2iwTiw7nI35FS8ajOTd0WPhSAzOHZh6rn
xqP2g0KpbVUA+mLsbpmpxKPsj7PZZYsA7Eq+peKuHw8tXwsvzzB/tBysfpUa
EI+/PxfOPV7vi0XVO8rUguJxW0Fw085TvtjSTvDuh8QjVOW+8bY0X9qvfJst
wYpH/SIPj6sMX2w+vtLkCDce8+KVIhcP+2Du2ZKjFenxuB6zLnm5qg98Gw57
9FTFwyrVUzD2tBfMHByFiKvxqHCx2fL6gBeWdE5fbLoWj62n9uQE873ofGwS
rmqIx44ygZgqJy/ErdC/kt4UjxlBr+dsmfTEoYInMgbd8ah5bbmjzN0TD/iz
HmcL8nHq6EDss8UeKBe5wReZycfW3Xla26Q8kJW7WS1ZhI9Vyjb2dn/d4XH5
ZVL4bD7aWeNqOl3ueD9Qomkmx0dLIqXpc8gd0x4W6Z81+DBV0NqkL+aONWuS
LG1c+MhUuFnVK+2G9iQLTWFXPqhzM8RKBdwQe3uWzF13PnI+vTiU/80Vlzce
eW3uy0f9kY62b09cocm+mrAujI+DEz6CmTmuUD759ZJ+Mh8Xj8p77lvkioYP
Nfk/Uvhgd5PnPsq6wndlytaqVD7IW6F+kcKuOFIn7qizh4/SqSPBv4cYmNO+
/OOKQ3xM7jviPK+WAdFZoQtVy/i4Mkw4RfswULpxxYx35/lwt4o7u20jA9b5
o59OXeQjUZZa1WDFwA7V1GvK1XwMChxTrdem/da6E4wFjXw4DyYFtvzHQMGu
TUZdFB8igZceYJqA0aOVi47c4aO5ZZ7SuzECcV7Xv8g95ENll/GbC+8IfI/t
TJdp5+MTr2p+AEX7/7qT0U86+Nj9xmqlaS0BLYFwj6wuPgLPVz2xvUyAPPBT
VeINHylte+YMniLw8azsTdEhPmSiWLHOuwjsGukquT/Mh/HA3N8FW2n/vaYo
I+0rH54OScfk4gkwb2v7zPzJx/bJ4Ig8NoFp0XHcGafj89K+soD2z4UbG5ft
+M3H85Qa59YAAqb5uyXN//LxrsDRWcebQPerDT///eMj4a7ZDcqVwP8AFtsj
aw==
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$202844#1"]& ]}}, {}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
k/PzCbh3/xBfVpg//gM7Lt1Q
               "]]}, Annotation[#, "Charting`Private`Tag$202897#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
+Z9u260mwKfRxlo/RL//l4FitwKB7rMlzq9/GyKfKdJ7RI5AKf8R0zhhI9wQ
vjPoIkPAvXezwittI1gcK/wdLkVA00x0yQFLI6i+MhaulCCwoHz0j7KnEZie
YfGrlxN4K/1otDXMCNcuyTvfFSdw8+i5rtgEIxi94TsTtpRA4reox0rZRqh4
nrCJECNAe6mKFyVGCPhCGTiJEtj4ZF1hNGWENPPUykMiBAS0eE+tajfCywOx
5zqWEOjLe7O/5ZMRFJ+/nLCh8e0Fd0jubyOcmZd864swgWTOSVcFYWM4xTA/
VdDY+22QeZOCMSJWVScV0Fjbwkg7UtsYUzH15/7/fPEt6VVylsa4nMJQ/P/v
B2SmRBo9jOE1Obv8/++/e+z5P06YMe50C8a+onHqZPHnlQnGiJk9ujOejs/P
K77ncZYxwopXpzrQ8es2uj0NKzFGS53zFhs6vyWbNt1ZQRlD6onlzlA6/4//
CRU9ajNGyYvexgqan2qBodOhn4xxKe1SiQLN3+k9tQclfxsjfvfvrxU0vwF9
OSH1QiaQYvWlhdL8S6znWbB0lQlYV1j5e6UJPNm7K99viwkk8yWqS2m99jY0
6lbsNMHKk3P7lsoTWCem3s7nZwIlnjfzLyrSenulBzvuNYFH08/1fkoEjpf8
4r+UaoK/G4x22KwlMGbyaIt5pQk2NCs5lagRyD29ri2rxQTPXxVvkqHrz/rd
CXL4vQlUNqh8rdam65Hr+l+SkCnid9R0HtQnsPvqF95mX1P4K+odkLclIPfT
/tzKvaZIisszm7En8NK4Sick1RRuhfPz/7jQ9fT2MEu40hTuHYrdx/0ITC6R
ekEImSFqk/qymhgCFzwOBBUomoFxZLvUzzgCDlc+zP2+2QwHAiqsvBJp/Y1u
bErzNcNrTvWfsnR6HkQan+24awb73o0z/uUElOsvb1zTYgapLMWGOVUEuoSF
W6Lem+HKBl/jJ7W0Xpe7eCSFzHFPLEO4k54/sz0h/m6+5pjomPnIM0n3q3L7
v6tccyiOG5tNzxLw2LMlezbFHAsccx9K8DNwX4i3Ke+uOQ7LazzqlWDgoEG2
Rp+gBWwvsU/6gwH11L+N6ooW6H+vlnrTkoH+bl+/uM0WKFJ4N7vOgQHDiA2Z
Cr4WWJk09jyLxQDvpfpZv7sWkNRsKgnOZCBx8fjjYR9LuM6REvn4k4HYT+PZ
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
               "]]}, 
             Annotation[#, "Charting`Private`Tag$202897#1"]& ]}}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Coinc. per 10 min\"", TraditionalForm], None}, {
            FormBox["\"Measurement Angle\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           Thickness[0.006], FontSize -> 12], FrameTicks -> {{{{-180, 
              FormBox["\"-180\"", TraditionalForm], 0.024}, {0, 
              FormBox["\"0\"", TraditionalForm], 0.024}, {180, 
              FormBox["\"180\"", TraditionalForm], 0.024}, {360, 
              FormBox["\"360\"", TraditionalForm], 0.024}, {540, 
              FormBox["\"540\"", TraditionalForm], 0.024}}, {{-180, "", 
              0.024}, {0, "", 0.024}, {180, "", 0.024}, {360, "", 0.024}, {
             540, "", 0.024}}}, {{{-45, "", 0.024}, {-30, "", 0.012}, {-15, 
              "", 0.012}, {0, 
              FormBox[
               RowBox[{"\"0\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {15, "", 0.012}, {30, "", 0.012}, {45, "", 0.024}, {
             60, "", 0.012}, {75, "", 0.012}, {90, 
              FormBox[
               RowBox[{"\"90\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {105, "", 0.012}, {120, "", 0.012}, {135, "", 0.024}, {
             150, "", 0.012}, {165, "", 0.012}, {180, 
              FormBox[
               RowBox[{"\"180\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {195, "", 0.012}, {210, "", 0.012}, {225, "", 0.024}, {
             240, "", 0.012}, {255, "", 0.012}, {270, 
              FormBox[
               RowBox[{"\"270\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {285, "", 0.012}, {300, "", 0.012}, {315, "", 0.024}, {
             330, "", 0.012}, {345, "", 0.012}, {360, 
              FormBox[
               RowBox[{"\"360\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}, {{-45, "", 0.024}, {-30, "", 0.012}, {-15, "", 
              0.012}, {0, "", 0.024}, {15, "", 0.012}, {30, "", 0.012}, {
             45, "", 0.024}, {60, "", 0.012}, {75, "", 0.012}, {
             90, "", 0.024}, {105, "", 0.012}, {120, "", 0.012}, {
             135, "", 0.024}, {150, "", 0.012}, {165, "", 0.012}, {
             180, "", 0.024}, {195, "", 0.012}, {210, "", 0.012}, {
             225, "", 0.024}, {240, "", 0.012}, {255, "", 0.012}, {
             270, "", 0.024}, {285, "", 0.012}, {300, "", 0.012}, {
             315, "", 0.024}, {330, "", 0.012}, {345, "", 0.012}, {
             360, "", 0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 260, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Before Cyc: 2-2\"", TraditionalForm], 
         PlotRange -> {{-14.4, 374.4}, {-72., 432.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox["\"\"", TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
     TagBox[
      GridBox[{{
         StyleBox[
          TagBox[
           
           GridBox[{{"\"Basis\"", "\"Parameters\""}, {
             "\"HV\"", "\"v :  0.833 \[PlusMinus]0.018\""}, {
             "\"\[PlusMinus]45\[Degree]\"", 
              "\"v :  0.54 \[PlusMinus]0.04\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7], 3 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}, {
         StyleBox[
          TagBox[
           
           GridBox[{{"\"Basis\"", "\"Parameters\""}, {
             "\"HV\"", "\"v :  0.832 \[PlusMinus]0.018\""}, {
             "\"\"", "\"\[Theta] :  89.2 \[PlusMinus]1.0\""}, {
             "\"\[PlusMinus]45\[Degree]\"", 
              "\"v :  0.54 \[PlusMinus]0.03\""}, {
             "\"\"", "\"\[Theta] :  -49.7 \[PlusMinus]1.6\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7], 4 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
       "Column", 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{1}}}], 
      "Column"]}, "RowWithSeparators"], 
   TemplateBox[{"   ", "\"   \"", 
     TemplateBox[{
       GraphicsBox[{{{{{{Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{0., 0.}, {0., 1.}}], 
               LineBox[{{0., 1.}, {0., 2.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{117., 10.25834261322606}, {117., 14.}}], 
               LineBox[{{117., 14.}, {117., 17.74165738677394}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{135., 9.39444872453601}, {135., 13.}}], 
               LineBox[{{135., 13.}, {135., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{162., 2.}, {162., 4.}}], 
               LineBox[{{162., 4.}, {162., 6.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{180., -1.}, {180., 0.}}], 
               LineBox[{{180., 0.}, {180., 1.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{207., 1.2679491924311228`}, {207., 3.}}], 
               LineBox[{{207., 3.}, {207., 4.732050807568877}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{225., 3.550510257216822}, {225., 6.}}], 
               LineBox[{{225., 6.}, {225., 8.449489742783179}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{252., 15.52786404500042}, {252., 20.}}], 
               LineBox[{{252., 20.}, {252., 24.47213595499958}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{270., 16.41742430504416}, {270., 21.}}], 
               LineBox[{{270., 21.}, {270., 25.58257569495584}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{27., 3.550510257216822}, {27., 6.}}], 
               LineBox[{{27., 6.}, {27., 8.449489742783179}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{297., 19.101020514433642`}, {297., 24.}}], 
               LineBox[{{297., 24.}, {297., 28.898979485566358`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{315., 9.39444872453601}, {315., 13.}}], 
               LineBox[{{315., 13.}, {315., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{342., 0.5857864376269049}, {342., 2.}}], 
               LineBox[{{342., 2.}, {342., 3.414213562373095}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{360., -1.}, {360., 0.}}], 
               LineBox[{{360., 0.}, {360., 1.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{45., 12.}, {45., 16.}}], 
               LineBox[{{45., 16.}, {45., 20.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{72., 21.803847577293368`}, {72., 27.}}], 
               LineBox[{{72., 27.}, {72., 32.19615242270663}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{90., 21.803847577293368`}, {90., 27.}}], 
               LineBox[{{90., 27.}, {90., 32.19615242270663}}]}}}, {{
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{0., 5.17157287525381}, {0., 8.}}], 
               LineBox[{{0., 8.}, {0., 10.82842712474619}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{117., 19.101020514433642`}, {117., 24.}}], 
               LineBox[{{117., 24.}, {117., 28.898979485566358`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{135., 18.20416847668728}, {135., 23.}}], 
               LineBox[{{135., 23.}, {135., 27.79583152331272}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{162., 9.39444872453601}, {162., 13.}}], 
               LineBox[{{162., 13.}, {162., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{180., 4.354248688935409}, {180., 7.}}], 
               LineBox[{{180., 7.}, {180., 9.64575131106459}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{207., 1.2679491924311228`}, {207., 3.}}], 
               LineBox[{{207., 3.}, {207., 4.732050807568877}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{225., 1.2679491924311228`}, {225., 3.}}], 
               LineBox[{{225., 3.}, {225., 4.732050807568877}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{252., 5.17157287525381}, {252., 8.}}], 
               LineBox[{{252., 8.}, {252., 10.82842712474619}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{270., 12.}, {270., 16.}}], 
               LineBox[{{270., 16.}, {270., 20.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{27., 2.76393202250021}, {27., 5.}}], 
               LineBox[{{27., 5.}, {27., 7.23606797749979}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{297., 16.41742430504416}, {297., 21.}}], 
               LineBox[{{297., 21.}, {297., 25.58257569495584}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{315., 10.25834261322606}, {315., 14.}}], 
               LineBox[{{315., 14.}, {315., 17.74165738677394}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{342., 9.39444872453601}, {342., 13.}}], 
               LineBox[{{342., 13.}, {342., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{360., 2.76393202250021}, {360., 5.}}], 
               LineBox[{{360., 5.}, {360., 7.23606797749979}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{45., 1.2679491924311228`}, {45., 3.}}], 
               LineBox[{{45., 3.}, {45., 4.732050807568877}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{72., 4.354248688935409}, {72., 7.}}], 
               LineBox[{{72., 7.}, {72., 9.64575131106459}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{90., 7.6833752096446}, {90., 11.}}], 
               LineBox[{{90., 11.}, {90., 14.3166247903554}}]}}}}, {{{
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 2.}, 
                  Offset[{3, 0}, {0., 2.}]}, {{0., 2.}, 
                  Offset[{-3, 0}, {0., 2.}]}, {{0., 0.}, 
                  Offset[{3, 0}, {0., 0.}]}, {{0., 0.}, 
                  Offset[{-3, 0}, {0., 0.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 17.74165738677394}, 
                  Offset[{3, 0}, {117., 17.74165738677394}]}, {{117., 
                  17.74165738677394}, 
                  Offset[{-3, 0}, {117., 17.74165738677394}]}, {{117., 
                  10.25834261322606}, 
                  Offset[{3, 0}, {117., 10.25834261322606}]}, {{117., 
                  10.25834261322606}, 
                  Offset[{-3, 0}, {117., 10.25834261322606}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 16.605551275463988`}, 
                  Offset[{3, 0}, {135., 16.605551275463988`}]}, {{135., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {135., 16.605551275463988`}]}, {{135., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {135., 9.39444872453601}]}, {{135., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {135., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 6.}, 
                  Offset[{3, 0}, {162., 6.}]}, {{162., 6.}, 
                  Offset[{-3, 0}, {162., 6.}]}, {{162., 2.}, 
                  Offset[{3, 0}, {162., 2.}]}, {{162., 2.}, 
                  Offset[{-3, 0}, {162., 2.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 1.}, 
                  Offset[{3, 0}, {180., 1.}]}, {{180., 1.}, 
                  Offset[{-3, 0}, {180., 1.}]}, {{180., -1.}, 
                  Offset[{3, 0}, {180., -1.}]}, {{180., -1.}, 
                  Offset[{-3, 0}, {180., -1.}]}}], {{{1., 0.}, {0., 1.}}, {0.,
                 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 4.732050807568877}, 
                  Offset[{3, 0}, {207., 4.732050807568877}]}, {{207., 
                  4.732050807568877}, 
                  Offset[{-3, 0}, {207., 4.732050807568877}]}, {{207., 
                  1.2679491924311228`}, 
                  Offset[{3, 0}, {207., 1.2679491924311228`}]}, {{207., 
                  1.2679491924311228`}, 
                  Offset[{-3, 0}, {207., 1.2679491924311228`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 8.449489742783179}, 
                  Offset[{3, 0}, {225., 8.449489742783179}]}, {{225., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {225., 8.449489742783179}]}, {{225., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {225., 3.550510257216822}]}, {{225., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {225., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 24.47213595499958}, 
                  Offset[{3, 0}, {252., 24.47213595499958}]}, {{252., 
                  24.47213595499958}, 
                  Offset[{-3, 0}, {252., 24.47213595499958}]}, {{252., 
                  15.52786404500042}, 
                  Offset[{3, 0}, {252., 15.52786404500042}]}, {{252., 
                  15.52786404500042}, 
                  Offset[{-3, 0}, {252., 15.52786404500042}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 25.58257569495584}, 
                  Offset[{3, 0}, {270., 25.58257569495584}]}, {{270., 
                  25.58257569495584}, 
                  Offset[{-3, 0}, {270., 25.58257569495584}]}, {{270., 
                  16.41742430504416}, 
                  Offset[{3, 0}, {270., 16.41742430504416}]}, {{270., 
                  16.41742430504416}, 
                  Offset[{-3, 0}, {270., 16.41742430504416}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 8.449489742783179}, 
                  Offset[{3, 0}, {27., 8.449489742783179}]}, {{27., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {27., 8.449489742783179}]}, {{27., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {27., 3.550510257216822}]}, {{27., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {27., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 28.898979485566358`}, 
                  Offset[{3, 0}, {297., 28.898979485566358`}]}, {{297., 
                  28.898979485566358`}, 
                  Offset[{-3, 0}, {297., 28.898979485566358`}]}, {{297., 
                  19.101020514433642`}, 
                  Offset[{3, 0}, {297., 19.101020514433642`}]}, {{297., 
                  19.101020514433642`}, 
                  Offset[{-3, 0}, {297., 19.101020514433642`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 16.605551275463988`}, 
                  Offset[{3, 0}, {315., 16.605551275463988`}]}, {{315., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {315., 16.605551275463988`}]}, {{315., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {315., 9.39444872453601}]}, {{315., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {315., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 3.414213562373095}, 
                  Offset[{3, 0}, {342., 3.414213562373095}]}, {{342., 
                  3.414213562373095}, 
                  Offset[{-3, 0}, {342., 3.414213562373095}]}, {{342., 
                  0.5857864376269049}, 
                  Offset[{3, 0}, {342., 0.5857864376269049}]}, {{342., 
                  0.5857864376269049}, 
                  Offset[{-3, 0}, {342., 0.5857864376269049}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 1.}, 
                  Offset[{3, 0}, {360., 1.}]}, {{360., 1.}, 
                  Offset[{-3, 0}, {360., 1.}]}, {{360., -1.}, 
                  Offset[{3, 0}, {360., -1.}]}, {{360., -1.}, 
                  Offset[{-3, 0}, {360., -1.}]}}], {{{1., 0.}, {0., 1.}}, {0.,
                 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 20.}, 
                  Offset[{3, 0}, {45., 20.}]}, {{45., 20.}, 
                  Offset[{-3, 0}, {45., 20.}]}, {{45., 12.}, 
                  Offset[{3, 0}, {45., 12.}]}, {{45., 12.}, 
                  Offset[{-3, 0}, {45., 12.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 32.19615242270663}, 
                  Offset[{3, 0}, {72., 32.19615242270663}]}, {{72., 
                  32.19615242270663}, 
                  Offset[{-3, 0}, {72., 32.19615242270663}]}, {{72., 
                  21.803847577293368`}, 
                  Offset[{3, 0}, {72., 21.803847577293368`}]}, {{72., 
                  21.803847577293368`}, 
                  Offset[{-3, 0}, {72., 21.803847577293368`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 32.19615242270663}, 
                  Offset[{3, 0}, {90., 32.19615242270663}]}, {{90., 
                  32.19615242270663}, 
                  Offset[{-3, 0}, {90., 32.19615242270663}]}, {{90., 
                  21.803847577293368`}, 
                  Offset[{3, 0}, {90., 21.803847577293368`}]}, {{90., 
                  21.803847577293368`}, 
                  Offset[{-3, 0}, {90., 21.803847577293368`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}}, {{Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 10.82842712474619}, 
                  Offset[{3, 0}, {0., 10.82842712474619}]}, {{0., 
                  10.82842712474619}, 
                  Offset[{-3, 0}, {0., 10.82842712474619}]}, {{0., 
                  5.17157287525381}, 
                  Offset[{3, 0}, {0., 5.17157287525381}]}, {{0., 
                  5.17157287525381}, 
                  Offset[{-3, 0}, {0., 5.17157287525381}]}}], {{{1., 0.}, {0.,
                 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 28.898979485566358`}, 
                  Offset[{3, 0}, {117., 28.898979485566358`}]}, {{117., 
                  28.898979485566358`}, 
                  Offset[{-3, 0}, {117., 28.898979485566358`}]}, {{117., 
                  19.101020514433642`}, 
                  Offset[{3, 0}, {117., 19.101020514433642`}]}, {{117., 
                  19.101020514433642`}, 
                  Offset[{-3, 0}, {117., 19.101020514433642`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 27.79583152331272}, 
                  Offset[{3, 0}, {135., 27.79583152331272}]}, {{135., 
                  27.79583152331272}, 
                  Offset[{-3, 0}, {135., 27.79583152331272}]}, {{135., 
                  18.20416847668728}, 
                  Offset[{3, 0}, {135., 18.20416847668728}]}, {{135., 
                  18.20416847668728}, 
                  Offset[{-3, 0}, {135., 18.20416847668728}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 16.605551275463988`}, 
                  Offset[{3, 0}, {162., 16.605551275463988`}]}, {{162., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {162., 16.605551275463988`}]}, {{162., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {162., 9.39444872453601}]}, {{162., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {162., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 9.64575131106459}, 
                  Offset[{3, 0}, {180., 9.64575131106459}]}, {{180., 
                  9.64575131106459}, 
                  Offset[{-3, 0}, {180., 9.64575131106459}]}, {{180., 
                  4.354248688935409}, 
                  Offset[{3, 0}, {180., 4.354248688935409}]}, {{180., 
                  4.354248688935409}, 
                  Offset[{-3, 0}, {180., 4.354248688935409}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 4.732050807568877}, 
                  Offset[{3, 0}, {207., 4.732050807568877}]}, {{207., 
                  4.732050807568877}, 
                  Offset[{-3, 0}, {207., 4.732050807568877}]}, {{207., 
                  1.2679491924311228`}, 
                  Offset[{3, 0}, {207., 1.2679491924311228`}]}, {{207., 
                  1.2679491924311228`}, 
                  Offset[{-3, 0}, {207., 1.2679491924311228`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 4.732050807568877}, 
                  Offset[{3, 0}, {225., 4.732050807568877}]}, {{225., 
                  4.732050807568877}, 
                  Offset[{-3, 0}, {225., 4.732050807568877}]}, {{225., 
                  1.2679491924311228`}, 
                  Offset[{3, 0}, {225., 1.2679491924311228`}]}, {{225., 
                  1.2679491924311228`}, 
                  Offset[{-3, 0}, {225., 1.2679491924311228`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 10.82842712474619}, 
                  Offset[{3, 0}, {252., 10.82842712474619}]}, {{252., 
                  10.82842712474619}, 
                  Offset[{-3, 0}, {252., 10.82842712474619}]}, {{252., 
                  5.17157287525381}, 
                  Offset[{3, 0}, {252., 5.17157287525381}]}, {{252., 
                  5.17157287525381}, 
                  Offset[{-3, 0}, {252., 5.17157287525381}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 20.}, 
                  Offset[{3, 0}, {270., 20.}]}, {{270., 20.}, 
                  Offset[{-3, 0}, {270., 20.}]}, {{270., 12.}, 
                  Offset[{3, 0}, {270., 12.}]}, {{270., 12.}, 
                  Offset[{-3, 0}, {270., 12.}]}}], {{{1., 0.}, {0., 1.}}, {0.,
                 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 7.23606797749979}, 
                  Offset[{3, 0}, {27., 7.23606797749979}]}, {{27., 
                  7.23606797749979}, 
                  Offset[{-3, 0}, {27., 7.23606797749979}]}, {{27., 
                  2.76393202250021}, 
                  Offset[{3, 0}, {27., 2.76393202250021}]}, {{27., 
                  2.76393202250021}, 
                  Offset[{-3, 0}, {27., 2.76393202250021}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 25.58257569495584}, 
                  Offset[{3, 0}, {297., 25.58257569495584}]}, {{297., 
                  25.58257569495584}, 
                  Offset[{-3, 0}, {297., 25.58257569495584}]}, {{297., 
                  16.41742430504416}, 
                  Offset[{3, 0}, {297., 16.41742430504416}]}, {{297., 
                  16.41742430504416}, 
                  Offset[{-3, 0}, {297., 16.41742430504416}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 17.74165738677394}, 
                  Offset[{3, 0}, {315., 17.74165738677394}]}, {{315., 
                  17.74165738677394}, 
                  Offset[{-3, 0}, {315., 17.74165738677394}]}, {{315., 
                  10.25834261322606}, 
                  Offset[{3, 0}, {315., 10.25834261322606}]}, {{315., 
                  10.25834261322606}, 
                  Offset[{-3, 0}, {315., 10.25834261322606}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 16.605551275463988`}, 
                  Offset[{3, 0}, {342., 16.605551275463988`}]}, {{342., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {342., 16.605551275463988`}]}, {{342., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {342., 9.39444872453601}]}, {{342., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {342., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 7.23606797749979}, 
                  Offset[{3, 0}, {360., 7.23606797749979}]}, {{360., 
                  7.23606797749979}, 
                  Offset[{-3, 0}, {360., 7.23606797749979}]}, {{360., 
                  2.76393202250021}, 
                  Offset[{3, 0}, {360., 2.76393202250021}]}, {{360., 
                  2.76393202250021}, 
                  Offset[{-3, 0}, {360., 2.76393202250021}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 4.732050807568877}, 
                  Offset[{3, 0}, {45., 4.732050807568877}]}, {{45., 
                  4.732050807568877}, 
                  Offset[{-3, 0}, {45., 4.732050807568877}]}, {{45., 
                  1.2679491924311228`}, 
                  Offset[{3, 0}, {45., 1.2679491924311228`}]}, {{45., 
                  1.2679491924311228`}, 
                  Offset[{-3, 0}, {45., 1.2679491924311228`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 9.64575131106459}, 
                  Offset[{3, 0}, {72., 9.64575131106459}]}, {{72., 
                  9.64575131106459}, 
                  Offset[{-3, 0}, {72., 9.64575131106459}]}, {{72., 
                  4.354248688935409}, 
                  Offset[{3, 0}, {72., 4.354248688935409}]}, {{72., 
                  4.354248688935409}, 
                  Offset[{-3, 0}, {72., 4.354248688935409}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 14.3166247903554}, 
                  Offset[{3, 0}, {90., 14.3166247903554}]}, {{90., 
                  14.3166247903554}, 
                  Offset[{-3, 0}, {90., 14.3166247903554}]}, {{90., 
                  7.6833752096446}, 
                  Offset[{3, 0}, {90., 7.6833752096446}]}, {{90., 
                  7.6833752096446}, 
                  Offset[{-3, 0}, {90., 7.6833752096446}]}}], {{{1., 0.}, {0.,
                 1.}}, {0., 0.}}]}}}}, {{{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 1.}}, {{117., 14.}}, {{
              135., 13.}}, {{162., 4.}}, {{180., 0.}}, {{207., 3.}}, {{225., 
              6.}}, {{252., 20.}}, {{270., 21.}}, {{27., 6.}}, {{297., 
              24.}}, {{315., 13.}}, {{342., 2.}}, {{360., 0.}}, {{45., 
              16.}}, {{72., 27.}}, {{90., 27.}}}]}, {
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 8.}}, {{117., 24.}}, {{
              135., 23.}}, {{162., 13.}}, {{180., 7.}}, {{207., 3.}}, {{225., 
              3.}}, {{252., 8.}}, {{270., 16.}}, {{27., 5.}}, {{297., 
              21.}}, {{315., 14.}}, {{342., 13.}}, {{360., 5.}}, {{45., 
              3.}}, {{72., 7.}}, {{90., 11.}}}]}}}, {{}, {}}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1: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
ZGpNEv4H1oxVyA==
               "]]}, Annotation[#, "Charting`Private`Tag$204195#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1:eJwVmnc8Vu8bxyWPvcfXysjejpGR0cde2WWVrez5yCiJFgmp0JJKSEtWhcTJ
aBktFWlQlEpEZkm/8/vreb1f5z7nvu/r+lzXc3/O66wNinXbxsjAwKCzmoHh
/7/b6Tov//3zIg0v3ODySJCAusVnX815L/K+brRzwgkJzPKf+uw34UVa2Jk+
Ot8igX11Kwt3B7zIdPtaRx0WSZyffiSWVutFXixsmFQ4K4k3sQEBi0FeZN7L
/U/Ze6TgFJX3/WeXJ8nA0XNuXHQt9Ld9WfXxsAcZqDcT0JQni1pxqbuTH91J
abKr/fFDJbjY7oz7N+BOfjjMbhI9pITJxJeyvE/cydsbHtXQJpWg0nc4R+uO
Oxny9NKcsIAyyjIWPROPu5M1rOM8rVuVUTj2bGbJwp1M47Uqm/6hjOQb+5Vo
FW6k/Nu0mtUsqvjv7YchoTNupPTWc5VrRVTRwGp0ROGoGxmoYGKrpayKn4HT
cza73Uj2ezfZ5R1UESbo15Gz2Y00Gti47JOvCp9UfT9eZjeS64RNzCifGkws
vh0XD3UlBTU8Lh3jVEdz1YKKn68ruftKkqivuDr0uGnt591dyWfdNZz/qaiD
GJT6KQ9X8mRdFZu7jTpkYjdvJERdyYS/zpHzGepgPkMyWXW7kDv+oKr7pzqe
zhTviNF0IU+Gfvr1954GNnqVc9bKu5AfTeK9t/dp4NHd2ou/xF3I0PwD4s1v
NNCe3fMshdWFFPDV85H9pYFwE6atzB3OZOGDlxt/y2hCu+hNj6aiM3n+8PyH
ynRNdFlmVe+dciS3WXUPNfATGFX/TyvwjSPZ7dF/YkaYAKNwRf2GLkfSS7+2
WkaCgOnX9sbl046kv8lQm7cigca8lfYka0cy4Y2qkYwRgWuvdryOOLuR/Lft
optAAIHHbUw+dtkbSbvMn3XxIQS+Vh1/q0jfSH6ZOvHgXhgBhV21I6O2G8l8
hpxxvXgC56V+fPebdSCzDn1gS8wkUBgWwuDu4EBW335joH2OQJ3rr71aeg5k
9Ca7u5fKCDxbv5fGu9aBZIq+EcNdSYCb6zx777w9uZH7y/ob1whk1w4J2pTZ
k1wFLbUmTQQqT0eckM+zJz3EW18atRDo2rckypRiT05NcE6ptFH79RCWuudo
T7J/Vhof6iSw67ebstGSHZn8qdIu+wmB059GroqO2pGiB3dGcT2n9t8Tp7HY
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
3Rxz/6j6mrjOzj9wOBA9fNFTKmMENqRPF3cWBaI5U03Na4TAqGTb+bOXA3FK
96AG7yABriztT8erA8Fovyn67Suq/qYq5HPqA/HzQZPOmX4C2W25V5LuUs8b
uRn28wkB9QCfBudngVCIWv1rieoXHg97561eBeKGZ9gPH6qfZBBmhsZDgdCV
GSispvrNcwalVqWxQDiWpv5Tv0Mg6cLcg1VLgciMvzeYd4MA+bFgqF46CIPT
+RWviqh61VBVOyofBIfRxT1Jxwjo7uxKi1EJQsTQxs9sRwhU8f2WUNYNgp4+
bxxHNlXPCA4otQlCIFOhxs5UAgGl68ayY4LQe7Tcg9OHgNi3J+u204OwqrlT
eHwzlZ91EQctUoKQ3J/Xf9uVgG1vqeJKZhAUr4kH6NgRIJZZIuhFQbi0slJy
Rp8Ag8+bSd+WIDA+2TGqz0+guSJxg9G9INwVOKfpyUUgcZq7QOR+EEwvey9H
sBIYz7bQevEkCDUXh3YPL2vi6e1rdNtPQajO1x8YfaGJ80J7FrXZg1H/sjT/
zm5N4JksI6tXMIzMK2I072kgXujCXyffYLTzMjSW12ugzFtyqSgoGNv7NP6t
qtTA6o8iP2Wjg6EjWvM3MUcD92e43m/YGwyeYnka3DTgILjYlHwtGBxx9ToH
3qnDw7Mn/gtDCNrsmV5c/6SGyHeJI/cvh+CbWDDTmlsqaP7dXFJfHQKnftPI
l+UqYBVZ5XW+PgQGzP7FmcdVUOmW15d6NwRX6Wda6uJUMPyg4o7asxAUGl8e
3aWigk11r4qOLYbAevW6vvtnlGGcZWDvZ7MNqzOzJ9WSlMCltVw3N7oNf1PN
NMb5FOBTZmZyZH0oHj7s4uptkUbNmaO1PRtC0d+ys1ejShrMRSPy7FahOFog
P1t8XBp1WZncB5xDwTN9Q2FXhDTYo+992BkSChevhqkTItJo1jfbuz0/FFxP
zaqPTUhCrBcPTD6GYq5Ef5kevwZx9wuMdn0Jxc7PgkdS7dfgftvwjcaJUHw8
ZVlbLLsGCXUZJ3UWQpEmm/xT5JU4Hp8gw5U5w6An+TLM2lgcO4PAKaQXhtGH
GbQ8LjEMLWxwnTgUhuEivjV/uoTh9NjrwJP8MKhZ1lz9WS6M9pL4prrjYUgr
NA9avZ86v5pdXJt6Ngx5CiGGmebC2HmYeYZWG4YHsUn6Y+R/EJXqPSY1EAYL
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
1wTsH2HLlttK+TG331VxEwl49P2LpVUAgS3avOX+0wmwvqIcGhhGQGXG6LTJ
nwTcy1yXsjqFmu/jfeGbfxPQruB5sGcXAf7nrkVqDHRs8nX+mb2HwO/a0AJx
Gh3nLdLvDB0k8Cj++MElbjrO9enFjBcSaAmUZIrno+OJ0f1TDicJ1LhezhwX
oOP1c6HvF84QOKnVlvZahI6qx7fHFMsIhE1/S7gpQ8dGq7ojJ6sJMMeb+8fr
0XHP4/o1FspPr3tnWidhSEfYwX3zTx8QCLEzoj02oqM5+URrzmMC7Wt1r8qY
0bGPwan2CeXH9zyXX3jhQEd9Y8CeUsrPV5vK2Gc40bEzuFTk+xCB91ckz6q5
0mEW6bBa6T0B433CFgc86Mg+IdOU8JHAog7bEb1AOuSaG2UdvhFQPE/7+DGY
jjL9uE7RCcrfczKuO7KdjrWbDhwb+EGgYfT3my+RdHRJbr2kME3gk8uCemEM
HQ9/tn2+OUPF7+6vDMTTMdnUZblulkB80YTCqSQ6WEoznJkWCJxf9TXVKpWO
Xcy/5twXCTyNHuuZ3kUHJ8/e6uNLBP4NjkiVptNxSXBbUsdvAhrW7xPsM+l4
/Gfe/v/fm/nWvema30dHsN4t5V/LlB4kX4tcPEjH9keWvL/+Evg2/6T1z2Fq
Pg72ifZ/BESDe/iq8qn4P9V7d4xBC7ZPHoZsOkrHHXmpPrdVWkg26rrNUEiH
i77wXUZGLVReusd+vZiOtOHiqrL/fx8l0OrrfYqO3uuGR7RXa4Epo7mGVkLH
1uHW2DqKdSdura4rpeN0HJudzP+/J/Oq9/C7QI3nlRbb+//vtTpvXGYvp8NY
U/3jM4rbiWvLtyrpoC2mn+ejaWG6pMo5+DIdNz2yNplRLM1WUcZzjY6UhaG/
ARQ777gwd6eaDh5bvZI4itNHztqG1VL6SKFr/p+vO54+I9hAx/TOwtv/fx/3
tql4krxFRx5Tq+4GijkUjptFN9HhlGtwiZvi9ceOFIq2UPG0j+Pp+//7t5XD
X7pa6VA3nIveTfGpiOz1CffoWOTZ1bGG4oev9udJdtKRYDXIe43a76J55vDj
+3R0cnB4qlKseGO3TvIjOvqcNE+cpuLlIb7zoGwPHRdrs58vUfE9kJU0+KSP
ivfh3ex2FDf8SlBLe0bHm7ETyKby8ck/do9SPx1FSQeSblP54u+JfN7/itJf
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
dcn8YDpCw/8AS214lg==
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$204195#1"]& ]}}, {}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
U+RBokJMga5aF089nPeV/qMELNrS0Odm6+LK9Vl/jF9LwJu/E59OJOriTu2v
scd3JMDq2H8JMWd1cZUuWnMDIwm42S48z8Sqiw/239X+1SgOM5MCLzjO6uD0
gqEnc2vEoIiN54AwyzFc5r9Lmy0vRIDUu88g6P1R/NqJvUyPwvjg+t/M2Mvp
R/Ev21WJjtp8cF9Cuvmm31FcJ70g5xQtH9SQNY4/4D+KH4zguvLiNi/Q7rfV
fheoifM/3Vf6MIcHUs8+UGEUP4If53q5mjHKDdWr+/c/uqaBl755XOVB4oR2
wRy7XDsNwt89fHlHOWFMTz69SFEDT3kZtVeMkRNoHhzlrh/FcBvdd+mdTzjA
UMuJbUoVwxe2nvMw9LLD5xuZtErf1PA/7r4Zj6+zAjWP6DzluAqelbzUYVHA
CBIhbvJPBFXw0KnjJDMbRtAfzL4QvqaMD3HaXuygY4TENKkFpXxl/LXsrr86
rrtAgFf+5+M9yvjiK/9KNREG8FPxG/+Vo4g3cme9L6ughfLlRZc8a0X8ytqv
sLHztLBVcnHCkVERf95kUXdHlBbiVMMmP5w/iNvGnBK6lUgDOWrXv2WrKOAN
Y/f5V/2oYQTLmLbBZXEHaUsrhpRtJLou4MMaKIuHXF5V/MC2jbwrn8w0iMvi
6vUpt14k/EO/NXJnlWMOEPNs/H5v3BZiP1w8v8dYBqeaatFuSN5EeppNi3Wj
kjgb89hnquE1dPuvPol8WxL/vD9j/IDXGuqrbVuSR5J4Ulht8dW138j1aM/y
gywJ3IjDmKqW9zeK0Pq0etFHHC+8n9cben4FvUbLG9LrIniZZuh/jQaL6Hbo
iTbdLBHclqxZFNryC/m8Tn/sfFoEF5vX9tXf/omO6UVeP3hSGBd3vtyVGriA
RFh4eVieCuCJi4wiPJGzaCjyXe3xtf34LlKUqV7LDEpadHeJMNqP3y6jovbg
nkFUfa+fz23w4RUzdtvkqh/oS4bh0VYzHlxbk61pn9h3dJ95eZw6fx/+psXx
yty1b8g4Mv3G4W1unEcyR792+it65/q9M7+AC7/88LiNWe0kypS54hpDy4n7
NfMzXbo+jqwzJBnq7DjwG/ZR8ulbXxArc3vB2it2/BAToONrY2hzTHm6rYoV
FzU20KP8/YSqL3iwxJ3bjRcPRySnmwwjGdMS6419jHjI5EZS08UhlK6688SL
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
knY=
               "]]}, Annotation[#, "Charting`Private`Tag$204248#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
bEn9w0GpvVsJTIzz2Bz/Y0M2ruBhjHOo+S8wdVP+z4YMPX/k7YYEAgISp4di
SmzIHXfapDtjCTSXLt3QkmlDnmvlCxWLJjBf8ynI1MeGvFJ52Xx3GBXv2er4
IAEb0oA36NUtbwKmegJfGr5bk837YuzaqH0z0ZGSMj1qTYbGe3zb70pAr8c+
Y2uHNXn03nEFRXsC94d/5R2MtSbjJ7qz8o0JpPtFCL/xtiZtK8PLuQyo+r0a
3KtuYU3ym+QoROlR+U7+V9YuZ03+vVlbJ6RD7Y85z/pHt63ItZderjumQMBc
qeXqQoYV6cDXT6yaZ+L9sWXmfnJWpJ+G8Iv2X0zsV9/dW8dvRfIcq91k9J2J
V7rBt5mjluS/l9N7lkwxscVK9Jnzfkuyh/POVvUJ9TyJjZnd882CdDvkx9/U
zIRK23Iters5+UIdfSc9qeeLDzfPsaPm5NdTKxr5nZno/DM6YllkTv7MPpPh
ZcOEp2ltwa4wc5K9OXnddQMmcgcUpgRFzcl5ReP2z/JMTL6WOykRZkZe3Sae
XTjGQJPYklUKIqbkxOdTuW4RDGxumeUif4AMYbzR+ejPgJXn8OPg1yBnC86P
b/Zg4GVVaV7dBZB6URl3Es0ZEFddNLEiFGSA69KiLkUG3nGWO21IWE9WK6d0
aLToIPn+YruUbiNy19OTP+SztbHzT03e1gojUulGp1FXgjbKVFbeyE0wIu+V
m2x29tNGR6q+RaWMERmyvi6HsVobNFkfkyssQ1I+P5cj8FYLpWGVBL+yAckR
blQ3MtdC+zdZ2UM79Mn+0LLKRzMaWLBEaeqaBUH+F/fk/ke1VTi7fubnyh+K
pK+iNHf8SWUUciz7zesUyRBesf07SpQRfbaiOshRkTx7ViG9OkMZplbbdmpb
K5BtS8PlR+yVoSiydInIETnSIyFxe/7Ucip/e6NbrktIIbndvk+0l6M9LkJk
d4wA2SaRW3nioiLcVsz3FfItwBrZPMWUx7Lw3T2eXGTBDUajEbdzsyxCPg7K
7M2iYeG4/DHLPFkktR6N2/eHBzWfq4J3rZVFoaWteMknQYQ9ebwgokoGY8Qt
jYFYSRTu6Bi8FSYNeXcp9j13ObB4luWaiy3Bcp78G64zcihUMilX/bAYqhfm
Ze/vW4YE9ee7tW8shpbsRM/92/JQUilWbcpcjJrkAKH3RxXRMiR8jj0jhVPr
GAEflimDK3P+ntvLRbh1c4hrWkINapVNLisfS+Kx3zaRw0FquPdT6VtXuyTG
P6rKuJxWQ7n78yu7DkqCLsnRbbFZhW88mo2lQZJY7yuzMTVTHW0vam+RkxI4
/z6wf35KEyGxR6138Eqgewvf4zMGWuBXvnBp8r047ok2jwXnacGzYvGJbXfF
MU0smO9W1kZAs8DV1ZXiWJVxlLHLVwfB3svWPtIWx12eb7f4KN1KJg+kru8V
xbCTjesrQSb6v9ITBUpF8aL80KOLTCZkjwt764WLYmqV5Vh0JjVHuyf9O2ii
EHQq+9svQz2ngiLGUqxFYFG2lrHPVRePXsv8Nz8qRO3jgrYoji6uOMgsU7wg
BDe1USPTw7qQlHPvO14ghJCO3bYzU7oQWT33fXatELa9eBrqkbcabWoP+LPK
BNGuurV06dU1+C/yWtiBCAGk6k6yTCbXoGBf97SDiQAIeLqEL9TDB+7P23OW
CODUBi2h5kg98K/OEuD086Om4Pl2a3F9yDuuL41dxw+/StvAeAN9HC7gttda
zI+lDa2GJeH6GCCn8pK/8qH4auHsi4v6KFs21Jd9hg87Z4zjUkPW4vseA4dB
LT6Y/jtue2jPWuSLMUyaRPkwL7R4ZXfrWricOTYj/pkXaSumR0UE1+Hr2IKT
Eed5EeNT432sZR0+mfx0dTfnxcoIwTX9I+vwgYRPoBovxpJTJb/wGmA+vmjh
ZxFeBOxxum3kZ4DaxqmCxqc8cLkyb/aQZohXiTU72Zt5INIfo/hbyxA7tD6v
7gjjwa1Hw38VfAyxweO9+W5HHph/aboYe8oQen33jbqW84BrXqaseNgQwTp+
O9RFedApuIt9gcsIe2Kvjsr9pkNPJUib5mmE5oX791c/oOMro19oVaYROlo9
1mp20dFsrD/pdJz6/ljVIYszdKzyFquv+msEUrDQYGEhHXL5V6WJBmNc+338
qoYzHU/KNH54DxpDo9XZU9iUjrKj5Q+3/jaG8n+3r6Tp0iF2OXHvTScTbHXs
yPokTcfAzWdxnzgmEPoeJzknQkfesLWd1FETvDPLfFvCTQf3ZwWekB8mkMr1
OR/xkYarc3te5yqtRzX/z+eH39CwReDn1VP261Ew8d+xiKc0rF0cXn1/03rs
sghRuHCPhu/LBzf/PLwe/U+nAw7cpKFFx8hH/tZ6VL2aYv3toiHBqHGNxbf1
4B7pS5jpoFH7M19gjRgQur0rmH2ehm/q+GmtAoQVvvPa3kTDrVLpd1/0gY2G
WruTj9NwhOvrg4P2wPeooQsj9TSkxg50WQYB69yyPnQdocF++NiZTyygfv1H
DaVqGhRNM6srcwGHtE+ZvytpmD3ps8e8ChBjcD46ltMwsJhI/3gaiMwtTpct
paEuSyiyvAt4xwpSCyuhgTM15mE6BMR0K/xV2U+Dk/cVsw8TwC8x9d/BxTSo
dJczSueAOPKT4hKKf2smy68XN0XNvz/J1hQPltsJTyqbgn3169QXihu4VX7v
1zdF7sXSfYup+2+J/ztuZG+KbXEdvq0HaHB9PDz0LtAUSuoeNnfKaFA1b762
j2WKxQsTPUOo+OdO7z5rkGuKAGXm1oRDNNxfGnZ4rNIUEQZP278fpqFxh1Fh
0WlTfF7RQ/9xlIZt01IZa7tMUd4U6sVqpMFjw6eo1w9NsaDBvCHyNA3qPX1e
BROmuD8r+mG4hQYunToLvTlTGLTlypAXaRiuzCBeiZkhUH/XKuWrNJyieyrm
K5tBX5FPmKuXBu+nfHPP7cygPflm8cohGjQtRyd3BZrBMq9lefJzGribOx4x
WWYYMRvrW/2Ohqac+HM5lWbYN7G5Vu0XDTs/W9XqnDaDm5Vasw+NDl8/xb1P
SDNoTdyU4Balg4f5IEZrwgzLHjVsIVXoeHrwlM+jP2ZIyOTxG2JQ88Kba5Ul
Zo7F7MN6YcZ0+I+sXT6kZ47spvmcSW86CGtJ8Uw7c2yyunFjNIIO/pYPf9UC
zeGkdr/OLYWOc7tqnmzJMYeu2Oe26v10COrSi1UemmP3p5QVww/peFX9fNud
cXMYfm/m2feOjjb+C3GcP+Y4/vF0QddPOkJeRNsMLLeAtNQYfY88Dy7uvvuP
nWyBbetHGs4l8qDoW+PHZTkWcHAb71fN4UF4UPazGxUWEHn1ME78IA/E16y5
IEta4OuE7RarPh5EvqpKuCZqicmtuxavo/bVUi0u/kUqlthhzv9nC7XP+tIj
asPXWeJBTmCyXRAv1BcyHvKEWyKDLSOXVcGLKcvr62zaLZFv5xbmJcGHpJOf
6LfDrFCfd78hXI4fij89apalW+HnzJj+cvDjnkWHfkKRFXJfbv8WHs4P4sXO
GLF2K9T10po4Tfz4Ji4z6CpqjYnRPolBGwFwUi0ODl+0xqIv1QEzpYJQu3Z8
9co71gipeZbztEsQT8TE7qS9sUbJxEkHs2lBGBx/wiUtaoPWuoMae22EMPcs
YaNfmA1GvkSrLaQJY7tpJfOViC0K5hb4Re0VQZ7w9I3JUDu8fHd0ZGmWOLaM
T1cOp9nBJv3gdskacSR1f4q9VmAHg42pHWaXxOHN+SJW3WaHA5vWzVrOikN1
7Ju3i6A9LuyOrh1MkMC1S3/G287a43zW26nL0ZKYjxHg38nlCNeVyVMyOYuQ
clPFRr7GGd8tX2jXmkrjJb+tdN1ZZ6jQvDu9IqVhZxP/fsV1Z0wZDaZoFEpD
8UZrgdaUMxROnnBkPpHGxtCjUfLLXHCg4MXrBpYMFgavPq0V64K8jFU8f07I
Is7PS8+BzxU7rU7fs9aRh7xblc3u9W5oPTCjMNOhhCeba148HvOAzrkFQ5FN
K3HROO9Q+7QHSkSC16b2rEQZF8u36qcHas3bd2U+XQmPXMthP2FPpM+1m2Xz
quFO8dTtF7qe4MvtKTMPVENPo8HlsWxPnCvbYlYsvApNw8MHPyt6gVF0+6J+
mDqyCbEN/AHekLlgZD36SRNO767EdUZ6I59LXUaIRwsyVQnbk1jeaIs5bKgs
o4WWBXf+e7zLG1eKhk8vs9DC68GC2cYW6vtpqwm9ci2YJQoesOX3QboXNtxe
pw3uUzx388/5wHxFo6Jvog7uBLW+Nrnig+e+SR3fs3RQtTBidqbPB5mTaxdt
PqADIqNnmd8LHzAvF4catesg1G5HnIbABqQfOMG5x8VA9wSX4EDgBkjMVQS9
t2Iga8WchYigL5TPKL4PvMlAwpFfKXsX+UIhrntmepABf9kf9RIKvvCXsd+a
/JiBtRIz9MWrfbFxZ/Yjx3EGpufGe+QDfdEyK/QmhM6E78MHFowWXzx9qzsw
aciEjfO9lJZOX6wIeHe4yoyJNbfu1K++4YucBze4jG2ZECdv0teN+GJ7qBTT
y4uJGyev9pjy+mHNo2PXHicysXrHSQt3Xz90VtAfSR5hYvl8Y8pQuB8G7Z6K
Dx9jQiy9od470Q9hxUbc+Scpv5VQS/ff6Qe5/SefXmtjota3vCe8yQ/hgfsl
tw0wIUrssEjl9of+x5V7uSn/NXdqe8pPYX/ERAbe7Kf82eTKbfWbl/hjj3Yw
bw7l33qWpdMzNf2R1G8QfIOPwGaBxJ5dXv5YmCGRmS9NYPyVr0XlCX8s8r61
jpvyi+Ki779uPO+P7Mkr07mUnzQwTD+6+oo/aFuTDP5Sb3sFpeXcg/f8cX2N
7pYr1gQIu4ck7y9/vNDC7/2UX/VLC0t6yB0APrfo1qOUn91ZP6NQJxyAE7Gh
w8d8CTyaF880VgzAsICH7rZgAlvOORqnWAfgZeLy7m2UXz72amTK1DUAeZt/
LZSh/PQdkbhDYn4BSNbNr21IIqAUlf/nREIA7l184l+yiUCv3I320dIABO21
HerYRuCzrVf0mcMBeCVpmfOS8u/SaW+Xbj0egOdpdxy/U/4+7h6Ns/RyAH64
8Up/yyUgkQs957EArDfYzTQpovI9d/et3HQAjm48Y/JhL4HwV4Gl738EYOlB
wmZ3MYE2g63fcoQC4cl0tKg4QOBVpHC9u1QgSnNWMQXKKP9fetBdSSEQ++9N
icaWE/D/1N7SSQRiV9LE/gVVBHLkbEPzjQKxJMF6td5BAk22jyV8rALR0PW0
0+8QgcepkV0rXAJhm7hFnVVNYEH9bNLXDYFg9S3PSK8hoH4vR7ErLBBXE1+d
Sj5MwGN+0WBRfCCO+I9d9j1CoMFHV0c9KxCzR/jT/tUSuJvT/eJHfiCGTi2S
u1RH4GeLa9H1A4EYjTOpijxKYPmrV8YlNYEIO2P2mV5PwF4k6WNwYyC1N37L
lVCcYvDvkHZLIE5/91OQPEagJrLIYe5SILiqObNZFN84sGzu5vVAFElk1r6m
+HPXqZPldwPRqNuhsPr/51WfDP0ingQiwa04KZVic7l+Qd03gfigmVdynOI4
W98Oro+B4P1qkneb4rLUyeg7s4HQsGI5vab46lGO9CGuINxb9+ftOMUTg3w3
owWDQLrfdXpBseR8GUd/URCUC7h2X6fYUENVjUc+CHGOlw9UU+xmm6HVoBYE
+r4QuRCKoyIHCWvdIHR+8ByQpDgzZ8XaCeMg7BmxOtZCxV92dLPxbpsgWK/i
bwTFp7rumqm7B2F49MBQJ1WPay9VbPoDgsAdIKazkuKnf9Md46KC8HdNV2vm
/8/LZO+6ibCDsMtWNraXqjefgYpP09Yg9La0uvyh+iHvkx7gnEfFf8M5Sp7i
1al3Qj/vD0KW1OA5nf+fnx1QjiquDsInP4s1OlR/Q1s48URjEEx3j07LUf3n
DN5mPWgJwopW2puflF4ahDlbpfqCILNEKCeD0tdl9dvZbfeDECgbt3Z5JYGH
NsvzvJ9T92+yZV6g9LggZ2B/5UwQuu8qcJ2i9Lv0qFKFwd8gvM8fGBEqIVAe
fOnOR1owTBUDhX0pvTdtE39YJBqMJScs2F2FBNpFLnm9XBgMY5Oclqd7CPQc
iniiIx2M+KdZHq93E3jW0fFiUDkYnjHM+505lC/9ET4puS4YWRPJ+oe3EFiU
KxYXZhKM6Kf5opqbCShIdUyfMw/Gppuuif+lEdDTFfvm4RSMJxrrx6JZBMIS
2+fLwoIRoesO+UgCCfNhWeNRwVA/uptfMZzaZ4Wi9LUJwfAT/5svHkJg38kw
gSecYJxKvvDkMrVvroyLLJItCkYKd1G4nSOBm6kXy2JLglHh2Hqt25aqD0+Y
dGdFMObeqi9RtyLwQfmifMDRYMzXDnVcN6HqExy66vDFYCgmqI0wdQiwH7eZ
KL8JxiWT1rVvhQkcgnqW9EQwNCR4NQ/zU/uosfqa2MdgvDrDIu3o1PXpO23m
ZoORk/bnY+ofJjql3dyGBEPQYeNmrzLJBK/fx4hdRAiEfC6PPe1iQudacONW
/RBMeykInetkwkfj4Xu2UQjyrUPDt15g4uSfjsRgqxD86f/v0cQpJlwO5aWv
8w1BLvvKS9lyJqqeKxd+yApB/JIV5J8oJq5Zlt8dzQ2h9Lps/k8oE1OnBSUf
7wlBkqi+7Cd/JtZv+1LWUxqC27pBSk0uTIzJXz1SfTwEolc+Ne7TZ0Ir2Pe8
870QXFA95TrDzQT5et+zc4qhcK76Hpq9j4HN2hqaxStCYT++8oPcbgZWb76+
JUE9FLGGBpGnshholPi9bNXqUJzi/5t8gsXAPoQF11iH4j8FH28VDwaCa9a8
zUsIxSK19NuyUgxw+VJGsTMUY88UWQsUdIB7ytz8PmH4/aU0XueBJpKlav86
BYRh25e8PrUrmqjbIP+rNDQMMpeldksc1wTt9dLPyvFhWDPvPXN2myZ6Z0Re
rM8OA7u5NUl3lSbsF/1sTzsVhtxmzXchGRrw8h5IHucKR138yrR2KXXEPk8Z
7T0eji1Ehba41kqIMOdavo9FQHCvkCj9qBLuW62Qdngfgc8+rMGEPUqo8HfK
rPsUAVHbhrRRthKW5x2xd/4dgQrVM5YvLZSg99JirFFsI5K77hwwG1dEcGGh
lL/BRvhvdQ0d0lLE+Ul5TvfejfBp2L1BZdcypP+zfrG0dCNUL/gc7PBdBhOp
ZIvEqo1Y5xAeHq+9DDdxTVzu2EaMzx+WUh+Ww4vyyOObOjbCrn1To+BKOfBZ
NT9Ve7sRwS/3OF++IwPfOlPjvQaRUDnefCpz7VI0Hyw+O7A+EkL2vP6yEkvB
Wzq6QtAyEhuO3Bl5PrkELbuyRHOcI/H42ea6xweXQDC+6+Xm8Ejon5XzbVqw
BB36ptkbiyJBPrhmtHxICjK3ccP4dSTcS9MNvasXIql3n2HGeCRsRuw1ozMW
ovfqqzMXpyJxQObS1ZMbFoLVsr1C90ck0r5wf7q2eCFulZPRq4SjwJrXMrIp
kcTmUAhL6UXBcLy74nmpBJ79WO86tTsKdXau3dK5YnC65ZNztygKXpNn7i1x
F0P3oeT2lpIoPGDuvsRRFMMJ06NK6dVRuBinUh7eKYrNe3hneM5G4f6Z1n3T
P0UgrXB7v8LjKBQOORvK5Aij4MvbXu7nUahxW1SY5CMMrp75329Ho7BCiNtK
R1MYE1GMsFMfotCb7q03/lAIF1tKdNf9i8LB/eJvbTWE4G3l+9BNNRpG22+W
yE8J4NZSNr+eRjTKVT44KvYKwOTDHiNpRjTSx3PX7T0iANV9l+tfrouGnb5D
Z6uXAGafKG6Kc4xGZzPxVrOPH6Xx41K5KdEQd7hwc+4qH+XIuOyi06PRV7Tj
v89H+LBFUnqbw7ZoJCncb/XM5kP4Bbt3knnRKF6qY51ixYfVC5raDh+MRrXD
KkuBh7x4cCDFu707GvSH6WtIOi+uBCXp8fZFQ8EiWnX0PQ8a1eOk3G9H43p9
+rf8ezzYRoY9mHoUjdtqj+ibj/BAbcrNWfFjNP48PHOl34IHkhectONnokE6
L4hep8ODv1l2Ih0/ojFhVbSHKcOD+0vM+t25YzCZuelz1xc6tpgzrXctiUHb
39M/I/+jY6OolupDuRgU+m/Q1C6jw/WJGo/S8hi4te1auT2HDtVExWsdmjFw
GQzn6aP8ubiBXB0fEYOJxn1aV7zo+ENfmuWhH4Mfi9Y1woaOwSqx9dOmMTjk
0yv5QZOOjggheUPrGHySKDRZqEjHMQbf310OMeA9XLK6byEdm3vnO5S8Y1A+
MTb5eI6G8OLflQn+McCyhGerZ2hw9p/lXAqJAU/juT/LJmhQmfmo5xkXg42j
/ylUDNEgenlSqi6Zuv7ye/tVt2n4tevtt+nUGGjPSPy0vk7DmNvoA8MtMcj5
FLzm22Ua7ix73pKXFYNv3G8Xal+g4eLE4+Kh3Bjc0d1U972ZhqPnHiYtL4gB
ubxl2u4kDUXbBp0Ti2MgPMXDo91AA8d2QLuzLAZWwvWfa2ppCF3UJyJwKAaP
rHdfqq6mwfHltSnP2hiIl2YkqFfRsPbE1f66hhjQBAQlLMtpWL7p0olPJ2Mw
0ltw/OMBGkQoJ2x0NgaiMyrGKiU0/BQ8F7W7jeKjnXcniml4PdRkPXwpBj0v
eMMNKb595ISqclcMavZl/pGl+GJsA09SbwycdsWW5VNcp1c31tkfA8OUx7q7
9tNQuKDmmsA9Kv+Ph+5JUL/HGais8xqOwTDLJ069jIq/vDTr6LMYnE9h/xus
oOIPLQ7+/CoGhwMVcngOUfFrFa43fheD7qNeszcOU/H/zJPP/0Dp4c6I3dJ6
GoSv7fw7/DkGR4tN0mcbafhRuH1EeTYGz17cSw1touL32XIp6U8MzOZa9f3P
0zCgzKm6zBUL98MPmt500NA2zU4X5I1FtMDz2z+7aKhtT/TxForFkpVOOQdv
0pDqHLn4i1QsfnvapO9+SsO2rxqtb2RiERfl/on5hoZd5Z/dhxVi4cxoyvOc
oqHiZXrxpVWx2H+p5oUIFx1HdpgwmrRjcWXN3k11gnQ0rqTdPaIbiyaZnLGz
UnS0JxYI5xrH4tUnpe/QoqN7oetJjlksthfdjSbX0XHrgpRdrDV1P7t9/h1W
dDz9V7PLxTUWCjz2PstC6Zjbe5ZbNiIWIutK2g/V0EFfnVorEhML2gctvY9N
dIg8NgBXYiymuzVcL1ylQ16xZ+tbTiwWl64evfCaDjQP/zxTEIvJUN4zG7V5
YONxsLyuOBYqgrUx28144PozSK+0jMrP+N0JSW8ehGKSvflILDb7bpI9ksWD
HYN/pi3Ox2JjXPla3xEeFKSQhfrtsUhFz0Hdbzw4sDRHU/1KLLzvBzN2CvOi
Plg0RqwvFvF8frr5Jrzo/az49smzWIi13vNQaeSFoITVswRaHFS67K+HFfNB
slVwcwh/HIhBkb0VzXyQ3XB3qYcIxbzv1pkO8kGz1sdr3ZI4fLxrhI/i/HBk
xt6jacRBwkbU+Hg5P/a57rtR4RaHx9HNpWkdAlj1JCOF5R0HuQsnJwReCaA7
OFLJwT8OCiKbS/l4BfE90STjX0QcLgVyvzV3F4Rv0ZT2xvQ4iMrzFVycEYRy
v02Z7pE4TOVUzrtYCqPNYkHEnY9xkF3wJlVMXwzOA1MSjTNxeLqcNyotWgwT
7o+vZP2IQ7h8fT4OiUE27MzSNQvicfovJ23zAnFszwoYOLgoHn2BPR/iY8Rh
d6VdN9owHg6S4TtVLSXwXJ/FTd8dj1vJ27Zx5BZi6gJ8rYvicSh255sFJgsx
py/Wkl8SDxde7+edQQsht/ZUiERNPDJP5Mb2Hl0I/7XvSPlz8ZBfPP5SQXsR
nq31zVz3PB7HtY6YnbCXwpN1ZnMJzAQICzIsf/23BEOGkrNPniQgcWHrS70H
cqgz//ZRTDAJ64+uiS67pgwdjolx1Pkk/BsIXxJ4cRX2iQRvG2tLgkn9OYvJ
26swU5d1Nbg9Ce/PpQfHvlmF87d7TDdcSULxxYuX3UXVsVbZ3squLwlVAYv2
NIepw+yOt7PmSBJKNFP2pQprwEMlOeQzLRnNGqGF0p6aaG3fXxfHm4xFQ+bd
utGaWOx8/s0EfzJUDUdfrt+qicfpPyJGRZIhv3fCQOuYJgLubo25vyQZ99Jj
jX2+aWLj5nz2eY1k+CV5Gd3Zq0X5paM5HPdk5Nxqq9Hr0Ebdo8eOE57J4D6Q
9fJ9vzb6X4gs9vFJxpOtfOqFz7Uh/zGtQT8gGe+SezYc5NJBj4DDjdmNyfjh
9bryqaUOxM2/8W/anAyG1Z3OvgEdHG+1KEiuTcags9/36xEM3O9M9xg9mgxz
y9nQ0HgG5q41ybk2JOPTXPHHrykMuNxfeppxMhke5+8oze5gYHZ66van88nY
1fwue1MtA2ZqpWIJfcl4PXvR2eMpA0+r3u6P+ZQM5SijFn1z6n1dvoAhNpOM
Vu/u2de2TNTXEnfOfUuGTOP5PZnU+3tCY6bA31/JCP0dEF8QwMSCNunte+ks
2P923Pk1lQm1e47x56VZmNGmi39oYKLQ45vgBjkW+toOjdZTfmLmUVXjX3kW
HpgkaTq3UH7lxfgbKxUWYjN2z6VcZsJ5Ksv3iTYLiorr19AfMJHK12Y9b85C
kbnDJ1XK3zzL939bZ8XCobfE8Ot/TECUtsPalgVNyZntRZQfEpRyubLPiYVU
0ahf50UIVC9/v1p5Awvvvf6EGCsQ4G7Yd/+GHwsP59LcUpUJbFylnxQXyMKv
T9btNSsJMBg7T7aGsRC1s+/6ZcqP9RjLL7dJYGE0MPet7noCq7p6rk4lsVBe
/2z/uBmBIovYgGI2i3of5mLlU/7Ox/5ixVMOC+0btRuqKT/4wcdNLH4HCyVG
VhK/KL/oMvLzlEQuCz5d9mkrAgmcDzps15bHgpj09Qeg/OW2jVM5/wopFlPx
tKD8qGRK7lxxBQt/6drXt1J+lTdcYrPAQap+X5P/+5ZC4Lf7oR/bq1kgs4x2
+VP+dlS3ZSaxjoVH6iZa/zIo/6lsnDRez8KK743v120j0Lew72Pgfyxk3l5w
IGI7geavzyccT7HgWqNQtXcngfo3URuvN7GQvO7vdGEugYoHX98YnWVhQu+3
wtY8AtvPCbzUaGPhZc5VPu0CAs7sNUMCJAsWH64WPdlPwCyMdMvqZkFEfGl4
IOX/9dztB3/2sBCyzvvPg1IC8roh/eM3WTivVRJeXEHlpzxlEzTAwnCjP/NJ
JZXfwrTe4Tss/Le/oVXiIIHpmYKu6w+o3+M/8MyjmsDr10vWGw+zwOU5xQn6
//933a/rPP+Y0k+59nXfwwRudWsZaD5jIWx46xWrIwQut1y8cPQ5lb+2TJhy
LZVvnfka2VeUXh4Gn/1Mcf3+Oy37X7PgJTPwX1MdlW/2BobgWxauJX+1CDhK
oIA1djprnIXs+D275ijeHpqo8WuSBd7rEQkF/z+/cvvdmDTFQoRX8k/hYwSi
zHJUJ6ZZCFDrUNlGsR8hXh/0hQXluOiZlxQ7LT+o9Ogr1c9t14OJBqpekqqH
nWZZOPyBmbiJYj3us3K9P1nwjtVZ9v/zK/UZwyrjPyz8eecX8//zK/nXvUta
/7JwPI3l9f/zK8n7rqWaXGyYRdqP/v/8ird7RLKem40rjBHB/59f/T4buU+W
hw397foPeiierp0RKeFj4zZRaHCI4tfFW/cICrJh7aVuGk7xcBa/QLYwG9lq
6eNyFN9MLsn9JcrG8cULtHup+DtD5OnJEmwwOjdKBVPc7Ho8a2IhGzWjsTXv
qXrUm67+F7SYDaWMTzcjKK5gXt3yaCkbzxo+Vtz7fz2V7H47ybKx8GSmsPb/
6ykxlNa7jI1F356tyKDqH/XlPat1ORuXWgOdx6n++Y9u+qy5gg3XMztCeSl2
uceVUL+SjbHJRKXFVL/1zy6OLtFkw9vy2XE+Sh/qtbXvBHXY6G40TZuk9CNf
rBmezWTj4S3jn5eqqPokmwUl67Gx04NHXpfS35rnJi3L1lHxu8vxdZQRCLc1
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
H/arnKDj6YjD93//qPnXfShE+0vH/wBs7dUx
               "]]}, 
             Annotation[#, "Charting`Private`Tag$204248#1"]& ]}}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Coinc. per 4 min\"", TraditionalForm], None}, {
            FormBox["\"Measurement Angle\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           Thickness[0.006], FontSize -> 12], FrameTicks -> {{{{-15, 
              FormBox["\"-15\"", TraditionalForm], 0.024}, {0, 
              FormBox["\"0\"", TraditionalForm], 0.024}, {15, 
              FormBox["\"15\"", TraditionalForm], 0.024}, {30, 
              FormBox["\"30\"", TraditionalForm], 0.024}, {45, 
              FormBox["\"45\"", TraditionalForm], 0.024}}, {{-15, "", 
              0.024}, {0, "", 0.024}, {15, "", 0.024}, {30, "", 0.024}, {
             45, "", 0.024}}}, {{{-45, "", 0.024}, {-30, "", 0.012}, {-15, "",
               0.012}, {0, 
              FormBox[
               RowBox[{"\"0\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {15, "", 0.012}, {30, "", 0.012}, {45, "", 0.024}, {
             60, "", 0.012}, {75, "", 0.012}, {90, 
              FormBox[
               RowBox[{"\"90\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {105, "", 0.012}, {120, "", 0.012}, {135, "", 0.024}, {
             150, "", 0.012}, {165, "", 0.012}, {180, 
              FormBox[
               RowBox[{"\"180\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {195, "", 0.012}, {210, "", 0.012}, {225, "", 0.024}, {
             240, "", 0.012}, {255, "", 0.012}, {270, 
              FormBox[
               RowBox[{"\"270\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {285, "", 0.012}, {300, "", 0.012}, {315, "", 0.024}, {
             330, "", 0.012}, {345, "", 0.012}, {360, 
              FormBox[
               RowBox[{"\"360\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}, {{-45, "", 0.024}, {-30, "", 0.012}, {-15, "", 
              0.012}, {0, "", 0.024}, {15, "", 0.012}, {30, "", 0.012}, {
             45, "", 0.024}, {60, "", 0.012}, {75, "", 0.012}, {
             90, "", 0.024}, {105, "", 0.012}, {120, "", 0.012}, {
             135, "", 0.024}, {150, "", 0.012}, {165, "", 0.012}, {
             180, "", 0.024}, {195, "", 0.012}, {210, "", 0.012}, {
             225, "", 0.024}, {240, "", 0.012}, {255, "", 0.012}, {
             270, "", 0.024}, {285, "", 0.012}, {300, "", 0.012}, {
             315, "", 0.024}, {330, "", 0.012}, {345, "", 0.012}, {
             360, "", 0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 260, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"After Cyc: 0-0\"", TraditionalForm], 
         PlotRange -> {{-14.4, 374.4}, {-6., 36.}}, PlotRangeClipping -> True,
          PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox["\"\"", TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
     TagBox[
      GridBox[{{
         StyleBox[
          TagBox[
           
           GridBox[{{"\"Basis\"", "\"Parameters\""}, {
             "\"HV\"", "\"v :  0.98 \[PlusMinus]0.05\""}, {
             "\"\[PlusMinus]45\[Degree]\"", 
              "\"v :  0.73 \[PlusMinus]0.10\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7], 3 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}, {
         StyleBox[
          TagBox[
           
           GridBox[{{"\"Basis\"", "\"Parameters\""}, {
             "\"HV\"", "\"v :  0.99 \[PlusMinus]0.05\""}, {
             "\"\"", "\"\[Theta] :  93 \[PlusMinus]3\""}, {
             "\"\[PlusMinus]45\[Degree]\"", 
              "\"v :  0.77 \[PlusMinus]0.07\""}, {
             "\"\"", "\"\[Theta] :  -56 \[PlusMinus]3\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7], 4 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
       "Column", 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{1}}}], 
      "Column"]}, "RowWithSeparators"], 
   TemplateBox[{"   ", "\"   \"", 
     TemplateBox[{
       GraphicsBox[{{{{{{Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{0., 16.41742430504416}, {0., 21.}}], 
               LineBox[{{0., 21.}, {0., 25.58257569495584}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{117., 2.}, {117., 4.}}], 
               LineBox[{{117., 4.}, {117., 6.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{135., 2.76393202250021}, {135., 5.}}], 
               LineBox[{{135., 5.}, {135., 7.23606797749979}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{162., 6.83772233983162}, {162., 10.}}], 
               LineBox[{{162., 10.}, {162., 13.16227766016838}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{180., 9.39444872453601}, {180., 13.}}], 
               LineBox[{{180., 13.}, {180., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{207., 9.39444872453601}, {207., 13.}}], 
               LineBox[{{207., 13.}, {207., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{225., 3.550510257216822}, {225., 6.}}], 
               LineBox[{{225., 6.}, {225., 8.449489742783179}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{252., 0.5857864376269049}, {252., 2.}}], 
               LineBox[{{252., 2.}, {252., 3.414213562373095}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{270., 0.5857864376269049}, {270., 2.}}], 
               LineBox[{{270., 2.}, {270., 3.414213562373095}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{27., 3.550510257216822}, {27., 6.}}], 
               LineBox[{{27., 6.}, {27., 8.449489742783179}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{297., 2.}, {297., 4.}}], 
               LineBox[{{297., 4.}, {297., 6.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{315., 2.}, {315., 4.}}], 
               LineBox[{{315., 4.}, {315., 6.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{342., 3.550510257216822}, {342., 6.}}], 
               LineBox[{{342., 6.}, {342., 8.449489742783179}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{360., 10.25834261322606}, {360., 14.}}], 
               LineBox[{{360., 14.}, {360., 17.74165738677394}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{45., 6.}, {45., 9.}}], 
               LineBox[{{45., 9.}, {45., 12.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{72., 0.5857864376269049}, {72., 2.}}], 
               LineBox[{{72., 2.}, {72., 3.414213562373095}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{90., 0.5857864376269049}, {90., 2.}}], 
               LineBox[{{90., 2.}, {90., 3.414213562373095}}]}}}, {{
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{0., 4.354248688935409}, {0., 7.}}], 
               LineBox[{{0., 7.}, {0., 9.64575131106459}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{117., 4.354248688935409}, {117., 7.}}], 
               LineBox[{{117., 7.}, {117., 9.64575131106459}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{135., 4.354248688935409}, {135., 7.}}], 
               LineBox[{{135., 7.}, {135., 9.64575131106459}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{162., 4.354248688935409}, {162., 7.}}], 
               LineBox[{{162., 7.}, {162., 9.64575131106459}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{180., 3.550510257216822}, {180., 6.}}], 
               LineBox[{{180., 6.}, {180., 8.449489742783179}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{207., 3.550510257216822}, {207., 6.}}], 
               LineBox[{{207., 6.}, {207., 8.449489742783179}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{225., 6.}, {225., 9.}}], 
               LineBox[{{225., 9.}, {225., 12.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{252., 8.535898384862247}, {252., 12.}}], 
               LineBox[{{252., 12.}, {252., 15.464101615137753`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{270., 7.6833752096446}, {270., 11.}}], 
               LineBox[{{270., 11.}, {270., 14.3166247903554}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{27., 6.83772233983162}, {27., 10.}}], 
               LineBox[{{27., 10.}, {27., 13.16227766016838}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{297., 2.}, {297., 4.}}], 
               LineBox[{{297., 4.}, {297., 6.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{315., 2.}, {315., 4.}}], 
               LineBox[{{315., 4.}, {315., 6.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{342., 2.}, {342., 4.}}], 
               LineBox[{{342., 4.}, {342., 6.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{360., 3.550510257216822}, {360., 6.}}], 
               LineBox[{{360., 6.}, {360., 8.449489742783179}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{45., 7.6833752096446}, {45., 11.}}], 
               LineBox[{{45., 11.}, {45., 14.3166247903554}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{72., 11.127016653792584`}, {72., 15.}}], 
               LineBox[{{72., 15.}, {72., 18.872983346207416`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{90., 9.39444872453601}, {90., 13.}}], 
               LineBox[{{90., 13.}, {90., 16.605551275463988`}}]}}}}, {{{
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 25.58257569495584}, 
                  Offset[{3, 0}, {0., 25.58257569495584}]}, {{0., 
                  25.58257569495584}, 
                  Offset[{-3, 0}, {0., 25.58257569495584}]}, {{0., 
                  16.41742430504416}, 
                  Offset[{3, 0}, {0., 16.41742430504416}]}, {{0., 
                  16.41742430504416}, 
                  Offset[{-3, 0}, {0., 16.41742430504416}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 6.}, 
                  Offset[{3, 0}, {117., 6.}]}, {{117., 6.}, 
                  Offset[{-3, 0}, {117., 6.}]}, {{117., 2.}, 
                  Offset[{3, 0}, {117., 2.}]}, {{117., 2.}, 
                  Offset[{-3, 0}, {117., 2.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 7.23606797749979}, 
                  Offset[{3, 0}, {135., 7.23606797749979}]}, {{135., 
                  7.23606797749979}, 
                  Offset[{-3, 0}, {135., 7.23606797749979}]}, {{135., 
                  2.76393202250021}, 
                  Offset[{3, 0}, {135., 2.76393202250021}]}, {{135., 
                  2.76393202250021}, 
                  Offset[{-3, 0}, {135., 2.76393202250021}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 13.16227766016838}, 
                  Offset[{3, 0}, {162., 13.16227766016838}]}, {{162., 
                  13.16227766016838}, 
                  Offset[{-3, 0}, {162., 13.16227766016838}]}, {{162., 
                  6.83772233983162}, 
                  Offset[{3, 0}, {162., 6.83772233983162}]}, {{162., 
                  6.83772233983162}, 
                  Offset[{-3, 0}, {162., 6.83772233983162}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 16.605551275463988`}, 
                  Offset[{3, 0}, {180., 16.605551275463988`}]}, {{180., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {180., 16.605551275463988`}]}, {{180., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {180., 9.39444872453601}]}, {{180., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {180., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 16.605551275463988`}, 
                  Offset[{3, 0}, {207., 16.605551275463988`}]}, {{207., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {207., 16.605551275463988`}]}, {{207., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {207., 9.39444872453601}]}, {{207., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {207., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 8.449489742783179}, 
                  Offset[{3, 0}, {225., 8.449489742783179}]}, {{225., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {225., 8.449489742783179}]}, {{225., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {225., 3.550510257216822}]}, {{225., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {225., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 3.414213562373095}, 
                  Offset[{3, 0}, {252., 3.414213562373095}]}, {{252., 
                  3.414213562373095}, 
                  Offset[{-3, 0}, {252., 3.414213562373095}]}, {{252., 
                  0.5857864376269049}, 
                  Offset[{3, 0}, {252., 0.5857864376269049}]}, {{252., 
                  0.5857864376269049}, 
                  Offset[{-3, 0}, {252., 0.5857864376269049}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 3.414213562373095}, 
                  Offset[{3, 0}, {270., 3.414213562373095}]}, {{270., 
                  3.414213562373095}, 
                  Offset[{-3, 0}, {270., 3.414213562373095}]}, {{270., 
                  0.5857864376269049}, 
                  Offset[{3, 0}, {270., 0.5857864376269049}]}, {{270., 
                  0.5857864376269049}, 
                  Offset[{-3, 0}, {270., 0.5857864376269049}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 8.449489742783179}, 
                  Offset[{3, 0}, {27., 8.449489742783179}]}, {{27., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {27., 8.449489742783179}]}, {{27., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {27., 3.550510257216822}]}, {{27., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {27., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 6.}, 
                  Offset[{3, 0}, {297., 6.}]}, {{297., 6.}, 
                  Offset[{-3, 0}, {297., 6.}]}, {{297., 2.}, 
                  Offset[{3, 0}, {297., 2.}]}, {{297., 2.}, 
                  Offset[{-3, 0}, {297., 2.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 6.}, 
                  Offset[{3, 0}, {315., 6.}]}, {{315., 6.}, 
                  Offset[{-3, 0}, {315., 6.}]}, {{315., 2.}, 
                  Offset[{3, 0}, {315., 2.}]}, {{315., 2.}, 
                  Offset[{-3, 0}, {315., 2.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 8.449489742783179}, 
                  Offset[{3, 0}, {342., 8.449489742783179}]}, {{342., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {342., 8.449489742783179}]}, {{342., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {342., 3.550510257216822}]}, {{342., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {342., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 17.74165738677394}, 
                  Offset[{3, 0}, {360., 17.74165738677394}]}, {{360., 
                  17.74165738677394}, 
                  Offset[{-3, 0}, {360., 17.74165738677394}]}, {{360., 
                  10.25834261322606}, 
                  Offset[{3, 0}, {360., 10.25834261322606}]}, {{360., 
                  10.25834261322606}, 
                  Offset[{-3, 0}, {360., 10.25834261322606}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 12.}, 
                  Offset[{3, 0}, {45., 12.}]}, {{45., 12.}, 
                  Offset[{-3, 0}, {45., 12.}]}, {{45., 6.}, 
                  Offset[{3, 0}, {45., 6.}]}, {{45., 6.}, 
                  Offset[{-3, 0}, {45., 6.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 3.414213562373095}, 
                  Offset[{3, 0}, {72., 3.414213562373095}]}, {{72., 
                  3.414213562373095}, 
                  Offset[{-3, 0}, {72., 3.414213562373095}]}, {{72., 
                  0.5857864376269049}, 
                  Offset[{3, 0}, {72., 0.5857864376269049}]}, {{72., 
                  0.5857864376269049}, 
                  Offset[{-3, 0}, {72., 0.5857864376269049}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 3.414213562373095}, 
                  Offset[{3, 0}, {90., 3.414213562373095}]}, {{90., 
                  3.414213562373095}, 
                  Offset[{-3, 0}, {90., 3.414213562373095}]}, {{90., 
                  0.5857864376269049}, 
                  Offset[{3, 0}, {90., 0.5857864376269049}]}, {{90., 
                  0.5857864376269049}, 
                  Offset[{-3, 0}, {90., 0.5857864376269049}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}}, {{Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 9.64575131106459}, 
                  Offset[{3, 0}, {0., 9.64575131106459}]}, {{0., 
                  9.64575131106459}, 
                  Offset[{-3, 0}, {0., 9.64575131106459}]}, {{0., 
                  4.354248688935409}, 
                  Offset[{3, 0}, {0., 4.354248688935409}]}, {{0., 
                  4.354248688935409}, 
                  Offset[{-3, 0}, {0., 4.354248688935409}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 9.64575131106459}, 
                  Offset[{3, 0}, {117., 9.64575131106459}]}, {{117., 
                  9.64575131106459}, 
                  Offset[{-3, 0}, {117., 9.64575131106459}]}, {{117., 
                  4.354248688935409}, 
                  Offset[{3, 0}, {117., 4.354248688935409}]}, {{117., 
                  4.354248688935409}, 
                  Offset[{-3, 0}, {117., 4.354248688935409}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 9.64575131106459}, 
                  Offset[{3, 0}, {135., 9.64575131106459}]}, {{135., 
                  9.64575131106459}, 
                  Offset[{-3, 0}, {135., 9.64575131106459}]}, {{135., 
                  4.354248688935409}, 
                  Offset[{3, 0}, {135., 4.354248688935409}]}, {{135., 
                  4.354248688935409}, 
                  Offset[{-3, 0}, {135., 4.354248688935409}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 9.64575131106459}, 
                  Offset[{3, 0}, {162., 9.64575131106459}]}, {{162., 
                  9.64575131106459}, 
                  Offset[{-3, 0}, {162., 9.64575131106459}]}, {{162., 
                  4.354248688935409}, 
                  Offset[{3, 0}, {162., 4.354248688935409}]}, {{162., 
                  4.354248688935409}, 
                  Offset[{-3, 0}, {162., 4.354248688935409}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 8.449489742783179}, 
                  Offset[{3, 0}, {180., 8.449489742783179}]}, {{180., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {180., 8.449489742783179}]}, {{180., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {180., 3.550510257216822}]}, {{180., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {180., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 8.449489742783179}, 
                  Offset[{3, 0}, {207., 8.449489742783179}]}, {{207., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {207., 8.449489742783179}]}, {{207., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {207., 3.550510257216822}]}, {{207., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {207., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 12.}, 
                  Offset[{3, 0}, {225., 12.}]}, {{225., 12.}, 
                  Offset[{-3, 0}, {225., 12.}]}, {{225., 6.}, 
                  Offset[{3, 0}, {225., 6.}]}, {{225., 6.}, 
                  Offset[{-3, 0}, {225., 6.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 15.464101615137753`}, 
                  Offset[{3, 0}, {252., 15.464101615137753`}]}, {{252., 
                  15.464101615137753`}, 
                  Offset[{-3, 0}, {252., 15.464101615137753`}]}, {{252., 
                  8.535898384862247}, 
                  Offset[{3, 0}, {252., 8.535898384862247}]}, {{252., 
                  8.535898384862247}, 
                  Offset[{-3, 0}, {252., 8.535898384862247}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 14.3166247903554}, 
                  Offset[{3, 0}, {270., 14.3166247903554}]}, {{270., 
                  14.3166247903554}, 
                  Offset[{-3, 0}, {270., 14.3166247903554}]}, {{270., 
                  7.6833752096446}, 
                  Offset[{3, 0}, {270., 7.6833752096446}]}, {{270., 
                  7.6833752096446}, 
                  Offset[{-3, 0}, {270., 7.6833752096446}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 13.16227766016838}, 
                  Offset[{3, 0}, {27., 13.16227766016838}]}, {{27., 
                  13.16227766016838}, 
                  Offset[{-3, 0}, {27., 13.16227766016838}]}, {{27., 
                  6.83772233983162}, 
                  Offset[{3, 0}, {27., 6.83772233983162}]}, {{27., 
                  6.83772233983162}, 
                  Offset[{-3, 0}, {27., 6.83772233983162}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 6.}, 
                  Offset[{3, 0}, {297., 6.}]}, {{297., 6.}, 
                  Offset[{-3, 0}, {297., 6.}]}, {{297., 2.}, 
                  Offset[{3, 0}, {297., 2.}]}, {{297., 2.}, 
                  Offset[{-3, 0}, {297., 2.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 6.}, 
                  Offset[{3, 0}, {315., 6.}]}, {{315., 6.}, 
                  Offset[{-3, 0}, {315., 6.}]}, {{315., 2.}, 
                  Offset[{3, 0}, {315., 2.}]}, {{315., 2.}, 
                  Offset[{-3, 0}, {315., 2.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 6.}, 
                  Offset[{3, 0}, {342., 6.}]}, {{342., 6.}, 
                  Offset[{-3, 0}, {342., 6.}]}, {{342., 2.}, 
                  Offset[{3, 0}, {342., 2.}]}, {{342., 2.}, 
                  Offset[{-3, 0}, {342., 2.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 8.449489742783179}, 
                  Offset[{3, 0}, {360., 8.449489742783179}]}, {{360., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {360., 8.449489742783179}]}, {{360., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {360., 3.550510257216822}]}, {{360., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {360., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 14.3166247903554}, 
                  Offset[{3, 0}, {45., 14.3166247903554}]}, {{45., 
                  14.3166247903554}, 
                  Offset[{-3, 0}, {45., 14.3166247903554}]}, {{45., 
                  7.6833752096446}, 
                  Offset[{3, 0}, {45., 7.6833752096446}]}, {{45., 
                  7.6833752096446}, 
                  Offset[{-3, 0}, {45., 7.6833752096446}]}}], {{{1., 0.}, {0.,
                 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 18.872983346207416`}, 
                  Offset[{3, 0}, {72., 18.872983346207416`}]}, {{72., 
                  18.872983346207416`}, 
                  Offset[{-3, 0}, {72., 18.872983346207416`}]}, {{72., 
                  11.127016653792584`}, 
                  Offset[{3, 0}, {72., 11.127016653792584`}]}, {{72., 
                  11.127016653792584`}, 
                  Offset[{-3, 0}, {72., 11.127016653792584`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 16.605551275463988`}, 
                  Offset[{3, 0}, {90., 16.605551275463988`}]}, {{90., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {90., 16.605551275463988`}]}, {{90., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {90., 9.39444872453601}]}, {{90., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {90., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}}}}, {{{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 21.}}, {{117., 4.}}, {{
              135., 5.}}, {{162., 10.}}, {{180., 13.}}, {{207., 13.}}, {{225.,
               6.}}, {{252., 2.}}, {{270., 2.}}, {{27., 6.}}, {{297., 4.}}, {{
              315., 4.}}, {{342., 6.}}, {{360., 14.}}, {{45., 9.}}, {{72., 
              2.}}, {{90., 2.}}}]}, {
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 7.}}, {{117., 7.}}, {{
              135., 7.}}, {{162., 7.}}, {{180., 6.}}, {{207., 6.}}, {{225., 
              9.}}, {{252., 12.}}, {{270., 11.}}, {{27., 10.}}, {{297., 
              4.}}, {{315., 4.}}, {{342., 4.}}, {{360., 6.}}, {{45., 11.}}, {{
              72., 15.}}, {{90., 13.}}}]}}}, {{}, {}}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1: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
R3IbcArbdeTaREOHHF2iLGQbFMv/0lZwi4b9D7+XiWxjh25DaflDkdGwfa/I
pNxhDhCITV2/cDUa+i3v6h5e3w5s/vwJHNeioZ2jaOQnwgWrjkX/ThVHw+jv
WMW7tlwwvqdhMaosGi79SUq8W84F9X+/TFvXRkNib59tkjU32MbofODAokHy
BGMPdzUPZEVP1p3+EQ0eYZLxLg/5gI1s7E3WjQFZHeMHZ+8LQn+il3TqeAxE
eIvSP52SgF73CBoyGQPXxwfFK65JQMfeEwM9UzEg2JHSEdwsAXeWilJZZ2Ng
bFtV3bcZCcgK/zx/ZiUG/Fl9RwqIO+CQp0dnyvZYOO6n6/1BWRIwAzef0zqx
4HvkLGXtpRQ0rDqVJWbEglDlpe3zFFnYa2rhuXAuFojv3G6JnZaFzvOGIr45
sYCdWHYxyJKFl4SdmeaXYqHiJvVycJksTNn8IwsUx8LNa2Rzn9eyIFFecKC6
PhZ+pgjebSDIwWmr0a/vhmLhnCe5xeW5HLDnDRSafYqFd45x9l7v5SDna6/T
g8+xIKnEk+w6KgeFlLt9JeOxkCt/xFN9UQ4ar5+qD5mJhYHUqQVPcXmY/it/
amszFvzCO27eDJAHu6IgGZWdFKgaFrc/tSwPAn6v7gwoUsCAv2b49aY8vFfa
Y5SgQoGn249d5GHHv9dbNj2faVDA+UuZ1VEJBTgycKUwyIACyfUs5fZGChDB
3i1cYUcB09pbzw+nKIBav1KllSMFQpND9SrPKcDvK+e1/zpTINbq0425SwoQ
q+DhaOxBAUFnUTmbCgVINFrM/RpAAXMOhgmrbgXIjJXlkjpOAZ3G8D0qjAQ4
bJB6rfsEBVwSPmgcZycAD9OscvgpCsxYZ4i18RLgwvkWi4dnKXAi9GAQizQB
rtbYpLnlUqDhoY/1s30EuPk1kSmvkgK2Qg+EtkUSIPjmxAXDagpIsAtcMorF
65/IQ3Lfayiws32Yxz+BAHfWBEG7ngJ8qy/74lMJ0Cxy+8RAGwU2rnz48LSY
AN2HP9J43lDAot/L6U8fAYRPKQRnDFCg22daou4VAQLvRwwxf6AAmpKe4jpA
gG0STM20jxSwsfYRTRohgOUP5ZiJbxTYzn6PyDxHgGsSlAnPKQo8I9jpG/wh
wKx1p/3QNAUOCP047rtMgOxGR42Xc/j+og/Rkzbw+u504lzTPwqIhsyyLnAh
INfU66mxSoHSmiTGUj4Eoqf5XtasU+AF74S0sRACgraVNdcZqdB+N7zcfgcC
RMnXQRnbqVBbMCJWide/N23Fhph5qNAY4h3Uj9fHtGRfsyQ+Khw7V1o+rYZA
wc8VQowwFW6+73r1QxuBz80yE54yVBi1c7IUw+tv1V8h9kNyVGAfxoIeGCOQ
JNWI2ROowF3Lam5hioDMmUPXzZSosIbm6+lYIkBqucjzWAWffy8VvXAYAezX
5xMGalQYYnRYGcHrfV97sqfGHircQy54GzoicP/Mwxc1OlQ4KpXL4eSMAEsr
qwGylwrl6k/s3VwQqJQuFJcwpALvcmidugcC0zNdg8zmOOteVN3ui8A+GW6z
JAsqHDCR8M/zQyDTwaWJZoXvR/qsFF8AAioPZi7N2VEhSn2Quz8IgcRZHeZg
RyrothxDhUIQeClzKnrCmQr8rQk/zUMRiEwVsh9yp4Ib/+nihHAEOh4cwey9
qJDlb1d+LAIB3rlq9ZfeVAhT4xcPikTAR/ZviZkvFaqS19eN/38vczTkeexP
hX6pCGtuEgKMaWknDIKokBk8xt6Ls0Pb29mmELx/wh/VCDICZXM7PDXCqVAm
6feQKRqBv7KBL2oiqeD1Urg+FWeu3iePxchUENpcWlnBeWeYXGtqDBVKJ+87
EGMQQPlO3lmiUIF5rqyrAmfXps8VvvFUoN/WNJvAmeyuf+1NAh6/sfnP/79/
ZW7lXzA6QQViRHrq/+9n5RXLabUnqaAT/ML4//ezdgvHJIlkKqRvr+BXx/nD
fH1s+hkqTD+S+iuK8/wlnrCVVHw/fH4/FvDx2feFH/XPoMK/jkfzzTjLjT5z
GThHhcQ7eRwROOun7LKBHCqQ5yh7BXB2UjxrcieXCoYNTIlV+H4iXk3oS16i
wg535g9KOKdGg2bmFSo0BXmZFOH6XBct2UXLp0LCaeEXG7h+re1rUoGFVOiM
sg21wfntUTeh90VUqJSwUcjB9f/F1sJpfJ0KfWkx/9rx+DDXCjHWl1Lh7hBM
f8LjJ2kf/U+qggpcB4n/fuDxtb2mOkmvxvfTRInrx+MfDOc+Bd2mwvNMj9lb
uD+Sv0+/+VCHx5fvQFpMMAKN6hWP7jVQ4bSm2N73uL9evWdslGmiwu83XxzC
/BGYOuZdk92C54OsVfEf3J9i3RL5Ie1UOHlW/OULbwQ0Q+KzhzqokGxm1ixz
BAFLnsEU08dUOMPWMOLrifvT9QJJrhefv1Tze7MrAuOz2yw/9uN+CtlwzLND
YPVCAJgP4PtbpsT74/kkpPdEt+k9FQQSCMtyeL6ZnU5SuPCRCm8apraFmSNQ
I7y8fugbFVRa2Hl1DRF40ubwt/k7FdIWfEkn9fF8967/SZimwseoyzategjw
1IQNMszh+2Pkz6NpIhBjNHG3dQXPr3eS0/cRBPYH9fsqcsZBVNZqvQQnArnp
JWovuOKgPBTJ5WJD4PutiNUI3jio9FQkzzAikDO7/eJ9oTi4sXzbk0QnwFfy
ocdGMnGgMOg6mv+DAGcSH8s4a8eBgHScXiBGgOHi3Jl/unFgRgno3P2QAKqd
3i2F++JgAaJnvjYRYJBx0+arURxYDNK8BG4TQDFNPynMIg5CL4z+K7xMgJcX
7n8+fSQOnJk5Plr7E0D2fnI14WgcMNn4uS95EYDy3j72qV8ceNl/t8hwIYC0
6O/t3CFxkJSifDvJkgCkot0GV2PiYKo9lbVAnQBCNysL7qTHgUztW86CFQXw
aM8njjTg6/utE6gTrwBGllZM9k1xEP3cf58rSQHkhzfrelviQGn28qmIYAX8
fg5gbWiPgz6ND1VRrgpAVdFuTO+NAxG5wLV3egpwsfANv+6nOBAeMPVQXpKH
vniOV7mM8bDH5UT5ST950NE5ftDMLh78TQwdK2Tl4P1xY2VWx3hIiUlvrBaS
g+guDv5u53hgXJ7sLGWXg3rbq6MHPOKhCeExi/4tC8qhTccMA+OhyjVJLbdT
FqSvL9zVToyHbuqjpmEPWWDn8JdUqI6H4t82VkMSMlBlq8I8URMPnN06Y8cZ
ZMA0b/Hnjbp48PljpcM/JQ3JCqdbpO/Hw3xfpSzvPWlYNyxxkOiIB+QSU98R
M2n4Ez2czv8+HnQrn/ufiZSC3AfXo94MxoNIhWmKg6MUqDEEEc9/jAf2tp3O
wnulIDx7WYF7LB6ykyMEExilYOqmQCf7r3i4PjfC+PSSJJyZ/1j5dDYedCbz
uw7ES4KCTmlW6kI8VEqN77vvKQk+XeruLMvxEKAVaHsckYRN9n/w5F88tG8c
jxrgkIRi245dyavxUNL21kJufgfszzvLc2AjHmR0UmWCB3bAp8+Hl7e24sFa
6IXmzeYd8B/WtQjF
               "]]}, Annotation[#, "Charting`Private`Tag$205546#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1: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
4c3yAwvU+Bxciit1mGCLyjBMW4wAS1LVfgvF3KstB6KXRaL+Wb5hEcVrrnKn
+nNGIoi49OcxxWJbu4Q380Yi2pyZO0cx82/hNcs1kagyOjEppMuE4il3Vz2h
SATbvRVSoVjTQuKHgngk6CrXif+fXxlOjBRKykSiRGr10P/Pt8wP1qivlo2E
8KPRRB2KHdQiepYpRGKfg8nQWopdX6jEzqlEwsTcmsZNsU/KLN+EZiSGm5VF
Rqn5gyWaLw7oRaJLxehzA8XRd3fad26IRNuxroIUihO3mX4izSJBC9nCrkXx
Lq4VOQ3WkeiJcrb+QMUj++ITuRqHSAz93ep9kOIC54IHJS7UeC+EzeUpXt+/
IyHeLRKJ5b5Gd6j43vMLkbH3isTNLztibCn2+ujSudY/EmoC5gNPqPz8iNmw
49+2SPBYnMwwozhvfr1cf3gkdp3OCaz7/3nXLoEX9TGRmDHmzxSg2CNvSjk4
JRI3/sSmkJQ+vgu8GjBOj8THu3c2r6A4t7w1W2RPJCy4c+PMKT3dvlD2riM3
EqZ0i+2nKP25ae7LrzkUidASdd+7lD6/3ogz3F0cCdv+ioI+Sr+MJ9bFGicj
cc2yufuDPBM3XTTNeKsj4d469+7teiq+r6W+fjgbCbeqHrMuqh6yJ+Zsyhoi
MTVmslBA1c/Uiuq/Sx5E4k6/ZPRJqv725hece/0kElmbBlXspan6FEpza+yO
RMPcY+dpql6dZTfVhbyOxOpWe1JAnIkm86XbOj9HQjk84fA3qv4dO6ZW185E
QjG05YQTjdLrple3M+Yj8X29AqOG6hdigZeFtZZGIUH4VYkmPxO7M7w7jtGi
EPR5Q+lbqv+IcNmkbBeJwrHzxnUzHEzUF2jKOkpG4Ux2+9Y/VL8aO7FyN5tc
FHapDYV/p/qb7e1mjTCDKOScxVzsPAPvLaqHTRGFtRHsv3V/UM+LpwUHxS2i
oOD899L8DAOX34SMd22MAvtnBa2t0wzQfgsc0w6IwsS9PeoXRxkY1IlnYz8Q
BcnKsY/HuxiYugYPq7woNL6iNR7pYOCPDn99TmEU/i4ReZtB9W9x3Qv+qyui
YLHfIsawlQEv3Q+kZEMUsngadTSaGBjQ9dilNxiF16M+l5XKGJi8LteX9i4K
bN/129OLGfilO69MjkfhvjlZ13aYAVG9I0OWM1HgyVqxTus/Bjz0Oo02r4gG
2wla3LEdDPTrmf6JVouGjXz0Yq4HAx+bV22u147GlIXDZmNXBn7qvT3/wyAa
/fHlXB+dGRDWT/NMs4zG38p118WpZ467flPLAc9oMKL3qtJ0GOjTl0+p2huN
SEcXZfPVDLwwWDPX3x+NW/bZMd9u08FWdJa3dSgaJlGM1uFmOlSnsfbC+2gs
LHMdeNhIR+7JmM3pn6PxJHNo155zdJhyPK2nL43B7a8/a08X0XGlc39MhFwM
5A8fp5eEU/f7//34JzEGxt5+uaX8dFSazX7m547Ft51FZKC1DBIi1RybeWIh
s9s6wtZEBpZF0VcC+GPhqBH1UkFfBp8+fIy/SouFkDmH0lsFGWjmDM57SMWi
PfJWMRe/DNq625fWaMZifGucx45eaXz0LhUw9I2F1ZBVpbmXNFSSNxiFNsZi
xfaWAvV2SSR3n96bvCkO70yfjUuKiKGy75XDxy1xiOLvtuVbKYYnQ7yC7u5x
2HJh4irbX1FIfk6q0fGOQ2lXPM/vYVHc57J/MBcch2P0rgLFs6JYZTbLuT01
Dk61aVln9UVx9qp5btypOOhcM1e6FSCCZzdTNo+cjkP3feV1u7aI4E/rJXHn
mjj0zOVvsrEWgdMz4Yuq5+Pw62NW9ZySCOamp55+aYxD32J037UFYZjKFfFH
P4xDcAoje+KwMF6XjR0O/xKHzvC7Gy53CMFYMleVfyYOoRFWSqfuCKHqlHpn
w2wcNHuUtU7WCyG6dhfX3wVq/q1ebO0lQljaJLI7nz0ewmPxVQ3bhCDX4xDV
KBKPcI0+HRU2ISSuaLJaNKO4LLMpwFIQAzleY5WW8TjA+SZU0UAQ4Fu2x8om
HmecufYsVxUEt4DT7YKN8XAS/+A4JSKIcvqkJmNrPLx1pyd3TwvgvpEk3To6
Hnd6Tpx5VyaANQn7/hwqiUd5yZVU5lIBLA9ancp1LB5Lm4+Ykj9p+LXp+Pzu
8nh0rbl3PfIrDSMa9TMxlfFQvM7/Zf4tDVe+D350uBCP9yeltPvv0ODI0nrB
RcYjZ3zX1t5MGkwDSZeMe/Hw7xWSy9xBg/Ymu+6f9+OxEHTlsEkCDZIa/k/G
H8VDZXtP/I9tNEzP5N5te05d9/zVp25LQ2786MWM8XhkTpP5/II07A6IUViY
iMeUg4L1ID/lx1x+1cZOxcP96IfQW1w0eKqvqvL9Fg/L5Aurr/4lID9jUGb0
Ox7slo5Gez4QkHzXLnT1L8VP+BLHhgmseeZcpLiEBX92i1iPAQK/6kIKxDhY
YNu24nlaN4FHcYX7FvhYWONzKabqBoGb/pLscatZSL/24Vl5E4ErzmczPhIs
SOe9sDpXR6BE7U5anzALUkM2uX/OEAj9Nhl/lc7CvQpy5/4iAsvjTH3jtFkQ
yzyWtiGBgNbghnoJPRb0jL6oiMcSCLIx4HhswMIqDrmxVZEE7slonqebsKDa
ykgxpvz4rmdr55/bsZDZukSnfguBSxvotrs3srBZ+eSktQuBoXOS5YrOLLjK
n3g3t5GA4R4hs72uLIwW0G+VWBP4qcGVr+3PwvfpS0OzhgTWneR49y6QBTm/
tSmW+pS/52HTyg9mwS1k18HLOgQaR3+9Ho+g7jcj9R+qE3jvNK90JJqFfpmi
oSRVKn63vu9GHAuOeevXGCsTiCuaki1NZKGkTcGQJk/g5NKJFIsUFi4mvzeg
yxHojhrr+LaDBZHE6UErWQL/+kekKtKpeBDRsnuZBJQth+JtM1iY/bxR5DWd
gHf967a5PSysG7NusZQhkCvZJ3x6Hws6/G95nkgRmJzruv37P2r/xqPPRSUI
iAR2rK7NY4Fu6bzxgxgB666HQZsPsfCD5brvkSiBJIO2a0uOsPA3Jzr9vgiB
mjN3uS8Ws+Di/Va37//fRxG3vbeWsjDxoPnaUorZd7dc4ThO7f9i/x8zIQKa
U03L6itYaJkd46r4//dk7g2uPqdYmNvlNMxP8eH7l89yV7GQp+yaUSpA5U/1
wp+mGhaG+hY/61P87XitY+BZSm82EutmaQSkuaor+S9Q+TF3VGqj2HH7qR83
LrEgs+vvkksUp4+UW4fWsTBQ4Vn5f77oUHaM1kj93zB09QOK3zQXT5NNLJSP
TDnMU7xSttAkqpmFLO50N2NqPv3D+UdEbrLAI7tD6cT/z98W/xtvu81C/lG+
LkFqvaXh2frxd1moua5kUEPxw5dZByXvs7BzoCTWgdrvT9OM4cftLJxwGIji
oeKx7vJOjaRHLCh42qm9p9hVLHUfo4OFwy7czT1UPPfuT+zv6mThbjb7sldU
vBu/xyum9bBwy/sbzxyVj/e+Mbvkeik22dSrQOVrTUfEs96XVDxbklxTJAmY
6IauzehnITI8qWCIym9sVVCy0hsW2mnauzyp/HeleUvuG2Fh94akqOOUXto9
on6uHaXuf31rxo3S023dnc/aPrDQ3HTGTJ7S26XZ4/s4pljQHszVJRSpfD+7
4Fc9TdX3BZne9ZRey6/c1Lf4xkLiy1x5N0rPuZFvprPmqPp+/W/2hyaBLNup
h8wFFoIKRH1DqHrYIfen8v5vFt7GqMV+0aPiOSrmxr40AYOkf5yZMaU3L887
e1YmYGxdvt0vWwLQjyhl8CVA/WqlrTRVjzrCO1itqxLArz5yx8uZgGxv2bpl
gtR1k7dfhd0pvdm/zs+UToDSxNaK8mACf9ZPhtEZCQiMOpSRGE7g+4pfZvfW
JkD8xpqKbdEE3rWK/FyqkIAgzVm/fYkESIOtfhlaCfCJey7Qs5/AdZEwfRnd
BAwNWnd45BK4PJ9Mu6ufgA0NOqxfBQQqGkoeLkEC+ouKw3eUEUhTeKW62zYB
x3lrBjMvEdATc1u6yzcBfHRL5YrXBFQXggckAxJQXPZvMIPqn3J9iVdvByXA
8EHwo1SqvwoXFocthiVApuqW1IUZAnPcL3t2JiSg7YWo+0oeGup/ba5MO5CA
Bkft7sumNOha2Hh9+S8BjYeuHwiyoeFOvpFgQF4C1k2sX5B3oqGDKZtjVZiA
lSV8D6a8afiwcT5uTXkCPiVINJqm0iB6utSk9koCTj7XXqPYREOG3dDw874E
eIfOWhToC4Cz+FmZ5esEZGosv+tnJoC84fbNzW8S8PTvBUkTewGUbb/8sGIk
ASdWGxir+Qig8cTuK2GfEqCxNd7oaaYAPn6n7/63mIBa2zv8Y50CcDoeIqUg
ux39CR12AvGCWBP49NIzue0Y7k4qqtkpiN71GhtSFbaDJyG13+qAINyuLXo9
Ut0OmTj6ZPNJQfg8KyoLMdiOnRF1W7d2CyKK875AldN21F7+7RutLoScBGke
iR3bMaOW0qm2VBj37ft/8nVvh/nN4YDWeyL4Lh385Fx0Ilrrtu3V85SAYUhX
gBx3Eg6e/RAokiSNguwK5Sc8SXgX+8a1NF0aY2ejfkXxJ6Fmke+xwD5p5E2t
PNxAS8KmNfZflxVJYzjO+u4GqSSsOfMoqaFeGllpd6W2aCahbK1shPNnaXQc
aniT4ZOE6h6PvaK+MpBuyKxl+ifhsqtI88pgGWzvdU54EJiE095JSfORMpRf
+bqSNywJLEdJ99upMog9rmhQwkpCITvByVksA9qZ6tJL2Ul44Bpmlv5EBp43
j7oO1CfB6uLnsUNqdGywtWNzvpoE44BVVo46dNBfLV5sv5aEOc58r+VGdCof
2zjqbybBlDs7xd+ajkQFzcbs9iRUSAU4Pfah43BZ92rt10noKHxu4p1Dx8Nk
rqcFS5Mxbl7iYvKGjgvLbyUvZ0/G6hMO9jIjdOQfiWWmLU+GxpIPzQtjdLhe
6dsRsjIZqQ/0Owq/0PF+vFp+g0AyNgjOdUewMbDoapr9SS4ZFY8rak7LMqCl
tcPM0ikZshanZudDGejdYSrPsSkZv1UdA6yjGIi/x7X6/pZkjIaSknlxDFxx
LBky8Uym+voLz4UUBuTDr6YYBScj1/rac4ccBiRPfLmsmZaMtl1Xtn+oZeDm
WFPx9/Rk7F7+wHn/BQY8FdN31mckY8L1w7j4FQZKmnnsVPcnY+vdSmnZawwQ
ves/KBxOxtK3J4Yu32eAkytInFGbDMkE9+bSQQZqHBWWvTuXDB1Sc2fmMAMW
xTMTJy8m40fbm92+7xnIZGRck2xIhvilm4pzHym/ZVThIno7GUUrV/gXfWeg
LGubXj9J7UfzSaTUHAN6TxSlS1qTceTt/r3lPxlIdL/xWeBRMlY1HGnf/peB
b/Gvslf3UutteDpRtJzy/80nYrpfJoNrKuDOHU4mlJeEuOb3J6M6jZE4yM1E
5MEfDN631PXTnqxZPiY+nFlzh3MyGaWrvOQKBJnImu6vfjCVjKAB3Ux3Ycp/
a53K3fclGdJVhSU0USb87ql4sP9IhmJX3mSIBBOLnPNonU9Gh4G35D/KP5c7
3l6X+SsZAU85/h2g/LVh8V4+k7/JiJwaz+akM/H6jf2Pf/+ScZhj9/VUBhP/
A17X/cE=
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$205546#1"]& ]}}, {}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwVmnk8VN8bx+1JSEplX2ZuIbKmUtwnKvvO2PdlEJqxjLFLWRLSQnaVJUTJ
Gi0uIkLKt9AmJEnakBn77/7+mtf7deae5fN5nnPOc19X2uOspTcbCwsLlZ2F
5f+/PiFqbzc37bBEcoZUMe8mqqg77ay0ZIeJzsj1kD5voIuCudMuc3bYoJbA
qfS6DfR83Qbjyagdtm51mJ/usIHe/NsrEv3ADtO6Ov3WpHYdfX/WzY3pYYft
ieub1A5dQ2+hO7/vt7fDWEp7jm81W0N9t3dTbc3sMPs/Ucdt5ddQxr0D55uO
4ePr30PjJlfRXb+WykJ32WGPlG/c4rJfRU0D0n/86bLF3uVUscm7rqBCxyFU
6rEt9uhp/hdjnRX047aFNbM6WyxZoliXgaygZ+7a8d8vssWutD2w/vJrGU2Z
JagEhtti0pZbTCWSl1Gz1uGWgkBbTLwppj0haBndnXpRp9/TFqvSbT1BIS2j
ZXK/rQ6Y22Lbgq3Fvu1fRjt8W2nfZfH/D+nM6b9mohePBG7ulbTFmuv2x608
ZqLm3FIp+kK2mFCAaoBGJRP9fCcx9w6rLZa9pjBjcp6JlocfkRlhkDCWA8ZP
5ahMNEjvRxXXLxIm6/g7OtOVia5Nmz/2fk/C+r7PaWxqMdFnTeynsl6RsI8z
ZtQtB5nopaSmgWfdJCy6QU8wX4KJiuwT+0yoJ2Gh23pXvFiZ6MS/l2SrShL2
WUQxIn+BgVZ0nfuTUEzCeHLe9zlPM9DD3t9YJy+RsJq5OPOkAQYqcPKNuvY5
EqbIY2W0jDHQWZl2ch6NhCkY+PPtaGSgz1jv5S2dIWH/yfE9GKhkoEXjeQOW
7iSMorfHTKmYgdLbklnuk0hYkjRz41AWA7UsClXbZkzCJGbqhicuMVAuJ9Pc
Tg0SZm9SaioXxUDHNY/1SyqQsH3CHTu7Qhhoq7DsZpQ0CXN9n2zIFchArzN3
qY7uJmGvc0dZf/ow0KARVm91XhJGF5PXi3BnoPpNv25ksuLtXRf23XVioDJZ
H17MLdlgJ2LOVyXYMdC1kJ51/Tkb7HG21cdNawY6bNmoXDZhg4U9beiUsWSg
tSq3PVlHbLD+b0yfH2YMNFXgcrZzvw3minL02ZsyUK/fUb0t7TbYESmThUAT
Bqr90ndNqNkGE+P9OLEf5701NkrB1TbY0TtGN5Jxnr+k4/Hylg2W19QjmI4/
3++vlCV/wwaTkhG0PGLOQMsMxHqS0mywM8t0i4v4+LGyW1cnz9lgHNHj2+Jt
GKjdliVFNNwGyyE+jRSzZ6Cq05Nu+QE2WESzcLaLMwPl7Rq8xnC3wfZZp1uf
9mCg0yWPu61sbbDdqafu/kdmoFhC5fJ9YxsshcKawRXEQPPcsxV4dWyw++2C
v8dCGWgonHf1PWyDtTGd25yiGaipJOXqMwUbzDHE4VfcBQYqu+HUJSVjgwlm
C/rrpzNQtk8GzOg9NtjSAkGyKZuBfnykceAdrw1Gj2hj9txkoE15BJdDbLg+
eZXj8XcZaGaEwJUrDGtMOUGz7VMTA9U9PLtkMGmNFShmrSQOMlCx3SNy5SPW
mHzPgtTrjwx0abHTiW3AGlMwJ7zGZhloVV1hR2uzNfYtO8EynZuJCh60yDiQ
jjPHoMyIEROd49VuT06wxmg+qj90XJho9w/5xS/h1hjHqWZJSzx/Iis5HAo8
rLE5UhTBIZeJThIfInxHrLHVxosl2/4y0cfsZXZ+itbYvpqwqXTuZTR78sql
LhlrLOl6tXCd1DJqePPM3xg+a+yLcHjqZ8tl9IGo5JNfk1aYove0fc/TZdRc
P5KyOWqFmcanjfu/W0Z/hb4lCAxaYXc5a7hzF5dR+ZeXUlUeWWELd8XP3FBY
QW/HM21Dr1lhgU99YneXrKDXv76eX9a1wq4MkG7NVq6iqoKK5TyaVthXrcch
CgOr6CvtFHtRZSusLmIVWfqzivLlaGPHxaww+ekMISnNNTTJ8G563KIlNirQ
Y9c9tIaG378gy1lmiWmfwz6KiG+guz9+/iCUb4lN55scfKi/gTZwH7u874ol
tr/3Rc5o6Ab6x/3vP70YS2ygl+F56+UG6rvLpTPVxhKbk/pmZJCyiTpEHHYR
4LLEhsiMqNcXWUBLd/aaKNkCi74vvG9Glw1aKxjyLs4W2Ak5HXuGGxto8HN2
3LSywJy+p2WisWyg/E7yDwIW2PqHeNXIFjaQOWtjrCxsgb3/3KF1VZUduPJx
q/rMMQPduJ+iShzwaj47LEjJHLv3nefrohkXGNuV8j5AzLGDsrH/6kO4oPfJ
g5IFUXNMgSvnXOkNLuhI6X9N5zbHCOyJbMLjXOCnxeHE1WmGzb94b6QfsgVU
s973K+03wz4pKa+fv80NXSeT7yX8NsGUD2udjJXZBlOKu1Xc35tgbybH8v3M
tgHbnrJ6tMsES2n9mnchehtof+94uJZngvHy7uXSH9kGD9M3OminTbCPx6mP
ljN4oXo4bMS/0Bjj2i95v5aLH677erFYGRlhKg3av41TBcAj7YQl4Y4+dqZ8
l6F9704gNskocrToYp1T7PcvqojAHzs2zrISXYwlc7g52EQEHq9OfDyVoYut
+GUybf1EwObErbRkT11MadNJbvctEUjql5zj4dfFcqem4hwEROH7pNjdHZ46
WG/Ph4n+n6Jwb/seOUm+E5iVSXps1W1xoA7tNgztOI5x9UUaXA6RggurRSkx
Ocex49o+hybipCCbuP95UtBxLAeyJOXTpKCVdvhkrshxzP+Ke+LNUilgF7XT
fhp8DFu4E9ci9lYKsjxzVbkJmlgq4ih+XF0aWhZFRQvOH8YmY2Gvz6w09IuX
2pfZH8YiuZOtfP5Jw9hphZx7Socx4Z6CMw4sMsCWe1yo/YMG9tfL5I34bhkw
0nLePq2mgSl9UlrjPyEDnxKL2JWn1DFZ7v23k67LAOse6bnOk6qYIPnYvLIK
AYjhHgrF4qpY/M9/lyaOEkB/pCQgckkFe3nb+kiiDgEybuz7qVyhgq3SrqaU
WRFAbK/Cr8JtKti/sLMG+mEECFINGv9dqoSlkEZquZsI0Dj/x62cpIRxCyqL
fnlCgLW6kAknbiVs5EvLrftdBLioFjHZe+YgJiql1SvxlgCl6hemSlQVMQES
9sdqgQDvNfJmbDF57HR3ahCfIhGkGWJ+/MHymH/DGTZ2dSL4Nhd/f0aQxzKR
f2+/axLh3+GyWZVkOezRu6vcl/SJIHC0dm6bqSx28xi7pognEU4f6/7T9gHB
OPsXhd2ziJC+qk+lpSOYxE344JVPhDeP+v4qoAhm76kqan+LCO7HX8/n3iZi
nLM1s4I1RIjW+rgY4kfAtlJ+3XjRSYQH6DxzP0MKo3JrbDvxC++PfqpP97YU
1vqu7XL9AhH8HuQUuppIYaVWMnt2LhPhxOnYCwf1JDHSrYDNHHYEpPj27uG7
KYYNvJVceroHgdHYp49OLoliXkxr8xwxBDL/eLlFG4ti7ZRCKxdpBFjePKj8
wRTGdqdUHKiVR+BzntHxFxZ7MNe2R1z+xxHI5p0fZ63YjYm4h6ffAQRMY3MS
j24IYRbl4kGvTyLw1P3ry4qqXZjdr669s8YIFMnGuSezC2JUZ5A46IQAKQ/h
arPfgRlcGYsZcEWAn7e/aum+AObSzbVg54nAypjKTN9DfkyihmVTzR+BlgBv
vov+WzGCd8LLZRoCsuZ1JOZubmyYuY9nOQKBHLXNYnInF5YRPyk9FY0AfSVH
9bQYBzaTJN8fk4DAzKevUY09bNho3xlLhUQEbNtVu4hhrJh7tWJBdzICAQK5
97kK1ttihRM9n6YhYDyiqvN1caVNYUB1WPQyAgeK+t90mjDbchKuLHldQWD2
AMtK/OZ82+fyaIXWLAR653PTXO3+tFWIJR3pvoHvlCFk7WiPH21/mjQ/P8lF
4GXGy5SlrvG2H7cv/ThbiIDwUQ4n8u/htlC5bQbyxQgoVg4bd5b1tDHM1pRf
3URgbCbtolV/O6rW+O3KWAkC83aukfcT/kNzQxQ49MoQCNViKh2SHEO3jIcv
5JUjoMWeZSJV/R3FPpdrcVYiEBvmLuu58gtVkNO6JlqFwPhCNqsVcR5NzUEd
xe/i/iquB4X2LaIKhvRrPNUISPt4fswKxu8xMWNHv+CsU9xr0Cy8gqrmZRvf
qUHAY1SpeRRbQz+qzveS7iFwfkc2cYW8iUrwUGr/4myJbPSkb2GFo0KPN8Lv
I+Bw8Rs14yQbaPru6Z3E2f3nK5HL59iB+mWg6FgtAr4WrZ2Xn3JA8pVDcQk4
UxpLAjJXOaFhtNuvGedw4XShK0e2wOMoMZf3OMfG0J5eCeOGprwFxx84J024
kq/WbYW0+gOeszinnzIQuPabB1Rvd4eM4Hy9UrXlmgIv3Ls5k16HcwGfmMd1
Pz7oPT36IArnEirntqxyfrh0ceOzKs5Vb3/VZ33ZDmGt03tH8fmOigUcNMoU
gOAkbeczOH98OZ7Qd3AHZCy+rZnD1zsebzNiNLADyF7F25xwnlJ9caD/jCA4
pt0Pb8H1mpnSjjfm2Qkx4VoLHDj/yK5/01+xEw6fvx2njev7S19WzkRvF3Q6
OUj44H7MrxTEDHzdBQYbbK+jcL+WqncMmVwQgv67TrlxuJ8rLkn7XsrshqHf
BhHUCgRYO88OvnTdA0K1u1Ikcf85wqYIZht7gBDv8ehDKQLc++3pgwV7YTiR
uD0Jjx+BSzrSr94JQ7SEi0wZHl+7tJrDzOkiwHHN9pswHn97fh948Wq3KPz3
r2ckGo9PCSuhkNdWYkCvydDjy0NAhjP1ucW8GOzsDRvQzEFgX/OG6FCmOPy0
WrlEysbjV3Tm2dCABPjkh7fbXcXzneq8bbZECvw+L0SlXETg5osbh+QXpICN
/6KaLJ5vtwlDrv460rAz2vtk0wUEyt6ebpgdl4ZP//ouFMYhUH1U2fmHOAGM
i7K25YYicO+qf/KBQALo2T/dU01FoPZH6YMzjwnwWNSgvCYIgYZCYa45ByJU
Zlx2j/ZF4BEr+/05PA/1pCKW9R0ReNH7luXXDlmo6kp3K9XC/XWM5St2lYWg
aqcvTUcR+PZzn4h5jSycahhff3gI11OQrlanLwfXFs/tSVNEAHUQ8aHFyUMI
uqMuCN8vG2Zd+jbmFODd2dp0BQYROqK3jN7XVISvWtu0j88T4TV/7ZRbiiKo
q6ZsPf6TCL9UWTc6CAfhm/zAbt4vRJCLKlFOdlCCiRapnb8HiDDIufhiy5Qy
vCy8ptF7kwjDpvoW4zwqwJv1aP/nPCKM3SgYeaiiAgeS77z5ep0Ic3Knpvzi
VEB6Yzi9K4UIPKbZ630iqhBRxfJw8CwRTmYfUc60UANxyQJh4WNEaNkXk7W3
7RAoP04QHOkmAE3te7D290Owk8C5FPyUAKpgY+61UwO6ZluebDQSoNpecVst
WQNKo7frTpcSoCjtU7yewGGI/Wd0kHGOABfmtQJo7kfAebNfSwU/v82fbui8
YT8GhaLfHl8tkIFFeWDqEQHuu66YvzkmDS+yhKf/HgY4x9E8PKIsDTdZFv7L
NwLoaP4PGUKkwWi47P7vYADjVeuQu9ul4fa5beQb7QCTa3pCC5NSYDE6/Hba
5QRkdgwuzyRLwb3EwPrEXB3gTwjU4suRBPJ4XlAn/ykw5sn2nTgvBim8v55/
9zCE7q3FUSZXhSD626/c4XBD+IqdOKIdLgSUjt9nOtMM4S8reueQkxDY0v9u
L2wyhCrpjYSj+4Rg39SirTmPEZQ3HojJb8Xz9NHqt6YHRmAUu+f2ytRO2PDf
yn2BxQQUYytf1Z0QhNBeor5EkRlIl1jwgCk/fOY2EL79wAzOBMVVisjwg6F+
4CzShfO0Su3eJT6Qet6YpjhnBlp1RZrxRXzg41HiKyFuDnGOhjJcf3lhp5t6
jeIZc2jrHzVXK9wGAY4kDeMtFnC24cOi+q6tIBM1I8G/wwL491dThX5yw0he
5JZXIhYwb3CChdDNDTrvi0atDloA/MoI6aZzw177b5GONhbw4C5nksb4Fugi
0dv8Syzgc3j0O2YzF0hY5ulfRC1Bt+zR+89pHNDuMZ8kYWgJI8ntLlJ+HOAV
YthVb20Jd5WoncWnOKDq+sqJMT9LeC9s6+W0yQ4aIw7H1K5bgqlztdPbMHYw
cRI9+GnGEjpmPMS3nGWDPwEhAcELlpDMNjtoZ8YGV2P6qrZsWIKePmn5pxIb
jBZF7VfdaQVMrtqOL39ZwWvig1SylhW0Pq+8xBHBCtE+BTtVrlpBz4mSH1bX
WUAyfNGiu8AKJiKG51bpLNCRbJzpeMcKDE4ukX84swB35Rpv0mMrOKyENd+S
ZYFrP5y4PkxbQdQXdtGphE20iiK+fOGYNfwTfyNYyrqBmpwLOyxy2hq6mFWc
e9+so3+uDITdN7eG3X/jWqXvrKMa9THz77ytoS8q4y/DdB3t+Pfpx8FMazA8
eYK1tWwNfRdZNDY6ZQ3EDzY9X86uog+1UgpaflnD1t8n08F0Fc1mCXbIY1rD
K+ugbKLiKmqddGrYkdcGmlUdKefnVtCXV+YGxtRs4PFK+vRt6gpaYz18qU3L
BtiunqaD9QqatgczuKlnAz6neuTIh1dQg8JrXe6ONpD6o6TbfHMZfVah+WQq
wQbIkbN38rKW0dtniFFdaTaQdfXoZlL0MnruIP/R8mwbWIIagQ3PZVS7YaKB
XGUDdI1K0XT1ZbSlLaV69rUNaBiX3FX7yERzEoL9+z7YwPLGakPkcyZKO+Uk
W/3VBjKtxl6Z1DNR9T6l0sBlG5Bwfjiak8ZE7w0P5/+RIgHzTalw9ykmmpaL
2b+WJ8GthdD71ENM9IxT1Z46dRLsycwNrEKYqOxkzLUQfRJ8npx417mFiW4p
I1tYW5Kg1GEaK11moNNki+2HnPD+fFh0ds4x0JKfxEtLZ0mQcKSMnjvEQBNq
+Q1GIkhw40eZy4NuBuoWwuR6eJ4Eb+vuoLaPGKjEcl9CxA0S1New6JuUM9C1
R43gcIsE7UecbxQWMNAPscUbmndJUK3ZpRJ9jYHmcIRErj0lwb4v0mlTCQyU
9tzpyKceEhSnlJ8JimKgNqmnl54MkWDUh/Q2KZSBqpsoNxR9JEHJqNWwYhAD
FRQQCY6bJsHJ1QeRnr4M9O8Qu7LbHxK43Qgd2O/JQF9l/fwJKyTYxps5GunC
QO/ZjdyV5rCFz8e+lzo5MNB00XY/Nn5bEIy20RwgMdCAsar9X/bYQmJiXnG/
FQM1vHX9a6e0LfwkB713sGCgcl6xJaUHbOF3bPjvcDMGyr3f1z3xkC2Y+hlP
Ekxx/b5bSPqgtiDEFtroYsJAu6qPfTptYAtPHL39ZXEuPYvk77eyhegnyazn
cE5Q3W7P7WwL/rdVI33x502nnwY8JttCSvLjaxzmDFQkLyieEmwLmRKh/vqW
eP8mEteJMbbwwcFwWc2Ggdaxvrwzmoy332g5+tyOgcY2xjxKu2oLHOVdBDZn
fP5+ioNQaAutn1drptwZ6G7xT5OLd2zB6ljIQBCZgU6+SluqqLMFEe/+sJuB
uD4XjvM4P7GF8+9VciNwvSOPzInv6LGFPVvtZFdwP07P5at0DdlCLSVGUOYC
rv9No1MRn2xhsMf/1N80BjpmtWqnOGML9nIhNeRsBlq15W7AxLwtxGiEHkq8
yUB1zvJcN+C2g/jONIPGJgbKT2i9sy5oB5Fsu0ufdzDQ98N+jx6I28HC+6hH
8YMMNFi7d1JYzQ5i+5/WTM8yUO15+tKAlh3Ix/kbXcPjladclidB3w5OJGce
mOZmorf5UlRmne2gmDgvGyvHRIPaD58q8rWDxofu6x2aTFQz7JudZYgduOk0
JNQYM9Ghj6fjW1PsgKBwbiM4mImyVXMOptbbQWc2ebO1i4m+dG2c1H5qB84J
Typl8fzM2+m9NN9jByFvows0F5ioatQzcccxOyi3vHfJkLCMehieDziw1R6O
/ua5vuvSMnpwQzX+8057wOjTGUXly+jKg8lr1yTsgV9pla+vYxm9KqzzaFXN
HngM6/J51pfRjhkWnn4XewgGl1axiBU0o6BWPN7PHs77rJbV566gDuZuKuqh
9oDofluabV1B55vb7Aou2sO0eFLR0c0VVCY59k5Agz0EhfdeNr28ip5D1k7y
8TiA24veLv6BNTTo5nLo5V0OENjcO/l0aQ11EmWU7pB0gEv6Xy9wSK+jR3bM
c+xWd4DvT/b/MA1fR3+tfXsm4eIAwaKv197Kb6AOb/47qVznAP9dfLjVtmYT
1Td7HVr32AEsz8/sVh3fRA+9eFmq/twBsv8dUH25lQUEsF6Oox8d4PWhzXP8
2izw/G7bsxNcjhBnPMgYr2QB9fN3T1o5OMK57j33czNYQWajIvStlyP8LHNZ
9q5mhe0R5aW2Zx3B1QzdT3vBCrNBtzicLjjC6U47efctbHDL4cYzr3uOECuy
luVwgQ34Vc+fpLE5QX5hUGBxKjt8G3c4mVvlBN7I94Hwbk4Q4J9d8GlwAlE+
bsK975ygeSyiRP2pE2RyWhfs4eOCtKwbbK9eO0G3cM3fBGsuUDV8g3EtOwEb
i+bL+q9cEF1vohWq5wxpSoFWOju4YUcSaJhNOcN+K+ujUpd44NiBfbKcEq6A
Tk381VzeDpYGUYrlsjh3Wn3wExIAX/IrVT01Vwjd3cpqcFAAsksitS7qu8K3
WwZt2m4C8Ed00JIvxBWOaFb+Y+0SgHJeeoxQjyt8YqZdabqyA7gZXt8Fj7qB
ucv4MSONnRAy2qRN+OIG1ZxtdFLxbsAmMz/US3nA35ku6dRd4hB58IDCFcQD
+ggP+I0VxUE9sis6SN4DvpG1L3GeFoeKHSvicuoeoKUyGO0SLg6Z4OlWpOcB
BlV6+iXvxMGt6NDXlCAPQLPVfpoXSACLw/tfzo89QPmowdQ5XiloLQtFj7V7
gOzed5bKe6Ug9C9/5t5uD5gef94+QpCCmRRdlf8GPeBhTa/hjmNS8Kq5OkT/
iwfUq4XXKfhJwU2hOKYqjyeo7dU1ne+UAnhNYOO284SSRSPy/hBpoArdWjd1
9oSbxiJIQyx+P7WXWM7y8IQbOi35h1KlgX1y7x9CoCfkm2eY7b4lDd3zfGNo
gickavKJGb/E77e7mC3h1Z6QcXHnn5B9MkCy7ad+Y/GCKJci3e0DMpCUbxB4
kMsLdhxEazhGZKD5c7dv2DYvuGn/48uPcRnY69vuyr7bC15pxnhcXpSBD/Qm
E8kDXvAlZ8NCVpQAbnk35WxtvEBjMuTlZW8CnPkUOtFd6QU9a065Vb8I0LrS
WlB/zwviRN/lyC0RgHsvq93Nei/Q43wimrdOwPeN9JcRT7zg87PLIWa8RBh/
XvZI4bUXJJSpzWyVI4J13XDWVaYXWNDu7a9zJcLtQTGLuHW8f2kRNl0fIvyd
8+ANYPMGVefZS88CiJCx/3fCKV5vuBFVGJ0bQYSegi0UpqQ3KOr8jb94lQjH
k48Yuuh5w7HMxdnwdiKklsZyGhl7g+vO04f5nxPhXfsz7LCFN0R7/Yi63k8E
2pr54R2O3qBWfuEZZYQItVQ/4rMgbxiiTR4izxGB6JS3IZftDaEd14R0dyIQ
HDHesjvfGyKvk06+2YNAe/a+MPab3mD5p2LIGq/fXF7X/fhY6Q0WsbxzBASB
nNN9o5efeAM1RPbAMl7/8ams1f2b8obH3M18EdYIDJ1GhI1nvaEwZHWvnh3+
fyfTuNu/veHlA00+Vie8Pk65aWS24g0Pd7dcPuKJgMbnk1MV232A9d2cZCMF
gdXFQMPNXT6QfWRL1kQIAhjPjVobER/o8O9t/P/7LCON79FsiA8QDBfG5qIR
cEtPF3LS9IGlviSRMbxeRkqaoupQH4A+Ew1yKgKzDz9PcJ/ygdL8+r4PaQiE
TancazTzgYSQZpPkKwhorjjs4rXxgZnEf0pPryHAInAh0sPBB0yyBcPHsxBI
PTZ8eru3D6RslZb+louAmcVmtbe/D1jcl4rqy0dgF1l25+OzPjA+JyqbX4hA
8dXIz76RPiDyUOTM2k0EvCpKTrXF+cDdjfzl9NsIyD/tvyuU6AMxrrv6eUrx
+vi7BL3jsg88dhlX6i5HIGJTb2xvlg/Macg84qhAQFuIevJsng9YVx2OPViJ
19sH8qq6in3gxaFLNN0qBHqhU0CszAePk8ZbuncRyCDN0YKrfGD7+Zj1g9UI
WAcIfeq57wN8BqPJnDUICCdo60o2+sDske/az3Eeu0GuDGv1AcoSq3ToPQRK
ajK397f5gGrgbQXe+wj4draEyXT5wPf/6G6XcVZ8N/mB/sIHHO+7P1rHef7X
Np3BQbz9Dfm4bS0CzRyHKpC3PlAT8GwyH+doERf+6Pc+oLYwVtOHs45ycujQ
Zx8Y0DQpnMZ5y+na97JfcT0C/qudw7nf8R3EzeLM7TXzCeerVLY7b3/7gPO0
5MlWnG2TD/Ap/POBenXSs3M4ixVahySs+ACdfsFPHeeJuph3o5s+MHmJpD6E
z6+8pxxV4iTDUkE54ojzmbHBskQeMlw7EKM9iK9XeZG57eN2Mqhv2RF/EOd/
W2WCVYXIcNj4+Q86rk+rpNFoiggZnrmpnb+H6xl/KFT7syQZTP/u1h/E9T5l
VFh6CCFD1Zz78Q+4Hzzu3Txp8mToilP1GML9ekX7TZlUIsOcwNtHDbifDrdP
aF3WJAOlu2LXMdzv2vwrD/pRMhy6rVPyFY8HrqwJhOcUGXpujipHlyBQl3yO
P9GMDMkFx2wC8XjiPvc6ocOaDHu/XJ9/XoTnZ6Q0Y9OeDMdfsxXw4/HHE9j+
OdKLDJ/ctsm44fHq5rPD+qEfGcZ2pnCduYFAk6t7z78gfP3xn7g88Pj2sGR9
QIkgQ7H/3YBdeD60Hj6R4JNBBpNqU4tLeD4JqFxZKrlGBv4vEzcYFxDwkZ/w
n8ghw5E3g9LmCQgIip+zciohQ/rdW7u78Xz0Z2snWj4kw0BvkWI3ns/YqkDu
5Sdk2NRwP5wViMDuf258Ax1k+FWS2WTuj0DHN5YlvQEylH9xUknH9wORAXiu
NUmGfJPRaTEbBNcp81jUN1zvezx+5hYIdLeN3384h6+/X6WQYoLvX3XxOWoM
MsQcajoefgqBFzcwPzleXyinsBkVqSMQ6QG8Qhq+kHjV46njdtwPx8x4y2O+
4Jm2t9CFB4F9NuOLl8EXBLiru0w58f1LL/4Tj5EvmFv9kmSsEEFeEbvH4uYL
rQaKqn5fifCBgVrMXfSF1PV3wp+aiGD6wi5xMMMXzo/knCI+IEJHAbWl7ho+
Hqb/yvEuEapOlEhHFPpCz/ZaxYJiIkRe4prnfOALy65uWp7JRBCWHLgqOeoL
ObwZDbusiWB72uGN5T4/sA/8PeswSYAXe0O4NQ74wdLMl5Vn7wmg/ePScWFl
PzjnI7ks9R8B9mU+Kf181A9eHwldvtdJgKV3UmEBJn7AtZRQRCwlQFbgN6Gk
UD+wknkbdt6DAP9dD7Vt6cCfJxfZRL+VgaeuFA2uHj9wur8zO6JPBirkA4Ss
Bvxgr4tYoW+7DMRinv/NjfhB6eBxW7EaGZCdszST+ukHif+ez308LwPRuip6
yXv8QZ83JGX4oAwQ539q2AT4g53w537zKGmgmZF3/xU6Axxe9i+efZOETIvM
5zmWAWBKyTbDCoXh0+FgNo6LgZAxnJ5Mt94Jc83goJcRCH4PdVFWzZ2wdnh7
Xeq1QKhvCL+eJbkTxI5Uu+8oCoR31SmrE7OC4HRkGpOoDwTrlMmF7QmC8OGI
Q9zRT4GgoXD999+6HfDuqM5akEoQuM23T1hKCcBMi4B1nUYQLHptVD7aIgDM
o5/v/jsWBDWtCb8Cx7bDXs1ox+jTQXBUc/f3vujtYKfZ1HrRMQhMnojQSI/4
YURTPqI0MQg4575/YwE+eHtMcOnduyA4HTwXTvHnAbasSr7OsSC4wSjecuME
Dyj/AqT6SxCkX7vTNrOXB9JunrWO/RkEAetO7/l7toIO50CdDOtZOP+KiyNI
divUvkw+e0b2LJxp6nRv+bsF0tzXZ9ZoZ+GP4dF90RWc0Np6nWU66iyYZfhH
ZiVywsxOhb2D8WeB/9jqp0kPTtDtdtC7lXoWxFL/GxGR4IQV+Ydlp4rOAnf+
z5tcNzjAdzHYI6PrLHw5++caxzV2uK27+HM7DwWobfcPajWyQmiAilkLLwWE
WCNHmNmscDorqNZjOwV29be4rNBZ4cf0THDjLgqQzkrseKXFCuqpnxgOkhQI
VxGSHHjBAl2vulnL1SnwfajV/OLUJpqzzO5pdpgCy5px04zaTdRf5sQz5lEK
OPyI+LUcs4nyhz5KMkIpYNieuLtVeBMl7and9teAAnL6Qb0adhvojHOu0HFX
CnA1bWbG/F1DW5OGaV/dKXBtb7ShzfM1NO3+ztEMLwoImk1+7S5cQ1VYM/Im
/CiQIeivHGG8hkaWJkgmh1Jg0K0Qv1KvosYDbfHK4RTw2jNt/ebSKiqxtDbx
LoICtxKNIqTJq2inXnipQhwFftwMHb4quYry/jgjN3SRAlJm4Wfe31hBx3ZW
pkalUeCUqZkbPXwFrT0+/YN4mQLvLi5ZNtquoDYZbvfCr1NgqEjQgE9kBS1S
sVETL8bn18s2eByvJykOV69336JA/9tAwfepy6jO+cF/Z0sp4L+Q4rKXsoxO
vzF42FFJga7euVX68WVUia6t5dtAgdvjsmde4fVsJp9b7FQTBS4NS1f8fc5E
52+fa3NrocCWzP+6btYz0YaBZyfsn1LgcdcX7co0JirkOZ3wFsP93Wb7lS2S
idKYW55ZdFJAY0812w8yEz1CMDpt2EOB0/GOCuRTTDT3YUBy9wsK+DZoRK2q
M9EVk4wenQHcn4+LXRIIE31Cf214bIgCYlOnewS3MFEJ/oVLzW8ooFne1vKF
yUDjS3YNqI1Q4E7tlMjJHwxU56WtmcJHCrxvl7he/5qBlnhGZFaMUQB5Evap
o4uBciznvSZOUIDj0hrTvZWBdhPGrMSnKeB4QWPdrIyB7m/ZvJ47QwH3ngT+
4nwGmmIqPSz0gwKv25V1Y68yUKMILzv+PxSI3L7k+PMcA63mT8pNnadAw2Om
a0wkA+UvvfOe6x+u5zW154UhDPTs0V7R8wx8/UtTRaaBDPTVy1mnzWUKkBnq
C5fJDFTFi7coao0CHqcODbp7MNCry4qfGRsUMNs5cfyZMwNdyDCTCmWlgieX
+KlmewZqTaS6/2GnQgmx+bcmiYE2tly9HcBFhdkuH10zKwa626zhyww3FeaS
+k8tmjPQ8Km3RO9tVPDWDl6VM2OgoxEM7wk+KrgvviD/MWGgR7cL33EWoELC
B9V0PZzzSjVn3glSId34d4ASzmtHneRIQlQY7zy4pQJn58EY/6E9VDg4we34
wJSBPvUqvmsqQgVVv1gfI3w8qRVs7oUYFeINIvbRLBnoucuTinqSVEgt6s9W
sWGgk0SOs53S+PwfqdfF2DFQ3VakFiVSQfqQbbCDEwMtNdP7+2gf3j7XMfjc
jYFyfvVVPSJHBQfJP+1d3gzUJzI1pOEAFS7QALU+w0Cfb69uUD5IhQXhzeMh
VAYqWzbwr1qZCnefud2XoTPQi5q/NeTUqFD84fxFjzgGOjsoQC87RIXYJMoT
1WTcT2/VFukjVCh8sff4tcu4nytWK4WaVNhSYffvfA7uH3IjOhulQuurW6+F
qnH/Wh8+EdShQgth6WVTEwNVNX+/kXGSCvy+9Eff2hnoYqT4uWQDKnyTfMCz
/I6B2gigHezGVDjKwo2+m2agTWVu7PGmVOjjeMlpsMhA6a9KEulWVAjcyTE5
LMBEb4+MmszYUMG/fvP8HUkm2jfGt9vOjgp7tZ0esyrh8f8zvPywMxU242Jj
LM2Y6LOtxs+XfPD5f7037Z7NRH8JnLvs44f3R5v/FlXJRPfsbbIdPkMFpUjr
eIknTNR/n9RMI4UKOrpsU2tfmaiA7iJ3WCQVhLofaItoL6OahnKvp6Kp8PRJ
wvNQm2XU08Il1zqOCmsuixWkwGW0ybVHTv0CFXa//K/zftEy6hRdYLiQToUb
0qmn6rasoJWNJ9Oot6iA7Leu6J9fQYceR1hPlFBB45//WKLgKrrWeU/MopwK
yhWf1TtVV1Hzob01ynepkL8obNUbuoou/Zob+N1Ahcqsjcy1jVVURzZre1AP
FTq/V492HVhHA5RejHx6QYXm/NscJVbraJbGZrHJABWOJe0jskSvozMn/ZQV
h6iQsev7jqMv19EMdy2LuQ94e67yiUL6Bvo+7+tV/9/4+Fhs4wx+XqASacrb
56ngKvRG3o6XBUpvqb6sX6QCRZHr+IV9LBBUEbd1fZkKxnVbtBocWYC1STj+
MkcwaBnLkwJ7WUD2tUlgg3AwcLDse8lfxwq0LU16G7rBMDMlz6PXxA4fUp2+
3j4dDKQkp28PR9kB+NnP6xkEwxrPh6f+q+zAI2T+NNM0GK4+GlBMP8EBhTKz
6gT7YGgxfFz67BUHPNOSkNEPCobtQzvYWlY4QTA0ae1KTjDcHHk7GBrJDVxe
OyK35geDlWdXfMwtblixKmDEFwbDhlTmSEMPN0yo1c2fvR0MmwW3je/twc/7
hU8zJtXB0GWyTfRZ81YwCzn0disWDFVW/h5HWLZBWvBUzblvweD6VveqaC0f
cFF1XKkaIYBo1ub0Pd4Bg9HOEkkTITCoq5hIytoLdSvWt6MvhoIWxPzZay4J
R04ZOP2+FAoK3Ztv+Hwloe2y1m6PjFCYle1mXYqThH7ivlS9a6EgmnD2XPF9
SZg2ZVAFC0NhZ/2EuNwWKRApyT1RURsKnO6abCleUnDOaGz8v5FQ+Pnz0hcX
YWngzh7KO/0+FOw+fE33JEpDxni3dcvHUFj99/CAq5I05IXd7ymaCAWSUetv
zVPS0FAcX+v3IxS4nkS6JFCkYWZBJn5zIxS8h1KOoV3SYF5AljywLwy+nM+b
+eYjA4KeA/eGZMOgXV5Kg0aVgTdyatqRB8LgT846OyNKBmybN5x6lcNgOS/x
2WCmDLgMZeWRj4XBo4vd9h9aZCCQ+5lQqXkYRCjePKG3lQAHB+XKjKzC4KHD
Vs4FQQL8ybqsvmATBqmfhr9eFiNAKMHRSscxDCKrjt0tUCJAtPZ85rh3GNgf
q1vftCZAaqgUr3hUGFDWZxY+FBDA+FhS/rOYMBgrJv2+XEYAfrY5+YD4MGD7
Nd2ldo8AVy43GzxKDAOhsoKHhm0EyKkyTbbPDANtamBl/TgB7oxHs2WXhYE4
N2nUXYoIz4zfMflfhcF+45+8D68SQSie4HtxKAyeJ0rlDOcQwac+cIT9bRjY
+vKiX4uIsEWErYn5LgwSB9ofDFURwfCbfMjklzD4q4L+nGsnwqtz0T8bGWGQ
Ff1YQ+gnEaQbu52UV8LgggjJXHmeCMEzAv1Va2HAeSDqvSaDCDvNyqqKWWng
/ParsAQrAiSxl+SL22hgal+pLbYLgY9NkpNOkjR49Pi69W8NBBRn/SxGpGlQ
f5JNY10TgVjxBsyCSAPhqYS1ZW0EJC/oF5+Wo8HIuJkIdhqvNy2oTspqNEhI
NuqLweu7+guP+qoO4f3Ri7nY7BHgeMh5DDlCg8NcF36GOiFQJpEnLKJFgxTv
upJ9eH0486NjmF2PBhd+vWFpOYvAUUm+07EGNNjisTT9IBiBVEvbRqYRDS6H
BuvlhiFwoOXHtZ/meH80R3e1KASCknZZjDjQ4L1VqPf1RASetrhgFs40qAlg
T2VJQWD7zwqlflcaCGqIsjim4vW5lRZ/uxcNplg3Xr7PQGBByqevKogGJw7V
nOPE62ne7s72vVQa/Isajn///+89zkg/TAqhwROXVo+iPATsGj+WetBp4BDx
un0er8+pDpr5ryJp4GHy5cj5Yny+mzeuaMfQgMAamMR2C4HHBlaxIgk0qH3A
kjeA1/9vf9WGpuCHa8CuaQfhMgR+XeM/s5REgyMKK9+syhHgPhrg7nWRBquv
l7Vj7iAgPdZrO3SJBrsutztnVSCgeX6/KWTQwPKWiU5BJQLWsokn72XSoGKj
ZfZKFQJJwaCSmkWDbkmdeINqBIr3FO1n3qCBXZK6/7YaBB4+XhX3yaMB+XzD
jsc4v3a33/WmAF//2+gwx3sIzHI18+gU02CQ3ff6d5zZq3ex1t6iQbUHJdDn
PgJiFsEM8VJcz521m69x1lga/HmpnAYhnO6GCrUImOUrTi1X0GBx5aNx2P+/
d4JL78l3aXAtqZCrBueErzOv3tbQQJb/ePh/OOennn6uW0sDsT5q0QzODUql
Tx7U0eDniz3R/39/NPCGtUGykQa03/sEPuM8HeFald6M6/Or2QHDeVPiyc3V
FhpsWLE7ZeK895nIDb/HNHgT7b7LDGcVP3r6yFMacOQbXljD52vIP3z+VDsN
/OtI1Tk4e9arRdZ30kAiRyudgHO03RWKdDfOf4f3F+Lrz1r/5XO5hwYvlUVi
OHG+d9vYef0FDSRvSGQ44fr16FVZnRmgQc5BUafbuN4Tc1sM3w3SQOiFz8zw
XQRWrniD3hANbNjo6iu4P7sOd2o0vsEvV2pfT/DirPhRSpEwQgPWCC9BPtzP
0+diCVfe0WC8uu/OGu6/676PwpsfaPDRXYDjAx4f9L6jAoFjuP4TenIVePxU
Cf1b0/9Cg5V3CSP8eHx1tlouNH2lwVtzM+8KPP4+utZ+J87QIPD8zS7lmwjw
V50ZZvlJg7/ibdz/f7+036y3P+g3DZaSLP965CMAi/s6P/6lgU7JUnN5LgIh
2pP3Hy7R4ICY3dxKFgJpX9Dyfcs0aP1vxG3bdQTKUwoLrq/SYO3bHMZzFYHR
IbuLFJZw8PzXaDmcjsBx8qCHLE84+Bq3HLh1AYHMlKKDfbzhwLTLY86fQ+Br
ZeBK4PZwyLL78lo5DoGMuW1X63eFQyexo50SgcA4Vb9dWzIceswa9dkCEVC/
tid9QjocXh6tlGv0Q+Biw7TdBWI41P/MMLL2QUCVceFPr1w4JBFKz9q6InAh
ul3SRj0cll0jBYLN8fkVZv5gaIRDu5TNYLIxrn+ba3Pe0XAoWHPmT9VHYJh1
w3RcOxzurT9RsgYEZJM1Y88YhIPMYYO1zYMI9F+p/3jOJRz+vaLLP+VGQKo+
oYLoHg7FH//Z3GRHIOyNRehzz3CQtLldfHaDCBJ7/mzj8wvH7xkPWt8uEIFS
oHAsJyQc7t4vs27/RIRdd8py76WEw4ey8GdS94jg2xPqbXEpHK57eVLf3yHC
k++6Kovp4RA14sWecAs/LxQme45eCwdt+hBf/nUiPHwgwXxWGA6rRzn0liKI
4Pj4BulDXTgERbyRcDlBBG1DIzaLRnx90UudUZpEkBndqOluDge56qchqWpE
/Lz25qx7HA6qbV37oxAi0A6oN6R0h0PFl0Dbu9xEuJr3aofG+3DgKREYs+wn
QA9960AmKx0cC1FnogEBqrme0Lk46MCQMemPBQJcvk4hRnPR4aREp3j/YQKQ
akeiyNvosKRaWYnuI8CXb2Xy2kJ06Ava1EhjI8AGSSflhywdYkw32V88lIFD
h6J0T5vToUlbeoe1GH4/iNKR57Siw/XIWPt1ARkI7ti645kNHRRbcnfmcspA
rVnO2AlHOihQLPQrfkmDvH9jhJYPHTgKsyplMWmQKP59Xz2aDiuhBi69bvj9
ZquXGKGCDn89QoUtcqWg3OwA+2QVHYwOsnfEpknBqez57zdr6LD1v6nA23FS
kEA41yxRT4ffbbX6/d5SsKZVZCnylA4avZ9dalSk4G/waMqON3QQa92xEHdZ
EjJbis++Gsbn/8Df/2GoJBxkIZMuv6PDK53mZ+P2khCQ/o/A95kOH14OSLAR
8fvZHcE27lk6qPecsc9olsDPwXdlz+fo8MZ3cMS4QAIIh26lJf2mw4yDkMZ6
vAS4dSg5cPzD14uZXlM3lIANbgZ0MujwKWT3zscHJaDQ7On+hBU68PeRQzV2
SsDx7ET+E+t0/PxbZZQwxOH9R+N/m5t06PS5M8bxURz+B6edbSA=
               "]]}, Annotation[#, "Charting`Private`Tag$205599#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
Rhb+B+HswGc=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$205599#1"]& ]}}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Coinc. per 5 min\"", TraditionalForm], None}, {
            FormBox["\"Measurement Angle\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           Thickness[0.006], FontSize -> 12], FrameTicks -> {{{{-10, 
              FormBox["\"-10\"", TraditionalForm], 0.024}, {0, 
              FormBox["\"0\"", TraditionalForm], 0.024}, {10, 
              FormBox["\"10\"", TraditionalForm], 0.024}, {20, 
              FormBox["\"20\"", TraditionalForm], 0.024}, {30, 
              FormBox["\"30\"", TraditionalForm], 0.024}}, {{-10, "", 
              0.024}, {0, "", 0.024}, {10, "", 0.024}, {20, "", 0.024}, {
             30, "", 0.024}}}, {{{-45, "", 0.024}, {-30, "", 0.012}, {-15, "",
               0.012}, {0, 
              FormBox[
               RowBox[{"\"0\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {15, "", 0.012}, {30, "", 0.012}, {45, "", 0.024}, {
             60, "", 0.012}, {75, "", 0.012}, {90, 
              FormBox[
               RowBox[{"\"90\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {105, "", 0.012}, {120, "", 0.012}, {135, "", 0.024}, {
             150, "", 0.012}, {165, "", 0.012}, {180, 
              FormBox[
               RowBox[{"\"180\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {195, "", 0.012}, {210, "", 0.012}, {225, "", 0.024}, {
             240, "", 0.012}, {255, "", 0.012}, {270, 
              FormBox[
               RowBox[{"\"270\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {285, "", 0.012}, {300, "", 0.012}, {315, "", 0.024}, {
             330, "", 0.012}, {345, "", 0.012}, {360, 
              FormBox[
               RowBox[{"\"360\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}, {{-45, "", 0.024}, {-30, "", 0.012}, {-15, "", 
              0.012}, {0, "", 0.024}, {15, "", 0.012}, {30, "", 0.012}, {
             45, "", 0.024}, {60, "", 0.012}, {75, "", 0.012}, {
             90, "", 0.024}, {105, "", 0.012}, {120, "", 0.012}, {
             135, "", 0.024}, {150, "", 0.012}, {165, "", 0.012}, {
             180, "", 0.024}, {195, "", 0.012}, {210, "", 0.012}, {
             225, "", 0.024}, {240, "", 0.012}, {255, "", 0.012}, {
             270, "", 0.024}, {285, "", 0.012}, {300, "", 0.012}, {
             315, "", 0.024}, {330, "", 0.012}, {345, "", 0.012}, {
             360, "", 0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 260, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"After Cyc: 0-1\"", TraditionalForm], 
         PlotRange -> {{-14.4, 374.4}, {-4., 24.}}, PlotRangeClipping -> True,
          PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox["\"\"", TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
     TagBox[
      GridBox[{{
         StyleBox[
          TagBox[
           
           GridBox[{{"\"Basis\"", "\"Parameters\""}, {
             "\"HV\"", "\"v :  0.75 \[PlusMinus]0.11\""}, {
             "\"\[PlusMinus]45\[Degree]\"", 
              "\"v :  0.36 \[PlusMinus]0.12\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7], 3 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}, {
         StyleBox[
          TagBox[
           
           GridBox[{{"\"Basis\"", "\"Parameters\""}, {
             "\"HV\"", "\"v :  0.76 \[PlusMinus]0.11\""}, {
             "\"\"", "\"\[Theta] :  3 \[PlusMinus]5\""}, {
             "\"\[PlusMinus]45\[Degree]\"", 
              "\"v :  0.46 \[PlusMinus]0.09\""}, {
             "\"\"", "\"\[Theta] :  63 \[PlusMinus]6\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7], 4 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
       "Column", 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{1}}}], 
      "Column"]}, "RowWithSeparators"], 
   TemplateBox[{"   ", "\"   \"", 
     TemplateBox[{
       GraphicsBox[{{{{{{Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{0., -1.}, {0., 0.}}], 
               LineBox[{{0., 0.}, {0., 1.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{117., 9.39444872453601}, {117., 13.}}], 
               LineBox[{{117., 13.}, {117., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{135., 4.354248688935409}, {135., 7.}}], 
               LineBox[{{135., 7.}, {135., 9.64575131106459}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{162., 0.}, {162., 1.}}], 
               LineBox[{{162., 1.}, {162., 2.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{180., 0.}, {180., 1.}}], 
               LineBox[{{180., 1.}, {180., 2.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{207., 5.17157287525381}, {207., 8.}}], 
               LineBox[{{207., 8.}, {207., 10.82842712474619}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{225., 4.354248688935409}, {225., 7.}}], 
               LineBox[{{225., 7.}, {225., 9.64575131106459}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{252., 20.900980486407214`}, {252., 26.}}], 
               LineBox[{{252., 26.}, {252., 31.099019513592786`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{270., 15.52786404500042}, {270., 20.}}], 
               LineBox[{{270., 20.}, {270., 24.47213595499958}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{27., 2.76393202250021}, {27., 5.}}], 
               LineBox[{{27., 5.}, {27., 7.23606797749979}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{297., 7.6833752096446}, {297., 11.}}], 
               LineBox[{{297., 11.}, {297., 14.3166247903554}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{315., 6.83772233983162}, {315., 10.}}], 
               LineBox[{{315., 10.}, {315., 13.16227766016838}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{342., 1.2679491924311228`}, {342., 3.}}], 
               LineBox[{{342., 3.}, {342., 4.732050807568877}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{360., -1.}, {360., 0.}}], 
               LineBox[{{360., 0.}, {360., 1.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{45., 5.17157287525381}, {45., 8.}}], 
               LineBox[{{45., 8.}, {45., 10.82842712474619}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{72., 14.641101056459327`}, {72., 19.}}], 
               LineBox[{{72., 19.}, {72., 23.358898943540673`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{90., 12.876894374382339`}, {90., 17.}}], 
               LineBox[{{90., 17.}, {90., 21.12310562561766}}]}}}, {{
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{0., 12.876894374382339`}, {0., 17.}}], 
               LineBox[{{0., 17.}, {0., 21.12310562561766}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{117., 11.127016653792584`}, {117., 15.}}], 
               LineBox[{{117., 15.}, {117., 18.872983346207416`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{135., 14.641101056459327`}, {135., 19.}}], 
               LineBox[{{135., 19.}, {135., 23.358898943540673`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{162., 12.876894374382339`}, {162., 17.}}], 
               LineBox[{{162., 17.}, {162., 21.12310562561766}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{180., 9.39444872453601}, {180., 13.}}], 
               LineBox[{{180., 13.}, {180., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{207., 2.76393202250021}, {207., 5.}}], 
               LineBox[{{207., 5.}, {207., 7.23606797749979}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{225., 0.5857864376269049}, {225., 2.}}], 
               LineBox[{{225., 2.}, {225., 3.414213562373095}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{252., 6.}, {252., 9.}}], 
               LineBox[{{252., 9.}, {252., 12.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{270., 9.39444872453601}, {270., 13.}}], 
               LineBox[{{270., 13.}, {270., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{27., 3.550510257216822}, {27., 6.}}], 
               LineBox[{{27., 6.}, {27., 8.449489742783179}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{297., 13.757359312880714`}, {297., 18.}}], 
               LineBox[{{297., 18.}, {297., 22.242640687119284`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{315., 19.101020514433642`}, {315., 24.}}], 
               LineBox[{{315., 24.}, {315., 28.898979485566358`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{342., 10.25834261322606}, {342., 14.}}], 
               LineBox[{{342., 14.}, {342., 17.74165738677394}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{360., 9.39444872453601}, {360., 13.}}], 
               LineBox[{{360., 13.}, {360., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{45., 3.550510257216822}, {45., 6.}}], 
               LineBox[{{45., 6.}, {45., 8.449489742783179}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{72., 2.76393202250021}, {72., 5.}}], 
               LineBox[{{72., 5.}, {72., 7.23606797749979}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{90., 7.6833752096446}, {90., 11.}}], 
               LineBox[{{90., 11.}, {90., 14.3166247903554}}]}}}}, {{{
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 1.}, 
                  Offset[{3, 0}, {0., 1.}]}, {{0., 1.}, 
                  Offset[{-3, 0}, {0., 1.}]}, {{0., -1.}, 
                  Offset[{3, 0}, {0., -1.}]}, {{0., -1.}, 
                  Offset[{-3, 0}, {0., -1.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 16.605551275463988`}, 
                  Offset[{3, 0}, {117., 16.605551275463988`}]}, {{117., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {117., 16.605551275463988`}]}, {{117., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {117., 9.39444872453601}]}, {{117., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {117., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 9.64575131106459}, 
                  Offset[{3, 0}, {135., 9.64575131106459}]}, {{135., 
                  9.64575131106459}, 
                  Offset[{-3, 0}, {135., 9.64575131106459}]}, {{135., 
                  4.354248688935409}, 
                  Offset[{3, 0}, {135., 4.354248688935409}]}, {{135., 
                  4.354248688935409}, 
                  Offset[{-3, 0}, {135., 4.354248688935409}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 2.}, 
                  Offset[{3, 0}, {162., 2.}]}, {{162., 2.}, 
                  Offset[{-3, 0}, {162., 2.}]}, {{162., 0.}, 
                  Offset[{3, 0}, {162., 0.}]}, {{162., 0.}, 
                  Offset[{-3, 0}, {162., 0.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 2.}, 
                  Offset[{3, 0}, {180., 2.}]}, {{180., 2.}, 
                  Offset[{-3, 0}, {180., 2.}]}, {{180., 0.}, 
                  Offset[{3, 0}, {180., 0.}]}, {{180., 0.}, 
                  Offset[{-3, 0}, {180., 0.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 10.82842712474619}, 
                  Offset[{3, 0}, {207., 10.82842712474619}]}, {{207., 
                  10.82842712474619}, 
                  Offset[{-3, 0}, {207., 10.82842712474619}]}, {{207., 
                  5.17157287525381}, 
                  Offset[{3, 0}, {207., 5.17157287525381}]}, {{207., 
                  5.17157287525381}, 
                  Offset[{-3, 0}, {207., 5.17157287525381}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 9.64575131106459}, 
                  Offset[{3, 0}, {225., 9.64575131106459}]}, {{225., 
                  9.64575131106459}, 
                  Offset[{-3, 0}, {225., 9.64575131106459}]}, {{225., 
                  4.354248688935409}, 
                  Offset[{3, 0}, {225., 4.354248688935409}]}, {{225., 
                  4.354248688935409}, 
                  Offset[{-3, 0}, {225., 4.354248688935409}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 31.099019513592786`}, 
                  Offset[{3, 0}, {252., 31.099019513592786`}]}, {{252., 
                  31.099019513592786`}, 
                  Offset[{-3, 0}, {252., 31.099019513592786`}]}, {{252., 
                  20.900980486407214`}, 
                  Offset[{3, 0}, {252., 20.900980486407214`}]}, {{252., 
                  20.900980486407214`}, 
                  Offset[{-3, 0}, {252., 20.900980486407214`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 24.47213595499958}, 
                  Offset[{3, 0}, {270., 24.47213595499958}]}, {{270., 
                  24.47213595499958}, 
                  Offset[{-3, 0}, {270., 24.47213595499958}]}, {{270., 
                  15.52786404500042}, 
                  Offset[{3, 0}, {270., 15.52786404500042}]}, {{270., 
                  15.52786404500042}, 
                  Offset[{-3, 0}, {270., 15.52786404500042}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 7.23606797749979}, 
                  Offset[{3, 0}, {27., 7.23606797749979}]}, {{27., 
                  7.23606797749979}, 
                  Offset[{-3, 0}, {27., 7.23606797749979}]}, {{27., 
                  2.76393202250021}, 
                  Offset[{3, 0}, {27., 2.76393202250021}]}, {{27., 
                  2.76393202250021}, 
                  Offset[{-3, 0}, {27., 2.76393202250021}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 14.3166247903554}, 
                  Offset[{3, 0}, {297., 14.3166247903554}]}, {{297., 
                  14.3166247903554}, 
                  Offset[{-3, 0}, {297., 14.3166247903554}]}, {{297., 
                  7.6833752096446}, 
                  Offset[{3, 0}, {297., 7.6833752096446}]}, {{297., 
                  7.6833752096446}, 
                  Offset[{-3, 0}, {297., 7.6833752096446}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 13.16227766016838}, 
                  Offset[{3, 0}, {315., 13.16227766016838}]}, {{315., 
                  13.16227766016838}, 
                  Offset[{-3, 0}, {315., 13.16227766016838}]}, {{315., 
                  6.83772233983162}, 
                  Offset[{3, 0}, {315., 6.83772233983162}]}, {{315., 
                  6.83772233983162}, 
                  Offset[{-3, 0}, {315., 6.83772233983162}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 4.732050807568877}, 
                  Offset[{3, 0}, {342., 4.732050807568877}]}, {{342., 
                  4.732050807568877}, 
                  Offset[{-3, 0}, {342., 4.732050807568877}]}, {{342., 
                  1.2679491924311228`}, 
                  Offset[{3, 0}, {342., 1.2679491924311228`}]}, {{342., 
                  1.2679491924311228`}, 
                  Offset[{-3, 0}, {342., 1.2679491924311228`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 1.}, 
                  Offset[{3, 0}, {360., 1.}]}, {{360., 1.}, 
                  Offset[{-3, 0}, {360., 1.}]}, {{360., -1.}, 
                  Offset[{3, 0}, {360., -1.}]}, {{360., -1.}, 
                  Offset[{-3, 0}, {360., -1.}]}}], {{{1., 0.}, {0., 1.}}, {0.,
                 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 10.82842712474619}, 
                  Offset[{3, 0}, {45., 10.82842712474619}]}, {{45., 
                  10.82842712474619}, 
                  Offset[{-3, 0}, {45., 10.82842712474619}]}, {{45., 
                  5.17157287525381}, 
                  Offset[{3, 0}, {45., 5.17157287525381}]}, {{45., 
                  5.17157287525381}, 
                  Offset[{-3, 0}, {45., 5.17157287525381}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 23.358898943540673`}, 
                  Offset[{3, 0}, {72., 23.358898943540673`}]}, {{72., 
                  23.358898943540673`}, 
                  Offset[{-3, 0}, {72., 23.358898943540673`}]}, {{72., 
                  14.641101056459327`}, 
                  Offset[{3, 0}, {72., 14.641101056459327`}]}, {{72., 
                  14.641101056459327`}, 
                  Offset[{-3, 0}, {72., 14.641101056459327`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 21.12310562561766}, 
                  Offset[{3, 0}, {90., 21.12310562561766}]}, {{90., 
                  21.12310562561766}, 
                  Offset[{-3, 0}, {90., 21.12310562561766}]}, {{90., 
                  12.876894374382339`}, 
                  Offset[{3, 0}, {90., 12.876894374382339`}]}, {{90., 
                  12.876894374382339`}, 
                  Offset[{-3, 0}, {90., 12.876894374382339`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}}, {{Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 21.12310562561766}, 
                  Offset[{3, 0}, {0., 21.12310562561766}]}, {{0., 
                  21.12310562561766}, 
                  Offset[{-3, 0}, {0., 21.12310562561766}]}, {{0., 
                  12.876894374382339`}, 
                  Offset[{3, 0}, {0., 12.876894374382339`}]}, {{0., 
                  12.876894374382339`}, 
                  Offset[{-3, 0}, {0., 12.876894374382339`}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 18.872983346207416`}, 
                  Offset[{3, 0}, {117., 18.872983346207416`}]}, {{117., 
                  18.872983346207416`}, 
                  Offset[{-3, 0}, {117., 18.872983346207416`}]}, {{117., 
                  11.127016653792584`}, 
                  Offset[{3, 0}, {117., 11.127016653792584`}]}, {{117., 
                  11.127016653792584`}, 
                  Offset[{-3, 0}, {117., 11.127016653792584`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 23.358898943540673`}, 
                  Offset[{3, 0}, {135., 23.358898943540673`}]}, {{135., 
                  23.358898943540673`}, 
                  Offset[{-3, 0}, {135., 23.358898943540673`}]}, {{135., 
                  14.641101056459327`}, 
                  Offset[{3, 0}, {135., 14.641101056459327`}]}, {{135., 
                  14.641101056459327`}, 
                  Offset[{-3, 0}, {135., 14.641101056459327`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 21.12310562561766}, 
                  Offset[{3, 0}, {162., 21.12310562561766}]}, {{162., 
                  21.12310562561766}, 
                  Offset[{-3, 0}, {162., 21.12310562561766}]}, {{162., 
                  12.876894374382339`}, 
                  Offset[{3, 0}, {162., 12.876894374382339`}]}, {{162., 
                  12.876894374382339`}, 
                  Offset[{-3, 0}, {162., 12.876894374382339`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 16.605551275463988`}, 
                  Offset[{3, 0}, {180., 16.605551275463988`}]}, {{180., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {180., 16.605551275463988`}]}, {{180., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {180., 9.39444872453601}]}, {{180., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {180., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 7.23606797749979}, 
                  Offset[{3, 0}, {207., 7.23606797749979}]}, {{207., 
                  7.23606797749979}, 
                  Offset[{-3, 0}, {207., 7.23606797749979}]}, {{207., 
                  2.76393202250021}, 
                  Offset[{3, 0}, {207., 2.76393202250021}]}, {{207., 
                  2.76393202250021}, 
                  Offset[{-3, 0}, {207., 2.76393202250021}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 3.414213562373095}, 
                  Offset[{3, 0}, {225., 3.414213562373095}]}, {{225., 
                  3.414213562373095}, 
                  Offset[{-3, 0}, {225., 3.414213562373095}]}, {{225., 
                  0.5857864376269049}, 
                  Offset[{3, 0}, {225., 0.5857864376269049}]}, {{225., 
                  0.5857864376269049}, 
                  Offset[{-3, 0}, {225., 0.5857864376269049}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 12.}, 
                  Offset[{3, 0}, {252., 12.}]}, {{252., 12.}, 
                  Offset[{-3, 0}, {252., 12.}]}, {{252., 6.}, 
                  Offset[{3, 0}, {252., 6.}]}, {{252., 6.}, 
                  Offset[{-3, 0}, {252., 6.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 16.605551275463988`}, 
                  Offset[{3, 0}, {270., 16.605551275463988`}]}, {{270., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {270., 16.605551275463988`}]}, {{270., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {270., 9.39444872453601}]}, {{270., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {270., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 8.449489742783179}, 
                  Offset[{3, 0}, {27., 8.449489742783179}]}, {{27., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {27., 8.449489742783179}]}, {{27., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {27., 3.550510257216822}]}, {{27., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {27., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 22.242640687119284`}, 
                  Offset[{3, 0}, {297., 22.242640687119284`}]}, {{297., 
                  22.242640687119284`}, 
                  Offset[{-3, 0}, {297., 22.242640687119284`}]}, {{297., 
                  13.757359312880714`}, 
                  Offset[{3, 0}, {297., 13.757359312880714`}]}, {{297., 
                  13.757359312880714`}, 
                  Offset[{-3, 0}, {297., 13.757359312880714`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 28.898979485566358`}, 
                  Offset[{3, 0}, {315., 28.898979485566358`}]}, {{315., 
                  28.898979485566358`}, 
                  Offset[{-3, 0}, {315., 28.898979485566358`}]}, {{315., 
                  19.101020514433642`}, 
                  Offset[{3, 0}, {315., 19.101020514433642`}]}, {{315., 
                  19.101020514433642`}, 
                  Offset[{-3, 0}, {315., 19.101020514433642`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 17.74165738677394}, 
                  Offset[{3, 0}, {342., 17.74165738677394}]}, {{342., 
                  17.74165738677394}, 
                  Offset[{-3, 0}, {342., 17.74165738677394}]}, {{342., 
                  10.25834261322606}, 
                  Offset[{3, 0}, {342., 10.25834261322606}]}, {{342., 
                  10.25834261322606}, 
                  Offset[{-3, 0}, {342., 10.25834261322606}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 16.605551275463988`}, 
                  Offset[{3, 0}, {360., 16.605551275463988`}]}, {{360., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {360., 16.605551275463988`}]}, {{360., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {360., 9.39444872453601}]}, {{360., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {360., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 8.449489742783179}, 
                  Offset[{3, 0}, {45., 8.449489742783179}]}, {{45., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {45., 8.449489742783179}]}, {{45., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {45., 3.550510257216822}]}, {{45., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {45., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 7.23606797749979}, 
                  Offset[{3, 0}, {72., 7.23606797749979}]}, {{72., 
                  7.23606797749979}, 
                  Offset[{-3, 0}, {72., 7.23606797749979}]}, {{72., 
                  2.76393202250021}, 
                  Offset[{3, 0}, {72., 2.76393202250021}]}, {{72., 
                  2.76393202250021}, 
                  Offset[{-3, 0}, {72., 2.76393202250021}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 14.3166247903554}, 
                  Offset[{3, 0}, {90., 14.3166247903554}]}, {{90., 
                  14.3166247903554}, 
                  Offset[{-3, 0}, {90., 14.3166247903554}]}, {{90., 
                  7.6833752096446}, 
                  Offset[{3, 0}, {90., 7.6833752096446}]}, {{90., 
                  7.6833752096446}, 
                  Offset[{-3, 0}, {90., 7.6833752096446}]}}], {{{1., 0.}, {0.,
                 1.}}, {0., 0.}}]}}}}, {{{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 0.}}, {{117., 13.}}, {{
              135., 7.}}, {{162., 1.}}, {{180., 1.}}, {{207., 8.}}, {{225., 
              7.}}, {{252., 26.}}, {{270., 20.}}, {{27., 5.}}, {{297., 
              11.}}, {{315., 10.}}, {{342., 3.}}, {{360., 0.}}, {{45., 
              8.}}, {{72., 19.}}, {{90., 17.}}}]}, {
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 17.}}, {{117., 15.}}, {{
              135., 19.}}, {{162., 17.}}, {{180., 13.}}, {{207., 5.}}, {{225.,
               2.}}, {{252., 9.}}, {{270., 13.}}, {{27., 6.}}, {{297., 
              18.}}, {{315., 24.}}, {{342., 14.}}, {{360., 13.}}, {{45., 
              6.}}, {{72., 5.}}, {{90., 11.}}}]}}}, {{}, {}}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1: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
4GLYO7/6y90oR/aCczwjLz60riSiQ+1C5Mw922rsePB7kqEvXi13Ik72zwUr
L7nxpcuZSVMRnWh9CJv+9JoT93X661uS3IHO1J3HNN05cBMXGR9D6Q7Ul/8p
soCHHSdbs1UUVX1Flb7uHFfP/IdvV96on1xtR7JmxeS1nSx4r3UuqTK7HaXv
37rnWb8NFz2mru2g145YBIy+dwUw42rKIqWtq20ofD1dRVeECf/WJKUuUNiG
pgcnzpY1M+Amj+MCSe5tyKZWpXF3KD1O/2t2U0S6DTXlXeBMlaTDpRZdKIMT
rciXO+Pltqx/Ndi0g1HQ81Zk1K2iPbG0XrPYU8o5ENGKFHI+d9Qbr9VYxz6V
3WXYiljdPTwfPlquaXQepCNJtqIZBbr16K3FmuFHzyYPrNHQh8WMREfbhZqv
SUsPX1fQkHmwp1aUy48aZ/G9DdPRNMRNf9f1EN9kzdyV23VNljTUktRyZaVx
uEYkmkxvSaIhoUNMDp4/u2p83TRaru+kIcWnXUb1+c018WkdzmHbaOgw/V6O
Gve7NTtWQ79x0dHQ0HTiVcvPtej+Q0VrG0YaWrR1jHwZ+xU5f2h+Y8xNQyFH
1pQPiA8h+ob2lUUZGtpIbg4aPDWOjpuldeieoKEjjGnGEoXfUf6WIKd+IA2d
D3WWdV2fRzfa9pz4k0dDw79v01vuXkR1m8c4bUZpiE7xn3/IpyXEFHF6voiv
FUl6uA6kBa0iOGhyjf1IK9K+90G/QmgdRazaMmudaUUuPcoVPfgG+sSm/+d4
Viu6yHN797rnFhrWMvoj8bUVWezZbL6+nR6Sa5YS2zjbkP3VqcCk4wwg6mDg
OWnQhpznWoVvxDDCc3VFHtK1NkQpy/VN/ssMOYmp3xwF21GY0HX+mwe3Q+vg
+vJx93Z0/hy1+mYoC2RKldY4lLej6zr63Ld+skJzWOyapPtXlPpUpfLWPnY4
2X1QqKXuK8riEHFJ9eYAR714s4LdHaigc74kbYwLPl9l5FxY6kDjKh8VPvvw
Qjcnl0Xm+y40Pa4VbcS6A95kHJkr0u1GP26XdHx+sgPIvScnFj50o8X1rHNf
Jvigapx5bXqgB9HXB9BaHAXg5YXTmlmq/YgpdFzadFMArjvtThju6Ecse+3C
aVmCwFxbdl4nYgBxX9OWbO0VAvme456+LYNIzJI/uM1SBL4W3v7JZD2MpJgT
3psvisAOXuecO2XDSKZic1d7siiIv+w6cUBwBCnumm5o/yIGKRP7UpPGRlBO
4Cm2mVwJsIvfG5mbMobuf7xzQP63BLAtWcWEM46jh9Ltjme0JeH0cg/JgjqO
8jt1S2eGJWGfpuhObpcJVHiIdOqHqDSIFjzczDKfQi9SzsQr+EnDiWt5Xufb
p1DRj7xXPm+lgYuUip2ynkal2ULbZu13w4e8mUVO5+/oDT3jy9k7e6BguH9E
JvkH+vihk26eRxbYExvrRWQWUM/J8xz3HGWhqPHzp9yQBTQ1JyNs9lwW6pOx
wwINC4iJN3x/sZ4c6HSxs9e6/0LIXtiDekEe0poPMXKXLqLSmdOfNmf3wdxR
3qe8UcuoLmp7z0sNRZinSHML9i6jNs6icacrihD9z3l5S20FzavQb9ZJKwHv
f9JxIcsrSO5sLineXhkahw3CB6PWEI156eP2cRLw8O3cxVX2F3WZ6JkPs2Lw
V+fC4pT4Bhq6k9X9GiPukckl7+5c20Czcjrj3hcwOK25xB/h/g+xmtz+90lY
BbiUjjbuk95Cx28fJCWb74fDRjKBbS70UClzLk2w5gD0i1SbeJsxA3X/9yCt
7wfg/N8LToLpzKAC1mZuO9TgdgD/swPDzFBop8hW5KkGwOwX8TpwG5H3g9En
uNWB25n7xZeM7XBp8Ygv1fkgpLarCz399x+YVW9qdzBqQo5CmeE1Li5Ykoe1
E7sBPHxl3hsK84PncKZ/PacOnJvQefXLXgKusM+//+5iAO7a/Ptv98tA1NR8
RleYASR8CHDxWJIBSt1Pn/pEA6DTdtXZx7EXbMJ/cWWXG8BcQIlFutZekBlf
sjFjNYTPT42bf9zfC/Vv/k6VvzKEZ0UFdhausrB55j+WS3TGMGfS7Fc2KAeL
Oqx9FH5jOJiTf7N7SQ4mJdgKT8kbQ/jSfvrvbPLwpYvdTN3KGCx8sjd7DslD
ljZ3+sxjY+L6iglNp8rDIWEBWXNTE4jsfHMu/YQChHzYrSeWYwpY3Mz71ex9
8I1FX+jhK1PoMzlI0361Dwz0/Gb2NJrC8G8hzciGfSDxvixRcdYU/I7zFD+f
2QceLrleYqJmcGpLEUmrKcIOJ9Xnij5mILirx03+gyL4niSrGW03h4BzR5zf
DSmB1NlpMU4ec5jw2PHB4qcSdGdGbm8VNocS+2Wf1i0l0O7L6bFUModM4t5y
UUIZBO2mIk9am8PDv2YBzU5EnpHDa87kmsPSO82u5wPKIGaRqXcVWUB9hIN9
ihMJal0W48QMLGD/bzPtTk8SuAUbNJZYWcD79x+lWAi9UJC6fnTI2wIsd6Yk
HTlHArVue839qRYQenDLeSKdBMYOu5QGpy3gp9TUr11fCP3hG+wb9NsCTu9u
Mrch9EvKuU8F2zctYDjFtyamlwQ9OWf3quywhLDf9km5E8R+I/0S8Ucsge7Y
rwShfySI8sjagaVYgs+xX3/rZTEQD1syb8qyhAxSpcaMIgZ18UbJJx9bghj5
Uu2mCgYsTzfY495awtdTs5GLhB679cNhW/+kJQgvbQQwmmGgtlF6nPKLYIaP
eKYVBj3sHBeZNywheF6cWcIOAzGld1vKPFZQ6cp7dMmZ0JsU0T+XNK3AnMn/
bF0QBsYxoerCulaQsvTRoZmKwcLNL6EvzazAZA/31JtIYv2Sc4u97lYQ+2Lt
q08sYd/y4A+lZCtI6E3ZO5+Mgfs2NfmGTCs45HPG0ymVsFcgycsu3wrCdiZy
4XcI/XxQa+JiFbH+ccezJ3Iw6I3MGeoZt4IHkiz/QgsweH3kSlblvBWEGtGf
l3qOwW26IPvMNStwaj2eXf0SA6s4na6T7NYg4zn/sJHQ1yr6yqmHd1qD7PGG
C6QKDHjYhSxEJazhnUTDVEIlBi03Z78M7beGxLiIE5yEfn9u1XWt5og11Ohm
qKnjGCQK4Pr3T1jD50sV90zrMNDPvtXofNIavgSItpo0YdDwROPdeKw1sIiW
Ho37Quhfn91nGxOt4RMHT7o8DYMYJc5Dj25bQ938X8PqVgy0SkdKPQusgcf/
Ll7yFQPRsE9BeqXW8A17eZa/E4ONQ2UkuWpriNbkuurRhUFlzZXCmTZrmD1O
S+7qwSA9NujMp35rOHkwMW65FwOqjoNs4YQ1VDmbNjL2Y2DNojuZ+NMaMl/u
NKQfwED1k3Ke3x9rWP62xT9PMG+SkIsJIxkaL+rt/jiIwS8zRgllDjLYMpiE
pA1h0LpjbpBLgAzBWdeZzL5h8KKr6+6CBBnkAvK+/iE4MQO3a5MnQwLVdDhl
GAMfhwKBYlUy/LvhI7drBAMD8dTOFC0yBEUtP08hWHb03K1gPTIYjf7n94fg
7fme5lYWZNhhOuFuOorBpKc51wEHMkwcHL+T+v/vVfKaX/g9yFC0FcvwgeDc
ud3XVgLIoDh/Kn+W4NgiTv3uCDKka2DRWwQ7Ba9te32RDAe396bQj2GA1EYb
0q+T4YGL+eAiMS7251NsxB0yVJwod/xK8MabMrB/QIYL2ceEcwnuP39vU+MZ
GZ6pWXO4EFx19OrbXWVk+N7qcYib4HSm4MiNajKs7+C795ywn/re4eBgMxmu
JQsiDYKtE3RX3rWT4XO1qXA54Q9VY1JpzgAZvm6UYpIE83ILB12YJENVomvc
WcJ/v9oZSU4LZLiacluo8f/+Tpubg3Uy9PI8nf1HxOP6rlpvBk4buNkbZnuE
iJfvUMHeMQEbKPS/unSMiK/Bg9SJekkbsOLe032oj6ifvV7Olw/YwF4xxvDf
3YQ/v5uLeyAbkLbN0Kgg8qexUHNQV98G+FScjc4Q+RWrwmXHcsoGAqoTPHPa
iXqbrPZ962kD6znapZtEfgpn+kdTgmyA+/ZsiCGRv8X0LY974m1gszvIueAT
BufLzr1JTLGBj9iZtLcfCHu8FWmQbQOzz68av3mPwWhr4sqTYhvYv4vscL6e
yJ9Lh1lPvbMBF43It9q1GEQenBXlabaBnrrSkt9EvfHeN9SJGLQBvbSDUbuq
MNAOYE3VZ7EFS69Y7otEPXNKVz3+x2sLQrux+sJCDPq6vN+8ErWFN2kLGvVP
MQjS+jAqtN8Wxv+03irPJeqP4wo2c8oWHgrVPau4jYF/rbpOjpctOL0N1tW7
hYFG6JStRbAthBbNDjXewKB9QDe66ootGO6tlL1yBQOGQmZaQoktHIccZvkI
oj84lo1qVdvC7TztYOlQDDJ3uK8sNtuC4116KdbA/38PbxA9OUTsf+6O5z0v
DFwMLvoq/GcHyiZvs2fIRP+bpmP9fNqOuAc8SWEnYZCUVSQa7W0HcZ7kiiF5
DOzNnDDVEDt4ErlVl7MHg8WKGtusq3bQJmtePS2MgVT8+ce+pXYw/27vnXwm
op/s2TjOwWoPl8ZEJ790kMD//p+QG3z28PTiz6YHLSRw2LWaxyNuD6/Zozbc
mklwkGeRaaeqPYi63L9b+YYE8xtTDWKn7eH26wH57AcksO/4epxUbA9ZOuLb
7c+QQPXis+OW9iehlrv5gMKwMkhtPgnpdDsJyVMJYSM0ZeCKeJRnE3ASLOy4
j0fWKMOM/wMmh0sn4VHaGKtVjjI8sL/T4PbiJDAemNMsJO51nCoXj1MZHOC0
+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
2g==
               "]]}, Annotation[#, "Charting`Private`Tag$206897#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1: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
bPu1uBiPTCnnQNp6fvwP4zp9tA==
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$206897#1"]& ]}}, {}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
A/gdD5Hzbx254dzfnIsxmQdwm2b10CQubsjYufvzhYADeF1vWOCbci54R9t7
6LbYAZzfr0JbT5ILmMXt9CuCdfFjT32uzQ9tgXT32xoccvtx/3+/e9OT2KFs
UVw8O3Ev/iSft1BCihnqJR/Z59nvxUvfvjI37mKCXiOVzAL1vfhC2euS0Uwm
YLp9QKiySxvfsi1s45IQExzTc+Yb2aONHywnLzpvY4Se8znMpCFNPIFuduG8
5QZi3C47WXVIA79gMdG2xXUF7Qx3U7knqYGXhl6SPs2wgozbcv0jlzH8k9sx
vjcPltHVW7umSPkYLsrTnM/4ewlJiKhM3+XCcOv9PkXnohdRgEZA/8wjddzq
R24nnT6HXs3Puj62VcdB3Of7bMIcWi8OGXDiUMfnxI/lb2jMoUt7zgx+OaWG
rywW+s6kz6JHmueGcjVUcXfTjn++P6ZRp3bWKAVXwsukjkTeDBxHsisSvrzB
SniR8MMrAZNjyOfNvbFqOSX8nJNWwIFTY2hpb944lqSIH7upblcaMIr4dYom
ucwUcJ9X8sfUrowgyh+N0582d+NlD046l4mOoJyyV1MRL3fjR3U4XfXzh5Hy
/vLp4W278eeM7gk634aQkW7t7McueVz+7p5YTsVf6Mpf4yDaFXk89ec9alTN
IGou/zanguTxW13XkyfdB9HJAz/nbz/ciR+VaN3S9HgARet1L4b4yuEzbF+1
PhzqR5/+nQhTEpfDt1h2rJ8b7ENbKgaW+ut34BR5+9NZqA9l6P9eNiXtwPnO
ieeNs/ail2h+dfeKDP5lLbMNVXWhKxGHvxk+lMHjoh4pZmJdyPdl5l0XUxlc
0c0vp/xRJzpoFHtO7Yg0/q44/p3P7Q60+manotddKfxQ+NMXi2IdqEjx2/e7
C5I4o/keisWDdiTDI7Kd574Entn5dznyfRtqj60oP7Qsjk+p3Bg8ZtmGUmc9
XKOPi+PfzmqFzI63Iobml08nVkXxtC30v29UWtHbw3Zmcuai+Hmtk+ndzS2I
+mZj3iFPBE95L7O9Pb4F9WUdO/DVcjt+T/jyA9vxZpTBPd/PmC+MC8zUL3fm
NSOz2MzzOhtC+AHrU9/3eTUjtll9pSAbITxqQvglVbkZVZwc/pH/bBuOfe3Y
kbhERzT65ZB+hm24qbnwbWo1Hakd1hARoQjiGfIX4nQy6Wjkdft78/+24upk
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
               "]]}, Annotation[#, "Charting`Private`Tag$206950#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwVmnk8VF8YxonE2Pd9yZbs5g4lqce+pdBCZFd2YgYjLSgl0SaSIinatKBE
CzdUClHJWqJESSoKSfrd31/z+X7mzJlz3vd533Of87mLA6Ldti7g4ODQ5eLg
+P9zG5N4/e+fBxmqsOBNpK4K9KyGvQ2mPMjSP/vDllqo4KfYqWGfMQ8yKOQf
a2KjCvZWzE8/6PYgg/mO+5ftUUHRj6dyO8s9yPthtmvvvVJBb7Sf30yAB3kw
k6NddfdirI3I+vL9kTvZ6dL3cL5XFcu2jnC+P7SJnD/PcXvgqgbK5ZUfjL9f
Tz6piv92oksHLvY7tv/rXk8aXAk+wzGug3HWazWRtvVkbUH0+UBuXWg/P5Rh
dG89qSV6QFzYSBfFyTPurOz1ZJfE+NOpg7o48fHFxG8ravzx/SuHTPWQcGOf
1sISN/LEiYtPRY7pQ+rNuz7J027k/iTNGslSfdziNTuiecyNrKjc9ETgnj6+
+//4ZbfLjSyQOVjYPqSPEAmfhoyNbiSnrf/rK8sM4Jm4zEeEx418Pcp5dX+v
AcytRrPlg13JvZv7lw4fNMTdS9PaPt6upGP0pzlGtiFMhBbWF613JenbDTp2
nDGEYY/ydw24knotXxy/XDeEavTGNYayrqS/h/gu71eG4DlNcts0u5AcglvX
sOWM0D6RGxdl4EJmrPrBJ3XOCGs8LgiUa7iQ5VT0NS4b4emD8vOT8i7k1v7T
00vLjVCf3vKCzetCHi96UyH60Aih5txbeBrWkQIPGu97DhiBntPbYrBkHck5
dvXYYwU6HlkfuJ76zZnMTB+zLsmkY0hPysi/15mMjIuRaMqmY4F0SeXqR87k
HXvPqb58OlZ9rq+ey3cmr33qq+y8REd11nx9vK0zyfd6W5RUIx1lnXFdYQVr
SLWrxRIV03Q8q+P2dEhfQ0YEbZR795eOz5ey3yxhriG1Mw45zXER0EwqHxyy
X0MKk+F/eEQIFCl//eLz04nsVfilvmUJgRMhQRzrnZxI+uxA+awbgQrXyVQj
Eycycyx5j7oHgRcrUheKLHYimxsNb5l7ExASLKK1TjmSfQWpmquCCaSX90nY
FTuSMn5GnPE7CJTmh53UyHIkc27ldsvuIfBo729ZbrYjOX/Eqr5sL4EFm6SV
Hzo7knwCTRfOZhJImnVbavbbgYx+N5hXXUAg/8PgVdkhB/JGz8jkq3MEqlu2
6888dyBrfIsl+0sI/Cw8TNy+4EDmZhlm1F4jEGX1zNzAxYEcMWl1vHGfQECm
hZvaRXvypbXCaocuAnyi116HZduTtLRTFnK9BG7myGyu2GNP/mn71933hsB8
4TdfCw970kaqrtzwPfX/5QWRvnz2ZJLR1B6VMQIWJnw/Sn/ZkXnmbwvixgl8
ustijQ/akQU+0tr3vhMwaXRK2nXXjtxLD90p/YvAy87f6afD7ci0PaYnJf4S
SPTaKvDB3Y48oXfu9tg8AZWB9iPa1naktK+m2m0OBqI+X8ytUbAjj+xS7Zfi
ZkAySlyOk8+OnGAaatxcyMD9id0F9r9syWcCGddNFzFAm9t4oavVlqy0yt2p
SGOgPPnhEuW7tuTK08/vJfAz4LFQ7+q2UlvykJgPvV6AgVIh7opfu23JRU87
7y0RZsA5O9rYPNyW7JA2fmYpwsBP6b7qfe62pPX1Dp61ogxYLa6oEze0JQ9n
8HMZizMwWqJo5aVgS/6sW1QnIsHAce2Dj4t5bckvqsLFbyg2vfHTYfSnDbnP
/OyVPEkGBgi/VqNBGzKpdH2XtRQDB6qbXRJbbcgRrmHNQYr1zZd1kDU2ZI6g
fl6kNAOvHxa785bakHZHFmuPUrzTVqhv3XEbsjSso2+TDANqzYk+J3fbkFyn
2GWVFD9b93GwP8yG7NX1Oc0hy0BMh8tWTXcbUmv95EVzimU23/8UaWVDJmxo
fBFGcd3bJRG3DWzI2pwkmXSKtwVkf5uTtyH/5Q0m5VAsODIfa81rQ975++bP
cYpvhYdNHfppTfKmxOYlU+z1/XXiqwFr8ubfRlcfihfEWfyVa7UmW8MltXQp
vvy7LDmgxpr0GqiXH6XW57JbhvtKiTW5L9NRL4/i6QX7Dvw4Zk2W37fzNqG4
8MA3muluazKwi1nWSO3XRsDrcHKYNdnlVSpvRfHY0ceiTZusyZCBjqvlVLyy
Jek5wlbWZKOIuI8IxSvyC2TcDazJ3qvHCV8q3oNKfGcK5a3JwpTzeoVUPtLP
s5SHF1mT6dsrnVup/BloDRTr/bQi3wWszRkTY6CzzEkzbsCKbHZS4pmj8q1e
parHXWNFWo/kh32h9PHdY8HCkvNWJIuPyKoQovT3Z/CNzWErsqmBTzlYkIGN
FucyDwRakRGH1M7kUfpTHUoO0lprRX6WLc2S5GNgfL/fyqfLrchZxvDsHkqv
+1uUx2hCVuStyg+bFCl9u0X/a7g6Y0kqe2o7uyxgQFns3ek1HyzJfk6L59up
eqh2L3Q6XG1JOkncTtkxR+Dze4WrooGWpNf6o7rlkwSq0uZSK5wtyVhV4WmX
HwRStd54rl9uSaYWMmL7qfqUizpNyxG0JO3pwUfrPxNY81s2TKbagrzO9Vvo
Zj8BmTO/LWqKLUiLOkWO2j4CQ6t6ZD2zLMhPi76/qOkmsGtf3tPTARYkP+sc
PeklgevC0kuVBSkuW3xd4xGBHRVTHOQ0yL/DKaHnHxKw3djZ7fcepDOtbLVw
LYF3+TnpxXdALugI3FJeRUBEU+KTRgBIAU5TqFwkMMxWXbs5ajUpJn8z8eY+
AntqB//mW60m5+x0foonU+vjPnftjQzF5wPktyURcDiiLOjXsIq0LOs81RlD
oKxEoWWbzCoycnh872eqH8e8lHJk1a8krU5dmRigE9j3pzB9V95KUoXrneg6
PQK56kue7I9aSe45dcvgGtXv78Yvsz4lt5JUeHn/pKkCAS55j1W1sWakch8/
6wQ3gZzAU3RetRXkXueBYu+XdNT8lJc/s3cZya2X31oYQEeL4oXNJZuXkY99
t1VqetHRb6ubd91gGemmVu9ZtJ46z06tlHzYZ0ISkm/0Q63pcDL3Fh4mTMiS
KbVqNw063qYVchkOMUiRWWvBE0NG4JRePNZgTSe/d/aed9psBPWEAN2zinQy
7UlM6jMXI9h3nY/YMWVETn3I/LrK3giHT2p+NbxkRBbtIS7zLjOCgozueAG/
Ebnyx63ExRJGiKJHDXy7YEDWty/uiW8xRK9J/id3Upt8McSQXmJiiPLVEzNL
plXIvKIBB5EPenDTmG/KWsSJdvbod/meJXj29DXHuKgWJjr8OovUVdHttVvw
rK8W7E4ltYsLq2Lkq6acyzUtfLBefe3o78XgFmMTFfZL8fXzx7JLzxdjtafc
tvg92tg8mSu+KXExbo36NM+P6WJLhs3tpnYVtC38+WzRkCEI+b8rjMWU0bnW
3nWARu27rJRbe1QJ/SfPdFUbGWFffpX6ynoljC21GQrdY4Rw311ZNbFKoK3N
/dssR0f44ad/VF4rwjp3ueFRVwJaRQcCBs8qoEZzV45MnTGcwg1bJNbJIZ74
HLvqszFyjj2SZGjJgY6NLkHiJnANpRsnc8qhbLMe/81gEwiFOFgX3ZJFYebb
ZDuRZfBL7b/FqyiLfRPmEfH+y6G44aVK/ZQ0XGrnLTu4zFA5u+3KnzZJCDaH
qczqmWGHq+pylxuSeNbV+VfZwwyrwvsd+g5LwurH9erwMjNkbhkWzV0rCRN1
X32ujSsxqMr5uKRdAgoZdbL0UnMsenmqLuSdOH5qY8ZOHRjpmUs0WyqGZzmy
wz+WAX4S7M4jomIo4ph8ddoJ8Dq3cYfcrCicOktufIsF6qtK7V81i6I4hT/4
5ENAMUTjfleMKFy7O18P+1jAj3kpy6VJBJpWNxuOxlqga2++ieItEcxdO1i+
Yr8FRi121qgWieDS3pVZh69ZwCfC/EM3WwQcBsXWJnMWYEZGPfulK4LraZGV
aacskWbsZLkYwtj33facwTVLHFm4z3paSRieXipHekhLHFM75mA1L4SFRq/C
9D5ZQlStzXVVrRC2vFmu+trECrXZxwYfWwmBbicmssfRCpdlTA6s1xQCb8WX
v1o+VtgxaMHtwSeEygOFPTvTrPDsmabP03ZB0AjuY+odVuB4X+W2fqsgBgre
7n4+YoW0NpekC06CqOK9E8H+YwXfL9ulo+mC8O8PtW9Rtcb7iK3BMZyCqD7Y
9o8ZY42W7le+BiUCOPzz0lfFNGsQO7LVXY8IIMg3te9JnjV0eOrrviYKQMTY
+I48aY2ld2pl81wEEDyQH9UgZIPl8lWHbnMJQEaPg1dC3QZBpxjXGd/50ZS4
9VyQqQ02en5Is3nLD21xw46FQTYI5rD6o1DDj17fnMhNiTaoq+L+/OEiPw6V
zfJcPGyDiSJpXfOT/BizeWRqX2ODlroQ64sJ/DhzXPtV3nMb9J496Vsdwg/n
d0ciPn+wQWX0jNcWT35cZ3uezRCyBfOCabz3an74PKpb3qdmC+3Bgba7dH4I
i2m81DG1xdfldqlXNfmx/eo37tZAWzhd7vO0E+GHysyGQsVEW/glF1ZMLOTH
C+u7y6IO26I8xeGx0RwNqceUX9Set4XIubir3JM00Pv3hQnX2OJiCis+fJSG
99qjXH7PbfHN3mXFtvc0ZCesK7j5wRYHWc28v3ppsG68ZcL52xZ/K/wmpDto
+Cki1+4qZAelOkuetlYaLnjvCS1Ws8OOVVvc5Jpo2HhlaMHkcjukFq/78Lue
Bp5phzNWa+2QKZDQGFlLQ5XVDeMTgXa4yxj6F3eXhm1HJdqG2Ha4sN6vUOwO
DdJvE0OMD9thWCjiotUtGpqWvuPcf94O+0NWL+aroIEdb326s9oO9PKnIoE3
adBquMxY8twOtrvKE11v0NAjLPw84YMd6s9s8Om4TkPGFlZw04wd+KWa6r5Q
vOJyD4eskD32qHUXnKTGj/5alR+qZo9fBO90FzXfacsLxN3l9pj8erypjPq/
NUf4Wmlr7fHJOExI6jYNc31R27wC7SG6bFmDeDUNZVod/66y7eEb7TlQco8G
7zjTU3NZ9pCs/eLdUkeDUH0h3fm8PRzj7tIPNNJQK8TdUlBtD+co5w2dT2mI
8grdOt5qj0aVD1U1bTQoX3o+v+qDPVrvxzgbddKQbHHKaEDQAYvuf+57M0SD
4eH5Z4ZqDtil414p8pWGwd7AoJTlDpgferSr+xcNliz9k6qBDtDPzT+jxseP
CTLbkMl2gH2H3eNScX6cF/z9tCHLAa/s0rIeKPGD+2LDXFC1A3bE0Y+VmPDj
1qRW7u1WBxSfqsiLt+LHVhw24PnggJyVQ696XfjxuMcj4KKgIyZuJEZuieRH
usD4k88BjijIETyLa/zYOTJ+qjPBEbcXx05vqKX0Wv8tvCHTERZDDUum2vjh
zv4hXFDliNZFaez+n/zQHPrp7kJzwttqM6aljQDk6n4tNVd2QvOeBbo1ngIQ
zJ/6s5ThhKxTU1H3tgvg57qZs1w+TnDp8u70LxRAw70/I1XlTpg+MlFryEH1
j9y5mvOPnZBzWXLrvKwgrsT8PXS0zwlBUsv+bmQI4viSfwZhC9dgeiRmcXGY
IPyyF7AVN69BjXpq88W3gpgP4+Pdx+EMRdHN8UZvhTBhQ+vdLumMpFbpwJR/
QhhW4S/z1nYG1707xu6qwmjtFHBZtsEZw1qLA7JDhXHGUiRv9KIzhEt4t9vM
C8NUTlrLdd1axCXvqlen+rPuL+lZ86C1cFk6ahN6WwQq7TIt2olrMXggdsn4
MxHw7pfbzn1+LR4uPbOmekoEnT8Uq+9MrUWWXu+0vasoWE/V7ZUK18G8ybTX
UEwM73gdZIvL10H3n2f3Deq8cbSPHNV4tA6XtyQpB1mIQeXJ7Uy9sXVYJL65
OzxGjPIP50OUFF3gsGubwOQrMYj7Ma7phbtAZKD+751icUR4bTJZs8gV2XUP
0xq3SkI16ZOSkKgr8pZLKh3dK4mu/B2L2uVccWNO4knGOUlY9hZ2r9d3hcCc
XoRAvyTlX0Z2eG10hQKCu1ZslsKjTey6sPOu+GXnWSfqIQ0lt3z7g6vdwLq7
yoUrXhYPAyb2Kzm64c9JvQdmZ2QRxHR8VLnBDS4mC3OL62Vx5cSsRX+oG7rV
L5jNCsvBpMvTjDjhBp+FZmJNZXJw3iKv//aTG0L2+R08Pi6PndvOiBsdX49y
yfRY1lEl9Owo7O8e2gBly7IzLAVVpNKFN/N6u2N6ePzaypYlSNGYsxakeSKm
8cS3Yep5KqroN+uIhCdoqWansmf1sEV++oKosifGX+3TpYvqY7noBLcUwxP+
4RucrVfpY3xupFHJxxNa4gK6d07qw7PjlbVhhScYVQmh1+wMwNh71Xq9pxd6
ZW1vOzgbQnX+Eut1kBfe6e5+cNTdEMKJpRfco73wq53vRau/IUajznFv2eeF
GB6e+qXxhjjnebIx6LoXsu7UBm8rNIQQfa91/IIt4Mrg//puzBAjA57Wp65s
weusqEWWKUYQERqd3HZrC95Kqu86eNAIK8wSzzNqt6CPP5L/8TEjZOacXND+
YgtS3okxlIqNQHfsIHl+bwF0SmkO9UbYWelszrLzRs/g6ZokDjpKBt6MWbh6
Q/6m5xVBXjqeC0acEfbyxjXLosfZwnQsDsn4cyXKGxvCYh12KtHxWOFJzWCO
Nx7tnp24b0aH6H6YrBvyxleZtVPfmXSsqGz7qDDuDeGzK43rdtARNOCTMzrt
jQNLWpqSU+ioWrHrZxq/D0R2WN17e5iOLd9qKu7TfeAfyhXz9xIdpR6EgXaK
DzY03ct42ktHW1p9/3SGD5ZLxm5+MkDHTIXr4UcnfDD7/cyDO8PU87vg9q9+
l3wwUz0su32Cju8Py66ebPNBDO/37+Z8BMx0NLUWKvmC/eDNoDWDgJtDkl6p
li8k8oMFX5sSCAlup9sRvuAJ33Fjw2rKj5zfYX7Q3he+S75oqjoS+C7f5ibI
9EXX1Pu8nz4EFq1Q97i+yxcdcqf0/gUSUPJI9F6X7otp4d99MyEEnE6ohRwr
8AXHCR7PmlgCpQLsXZJNvnD8dqc8Mo3AA+3W1KqXvriaK/P520ECHfaq6e5v
ffG44viw32ECnGktx09N+GLz1m4B4ZOUv9st0nFYyA/hiWrz+ZQ/450O+ixm
6ocJtW3XQim/J7FfOCJwlR92vbbg7mgioCx5d7zSyg9qgRW5ui0ETAjhnxvW
+mFP97zLJcovBkbXzOcG+qF/7sSmp5TfjJoPTBkJ8cPVzo2NFwYp/5glxL08
iprvONeyqCECR68G8vWwqfHddWLNlF+tHRGUkD/sh2VrijnLKL/7NL46Nzzb
Dx2/T09O/aL2szBQ9n6eHzxukg8MZgh8UatW8j7vB1e6ypMwyi9PVQScu3bJ
D+w8vr8R8wQWWAqqz1/zQ6xr0swWyl/L+AUsPVvth+XOQgY8lB9X/yZQ9u2B
H0Q8lAPqFjJgsPuOPhr8kO2e57iN8u+2ZwQYg61+4CvforeL8vuuOneqjF75
IU2hV+UrPwNb7vqbpnb7ofq62n1HQQaY3VWr1D74QeaKWf9zYQbOQDtF9pMf
Km78DH4vwsDjSwUNwl/9IKXqMfpRlIFvIqI8PBN+4CCZgT1i1PoS99nPTfkB
YqwX98UZsBiczpj44wfL6Av0oxIMhDmEt37i8IfLfFTaekkGssv7hd8t9EfR
3S1NPFIM3Jd1c3tN84dqvOTsZYo/pjw60SzsD/E3vrLm0gwIjS7veijhT/mB
xRokxcvdymSrZf1xp8hHgZBhwP+u8pbrSv6IvbRiPofiDNXswgtq/sDN6aef
KL6VwTOYr+WPTHJqt44sA28nEtWO6fmj8tEdhf/vh3i8vm49QPfH9NGe4v/v
jwwa/C7tWuYP8x5Z0WyKPXQ6Rpkr/bHPbGPw//dPqdl2emEW/jAxO1BygOKr
f+5G+9n6Q8PyWXMoxR2B+hWbnPzhU+Tea0bxfPO5n2tc/HH30IEXf6n1LGFI
LrPa6A+G8ovyG//fP51JTzT19Ae357MkV4oTuefuGfj6I0VJy/ADtd/iiOh5
jSB/NBrWtgVR3NLxHgqh/tRz/h6vTipev1Zu2isWRf3++s6OZRQrlTx9xMv0
R9bssNlBKt72gua8/xL8kbdeMPsZlY/8t2pZX1L8cc9iq5Qila8Gm5Ntg/v9
wcFss9Gn8jl2jSbWfcgf399vCzeg8r1694/cxhx/8B8cLOKk9BEyHNRzN98f
YpWTt15S+jm+tlu+/Kw/4v4cfZItwMCQUl1RwWV/XJpSmPjIx4DgAfqH7Ov+
SGUZCifwMmDyrUQjo9IfY2dkjGd4GEivy7wS/8Afbt2cF59xMaDn53lr3Qtq
vamaSTep+tjU1Dpl00nlW27auH6WQLKhhenKPn9sd/kq3kjV00sOrVqtjxQ/
r7LP+0kg/tyvJ5y//WH2ZTPv3i8EzvKF0mb++mN1t+JaKapem2LerBlfEIAu
s1/dp4YJyFs2vOgVCMDedIkXMVS9k++P9lWqBGDIc0n31k6q/vV1dI9pUN/f
zTyb8YoAY8ejnVHaARiPCthe1E7gkuis4lJGAAqN563OPqP6AwL9Cu0C0HvT
w2X0AQG/QuOP6VEBEOTKsrx3joDcaJvxNmYAEpZFB0wWUP3BOGy/FTsA7ktL
xxXyCdi3Fi6ZTwnAlcHkEOvjBAznFoUxcwJAS2y5/jGFAIdn77j3/QBsvqxv
zab6790S1mqzhwE49mr/7WebCbB+CB2VeRyAfM1ZEeGNBD6lWxm9agtAwU2z
y5FOBNrvlDHtPwRAs0zCc+8yAkWSe2botEDcYJ/9JCNIAC/UFvB6BCJKMNqC
uE5HjOS5v2u9A5Hz+PdPx4t0FG9W+p0TEAiX7wF564vo4Hov810tMhAP3eO+
LDtOnYcTgv2rUwORZWEcuzaOOo8kZmoSygJRkyz2iVxOxyb3lpgRjiD03j/B
Z3TbCPtPO0Tq8wSh651N5P4yI9x59zgkjj8IUVYxg8/PG0Em5KEvl1QQ3q8T
sDM9boQ+dpWzsk4Q7qw0V4mPMoJfftFS941BqBxbpXNO3Qjhb1mDjy8H4Y3Q
MK9TuiHuzt49U3k9CHIs7meduw3BK8PpUVRJza/Vl7I5zhClblnPEx8EYWdQ
pqJ1gCEGnpTc030RhJWFl/7dMDPEhorOnOMzQfg31jo51GOAlQeWO/rYbUVG
lulZp2x9CBrNVfwa2opG0RFp5QEdeBZbmB9ZEYxPdpftYm9o4ObpY+Utq4Nx
s3rnVqGTGuDJGdSg2QTDeFlz/PXdGqg4kCKUti4YG1blWP9x1gAt8uG7HUHB
EJ7+tbp1TB13l1mkbjscjLX0nTrJOuqQa8UT8/fBqErgqs+4roq+6dWuYwdD
QA9iPEssU8baZx5pbYdD8GIOqx7sVaZ8YUxNRXYICpztnBW9lHHF4vzixIIQ
rP1UF8agKWPHIZ6JheUhqFSefPM4VAmyyq3HlbtDUP7yUcUDfUW423p2uGmG
wvXC55xvL+TwTIbJa6ITisjZO5c3XJPDqi+HVsoahkJuJsLrXbocNI8+uPDO
NBScpl8vboMcpnpU4iKcQ3G1ItzCulwWOZEjkvtZofgrZhkaly+DVydY7jX1
oeiQwYXoTCnU+m434WkKha3dVJh/mBQuaUdIrm8NheDWpsZ0eynsJgNfjXWF
os/v/ebEhVLQGnNbp/I1FG/PjfCOpkhip5WR3QHpMBycth62S5PANiE9zQ6F
MLj/nDt1a5sEXHu0Fi5WDUNVxn5HL3sJaEarNNzVDYOwQMpVdwEJtOcLrx63
CMN8jU62+ElxqE98NdkYEYYitbo9bXfEIPTgs2RxTBiMnd4Kz54Rw+8DH3+O
x4eBuH70QECqGJ4rvq1ITwlDrqax1LizGNgOLfr3c8PwfYB7/NeIKFqLrmiq
PQxDY+HE9ZkloqgOL124/XEYKjaP9ciLiqLYpHjofnMYNl6rWZc8KwJ2y6ni
TZ1hEDnrNSj4XASqM+lKGV+o/czIDYEtgvh1wVI/JMOxuXlZpneFMHZP6tz+
IBeOfefrLsccEcaBk9/XdyqH44Kwd9JchDDy3iUeu7c0HGv1JCwSlgqjJjpT
YL95ON78dnLhvSSEenHXq2zLcHgtSBfqSRfCszuSjuF24TA9rhGvGiaE3n+F
B1xcw6GxRUNHRV8Ic0fKF8hvDYdBGrd36z1BcDPizwmGhePKhsCC0CJBCHav
AEd0OIo/9lkmpwlCSaVx10d2OAy33zio6CpIndOdMzcyw1HrcC1ccVwA9htO
nyw+Fo6YWF4c7xSA64yvSU5uOERUn8+m1gkgAJ+ZO4rC0XDl4cvu4wLY2/5n
3PpWOMQ69xZ7rhZAJovMWlYTjtyNH2wrdQRwQiZNV7s2HClt/dIHZQRwwU8o
TLgpHG2qYi/KJvlRxv2Kd0FrOG69ufhvdpAfty+dvPjzRTj2Np8YedxO+f/v
Kh97+sJB3h/c2n2DH89PfNzbMhCOJaeVzZSK+NG1/Ipq3cdw7BqPtnt/lB+f
kgm/C9/C4f32Cvsjkx80Udu+KK4IHD0bY9i3mh9it2k7/HkjsM2ZvCPJ4If8
5jaZDYIRCG72tm7T4ofuOY9NptIR4Dx0tb5OnB8MG8VfOgoRUCKOvpni48fK
z4PZSosjUKCju+YaBz+cjcJfcOlEgPkjJTbvGw2bXhtsnzKIgOyBLofWERp8
En8KfWZE4GydfHXKAA3bFGuu9ZlGoKvFrPl2Dw1RD3eteb4qAt4Mo6Ohr2iI
32r5hbSKQEcVp3hBKw17+BZlVNpHYHZ5nY9LEw3p15q1Sp0jEH39wK69DTQc
dT36JM8tArt40tgmdTQs7UlixbpHwK9n3ibpHg31fsGL12yJgKrVG06zahq2
fHJ7ruEfgdOyEhVxt2n4Fb0q6d/WCBSfu+elU0nD4emlWj1hEbifxsO1pZwG
rT2SryuiI+D/3Pbqops0POThTM1kReBX39gm/Rs0eB4e09+WGAFGwIFF7ddp
mJTs7lu9OwLbtzY8GKM4s6AhXXZvBOxMIxL3UeM1NG4YTx6IAE9KuOlJar7a
svz3LZkRKDF6+ke9ggZ3xv4jpceo/ORcfaB3i4bv92JWJudGQMrVPam8ioYM
K+/Pm09HoDfMwPBmDQ1qzfa5RFEErrrd7lz6gIb7bgwrwRIqPmPpIUoPqXz0
Kn8fvkzNfzqkP+sRDd/8+QvI6xG46WJkyH5GxfPzlEN+JRXvk/0b3rbRsDjm
/RSzOgKVlzMsH7ym4e5M63nnBxFI2hU1Lv2GhrFFJX85nkTgANvL1XyUhrQj
R6/0NkdggCNmfNEEDUrSO91vtUdgcmWXpPMsDa6a68uDe6n5OBY+thXgx+i1
VT4W7yIQtuel3h9Jfuwz1uaXH4pA7Ju5t0tV+FFlzbn1+dcIHMlua/5lzI91
LWOilyYicMgyafC4BaXv9d21KdMREG3I+HbZmdJv4A0ZY85IOCaYn7YJ5set
0fxHQjyR2DH5ke8Zix9rY/fHfqJFYo3WX7GmVH4kp3i3nJaIRLvCl0xDqn5k
+RwS42QjkZD0/Ek+VV8VRxma65QicZ5YYbS7jh8fz/InL9CKhL64sdzNAX44
1tYQoWaRGM+efntfSwAfbEoGLBGJ0zdidb+aCWBn69EsBZtIfL7IeylnnQBu
vAkeaVsbidljwTlr2QKQ+CN52iQgEk/pCxdvaRPA22WxC7gPRuJq07mvD7MF
MXYHnnaHI2HhfufJ1ZuCmFsmXJGRHYmtgs/nlJ8LQmF5mb9oYSRorZvYpTQh
bFk+TCpVRuLyDtl49Qwh9C333GP6NhKCo/HNpcXCGK3W6tr5PhJLqjfPSjYJ
U3U0rU+ORMKnrPIfbVwYcqYn+m0nIhG7zKu4XlEEnqbPzTcsisKGb7fue0SJ
oMfUci7KKArLLnqxW+VF8alGZEOFSRTkPpuuP0sXxYzpu6u/zKLAbjttW+4g
CpkVO7122kYh3Yj/xgm2KDxWVN096BUFAf7AH+t7RNG1QjvxQloUrgT6vUor
FcNrM7Gpnp4oRJ4TjNaKksCCnMuCDf1RmDxla3MgQwKG49Ao+xAFKYfZAumL
Esgsit6w+2sU4l6f+dc8IAHLha0VqpzR4H6vnbVrkyRuPj8QHa4VDdLj6o+X
jlLI9P/7aS4+Gk9WLievbZRBsdXPr8K07Yg9W+TvOKwAVoTRuhqB7Th0+J9d
rIgibHOibgYIb0fw9yMHHq5QxJfhT7G3JbbDbP/k6Y4jimBkvJ32VN6O+fMD
z+rNlPCo/TFnKWM7PNc8uBuer4xP3qckV/pux8GpufeLly+GAXuVecit7bDd
a7zoE6EOdvv5NPb6GEjZnX4R/3cpiru6nT9tjEFioMdDDgltNPcLSnl4xIB+
VKolTVsbSl8TSpd5x6DUoOVQsrs2GvnWPJnaFoPzSbc0GeXaELH6yRu3IwYH
F8qlRgfq4PJt68yYczGo7DorL12vi978j8fDvsVAbprLyN/XAKuVMg2FJ2Lw
x5l+Sz3OABfO0Z9X/owB6ehxvzPDAFGX9vD9/R0DRnle4cIqA3BWySYf4Y7F
8mdbGxsXGkLrhXPkLdlYXBoMrEzebIj4RVV281axuNx7rnXFb0P0ZWz5WGwb
ixvQP9+9wAgQ4tpr5xCLjKfD38IEjECTdKk9ujYW+ffST0coG6FAdZShtjkW
qbd6fw9aG6HRXEnVPioWO16myO3NMqJs/f65Y3mxSL7yqlpKkg6eINEdfKdj
ofqVseOEAh2z689MJxfEIvJKrQyPOh2DRMVEdHEsiof6bzXS6bg5+faTc1ks
zmhGf7i2jo51TOPXfGQs1t4VWK5+gA7LQNItpT4Wg4l9vj1ZdJisd2qfaYzF
QfrrrJQTdOrc828eeRqLsJddT6+co2N8IvPho1exWOkYvs33Hh2ZsUPXUkZi
4bG7utR2jI7kgGid359jway8k6Q5QQfLbfbS9rFYmO1OyZuZpsOLLnLB90cs
Tt7z3sXkIqA9YZZv/icWw/vcHtXLEngak73/txATymLP9GqtCNz3V+KOEWWi
YSDg0AN7AjddL6d8Emfiu1JE5nVnAnlGdTu7ZJiIlApev9WdQMiP0djbqkys
ClT+pR5GgCfG0jfGhImyUOMPQ5kEjN+uqlA0ZSL2wxcZ12MEghzMFj4zY+Kq
om/b1RwC9YsZV1UtmLgX0X5St5DAnpca06+cmGD/qzvqeZ3A9VWqjslrmTA9
qvfItIJA/xWlAl1XJqI7/xouqiKwcq+0VdomJlTiFmVFUP5zhuA7YuLPpPy0
KdOvmcCSooXv3wcyYW2luvvmc8pfCywwPrKNCSnZueTxFwRuDc32joQz0SPf
4MroJhCTM6Z5Kp4JzUZD3+EPlF/k/Jxok8iEYLJ8SAnln9sjP7b8SGJiNesY
4Ub5a33b/ljHFCaC7aJmWeMERqfaav8cYuL5K46r/dMEZANbRC8dZuKx1Spt
fsrP27c1BW04xsSx48+gQfn90osPaddymSgJN1usysHAa/Fa782nmHDbvfI9
9wIGuJPv3lx4honwE4+0XnMxEOhRucnnHBN/L0aarFrEwPHGG5dpF5gYuzLx
q5OXgXrDsrmqUib0W5t1vGkMqPCVFAuXMXHzkcBXI0EG1sWd+3XvOhM5ehqx
yUIM7B4ssA8pZ2Lx8ITffWEG3tTkjpNVTMhMd27///0bfs1si8gaJjat/ZzJ
Ic7AiuNHTsjeZ0Ly3yXeCYrD5g+NPKplQu/pn8F2CQZOhaWviH3IRNiv71IF
kgw0de7LUmpk4uPmhyWbpBiYsUwZePaYiSnvtsy/FC+5sYtIeErF62/ps2PS
DGyS37FfrYWJu61/vcVlGEg7EN/T9pyJubkKm9T/77cmY3V3vmBivUdbcj/F
H3yj92h1MKG2Jk1IS5YBsZbwlx2dlF6GDcf/v++yWB6ikdLDhEWXu/Jeirdf
CGLrvWGijXn53AmKi0T8m3v6mZC7Pc/6//6rbae30v5BJhxNPU/tofixZ+SM
xhATrvS0r5sprl2+6+WjYSa0BX6uVqW4SiqrbOtnJnK3Kh3rptZz/eeZ/QvH
qPwcKh7cSXHpyzK/knEmNHbY0IUpLrh5f4XNDyZSOif2HqH2e+Jwi8THSSbM
f9zv+j8emRFvxvdNMTH+8I2+J8X7HMea1H8zMTlUnnGBimeS1lxx4x8mkvPq
x/5/vy2WR2BX0DwTHjX3NnH9f/84JO/OzckCo277M2kqPwH1OkYXuFjoru5z
kBNjYHORGb81Dwsv7RS7aFR+7bd41e3lZ8EwKli9itIDVoSfUhNi4f2fmM/b
Kb0sk0liNoiw8IjD/bGsAAOaHflLuKRYSLvl9cqYjwGliiuc52VY8Fcs57tM
6VHy6N0+S3kWxIPWBNF4KP2u6T2SqsKC44ptJ05Sep5bOhqqqsYCf6xzTAOl
98lFs1b1GixoNzmlvJ0n8L5BdoZTh2Iebqc3VL2QZpv9UoxZaP4xzbFwgkC1
bOiKxctZkLBb/KP4G4Eb02yJhytYEEjVMzX4SqCwMq+JAyzUzWoOi30isFOn
2zDZkYUTrGiXRW8JsPg+0VScWVA9nHBappdA+Mj0UN06FlZUXI6Q6SLgeV76
1L8NLFxenHTvQzsBU3l3zj2+LPQsz2y63EDA8Pe2PqUAFuY4T3IakgS0uuJv
1waxML8rbubCfQIy2bmh86EsfPSxWeV1m8AUrfPFLhYVj9MRvLMlBCpmNxTv
PMiC0EpzTt59BJbbOGz5doiFmLMimS17CNQdMZcKOMxC1NSljNQkAi3qmhl2
2SzUntrE1RBLYHjtdIxYAQtJbzqe5voRkDt/yuLSTRbufuc3P2ZK9auvWX/k
Kllgvt3IGcOg+t/y1NtZt1ngOmf72NKAAKM1bCnzLgt/wn+y76sTWDttJrqq
kdJDncxJPmECKU79A6+6WMjRf39HfJAO3tyX+ba9LKyPC3KQ6aPj8MDjDTVv
WLA9mJsq/JqO/LgbTYWDLCiMWsp2NtFx62zyzdAvLCQrV8k+ukHHp0nV5H/z
LHTx4QkjiQ6XM8HKOppxsGSXkhW8dIgFtl5/qRUH7pOtG5I56OhYSqzaoROH
3YmdMpgxgvud+S1PDeNAZpsk5o4YwedlTn6wWRxeSwYUFj0yQiRvo+QFlzjI
cr3/uWKPETJYKgKKSXEInz68R/SzIRrX9MwItcdhNvxY/6tlBpBMVgs5+DIO
sabDIqvVDLCtMrKL63UcpJQup5wWMsAiuQVVMz1xaB18cF/roz4cR7SZ7z/E
YYW22GTeMX20p+z8ens6DrqHDx6YHNHDmyrl91uU47H6ueC5G4d0MamyrflK
VDzUY1N4k6qXYmVwW4AWLQGl5jkbvUTUcTS9UL9ZIAGTdgdGjGbU8PFy5Gyk
cALiooLmhAfUcHiM/3ilRAL8RrmTP9xQw0CM/cNVygmQDlA+/3WdGvbtfKi8
kZGAtzzPH9w7poqWY5VvUnwSYLRppUip4mKoVKZeUven5nMfedXOsxhxHa6s
J4EJeFbikMT3XYXyS9/5BUMT0Fh1eEVJvQq2n9E1y2Mm4DFfe8+hEBVIXCw5
dT09AV4Cc87JUcrwun9yU19FAnL3FkerNyhglaPTAtfbCUgrSm6MOaMA1e75
a4/vJCA1K//wYJwCle+tCyvuJ2D0ikfJ0qUKiNdh3Ep/nIAb60LqA4/J43h+
u6hJbwICp+4sqg2RQxObr/UoJ5vy3c654wwZlPE8YPNws6E+UewmJi6DIye2
q+/kYUPs+Btx/x/S2HSzKymYn40/f+aKk69L48NIifYqSTYcJGgdz7WlMb/J
Mv2LFhvrpVui3+pIwdg4ycrWhQ3ngidO/q4S6Eiy1F64ng33xBem8nQJxNbz
iTZuZIPR5fFeXFwCN9fl9Vt4scE5u3R//WtxaIfdTjTfxkZirdM3BR9xKJ39
doOxk40ktQUCXEliuP+xKndyNxs9LouznvqKwUt3966KFDbEuzeKvrIWQ16N
gJPhATYqNDhUbgqLQbxj6bDOcTayjl1SOnVJFLx8QQpql9hI1/nT4TkigtJ1
Olzvr7ARaaf0PrJdBDa5E5+LrrHhm5FQ8KRGBKlqKXeUKtl4vpc+uS5LBHPm
hW5ytWxoiCx4VLNMBPn7tpr2kGwE7MmdWKQmAtNmXZW8Bjbe09W3FQqJIN7j
3lfJp2xcm+J+4NAqjB+x3emiHWx8sj29YQVDGEdrzka3d7IRtOaC9VZhYehz
BG860sPG2BmD02pfhBCR9UtN8B0bKmk727wuCGH4olgd7yi1/33H3BoUhbBv
vKfkyRgVT//GXcf/CkLN+Fzm/m9snAnZSjlYQfjVG3hy/2Jjx0Rvyb4iQczz
TqNhmg3JZYbEtVRBFKyrXZI6y8byrsnmiK2CWJmbJmTxl42Y1G+3GuwF0ftm
za9//6j9SRw0qtAVxH/Ps0Tr
               "]]}, 
             Annotation[#, "Charting`Private`Tag$206950#1"]& ]}}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Coinc. per 6 min\"", TraditionalForm], None}, {
            FormBox["\"Measurement Angle\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           Thickness[0.006], FontSize -> 12], FrameTicks -> {{{{-15, 
              FormBox["\"-15\"", TraditionalForm], 0.024}, {0, 
              FormBox["\"0\"", TraditionalForm], 0.024}, {15, 
              FormBox["\"15\"", TraditionalForm], 0.024}, {30, 
              FormBox["\"30\"", TraditionalForm], 0.024}, {45, 
              FormBox["\"45\"", TraditionalForm], 0.024}}, {{-15, "", 
              0.024}, {0, "", 0.024}, {15, "", 0.024}, {30, "", 0.024}, {
             45, "", 0.024}}}, {{{-45, "", 0.024}, {-30, "", 0.012}, {-15, "",
               0.012}, {0, 
              FormBox[
               RowBox[{"\"0\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {15, "", 0.012}, {30, "", 0.012}, {45, "", 0.024}, {
             60, "", 0.012}, {75, "", 0.012}, {90, 
              FormBox[
               RowBox[{"\"90\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {105, "", 0.012}, {120, "", 0.012}, {135, "", 0.024}, {
             150, "", 0.012}, {165, "", 0.012}, {180, 
              FormBox[
               RowBox[{"\"180\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {195, "", 0.012}, {210, "", 0.012}, {225, "", 0.024}, {
             240, "", 0.012}, {255, "", 0.012}, {270, 
              FormBox[
               RowBox[{"\"270\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {285, "", 0.012}, {300, "", 0.012}, {315, "", 0.024}, {
             330, "", 0.012}, {345, "", 0.012}, {360, 
              FormBox[
               RowBox[{"\"360\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}, {{-45, "", 0.024}, {-30, "", 0.012}, {-15, "", 
              0.012}, {0, "", 0.024}, {15, "", 0.012}, {30, "", 0.012}, {
             45, "", 0.024}, {60, "", 0.012}, {75, "", 0.012}, {
             90, "", 0.024}, {105, "", 0.012}, {120, "", 0.012}, {
             135, "", 0.024}, {150, "", 0.012}, {165, "", 0.012}, {
             180, "", 0.024}, {195, "", 0.012}, {210, "", 0.012}, {
             225, "", 0.024}, {240, "", 0.012}, {255, "", 0.012}, {
             270, "", 0.024}, {285, "", 0.012}, {300, "", 0.012}, {
             315, "", 0.024}, {330, "", 0.012}, {345, "", 0.012}, {
             360, "", 0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 260, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"After Cyc: 1-1\"", TraditionalForm], 
         PlotRange -> {{-14.4, 374.4}, {-6., 36.}}, PlotRangeClipping -> True,
          PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox["\"\"", TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
     TagBox[
      GridBox[{{
         StyleBox[
          TagBox[
           
           GridBox[{{"\"Basis\"", "\"Parameters\""}, {
             "\"HV\"", "\"v :  0.97 \[PlusMinus]0.05\""}, {
             "\"\[PlusMinus]45\[Degree]\"", 
              "\"v :  0.71 \[PlusMinus]0.06\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7], 3 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}, {
         StyleBox[
          TagBox[
           
           GridBox[{{"\"Basis\"", "\"Parameters\""}, {
             "\"HV\"", "\"v :  0.97 \[PlusMinus]0.05\""}, {
             "\"\"", "\"\[Theta] :  87 \[PlusMinus]3\""}, {
             "\"\[PlusMinus]45\[Degree]\"", 
              "\"v :  0.72 \[PlusMinus]0.06\""}, {
             "\"\"", "\"\[Theta] :  -42 \[PlusMinus]3\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7], 4 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
       "Column", 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{1}}}], 
      "Column"]}, "RowWithSeparators"], 
   TemplateBox[{"   ", "\"   \"", 
     TemplateBox[{
       GraphicsBox[{{{{{{Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{0., 0.5857864376269049}, {0., 2.}}], 
               LineBox[{{0., 2.}, {0., 3.414213562373095}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{117., 13.757359312880714`}, {117., 18.}}], 
               LineBox[{{117., 18.}, {117., 22.242640687119284`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{135., 6.}, {135., 9.}}], 
               LineBox[{{135., 9.}, {135., 12.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{162., 2.}, {162., 4.}}], 
               LineBox[{{162., 4.}, {162., 6.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{180., 0.}, {180., 1.}}], 
               LineBox[{{180., 1.}, {180., 2.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{207., 6.}, {207., 9.}}], 
               LineBox[{{207., 9.}, {207., 12.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{225., 5.17157287525381}, {225., 8.}}], 
               LineBox[{{225., 8.}, {225., 10.82842712474619}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{252., 9.39444872453601}, {252., 13.}}], 
               LineBox[{{252., 13.}, {252., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{270., 15.52786404500042}, {270., 20.}}], 
               LineBox[{{270., 20.}, {270., 24.47213595499958}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{27., 0.}, {27., 1.}}], 
               LineBox[{{27., 1.}, {27., 2.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{297., 10.25834261322606}, {297., 14.}}], 
               LineBox[{{297., 14.}, {297., 17.74165738677394}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{315., 10.25834261322606}, {315., 14.}}], 
               LineBox[{{315., 14.}, {315., 17.74165738677394}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{342., 0.}, {342., 1.}}], 
               LineBox[{{342., 1.}, {342., 2.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{360., 0.}, {360., 1.}}], 
               LineBox[{{360., 1.}, {360., 2.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{45., 8.535898384862247}, {45., 12.}}], 
               LineBox[{{45., 12.}, {45., 15.464101615137753`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{72., 6.83772233983162}, {72., 10.}}], 
               LineBox[{{72., 10.}, {72., 13.16227766016838}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{90., 10.25834261322606}, {90., 14.}}], 
               LineBox[{{90., 14.}, {90., 17.74165738677394}}]}}}, {{
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{0., 8.535898384862247}, {0., 12.}}], 
               LineBox[{{0., 12.}, {0., 15.464101615137753`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{117., 6.}, {117., 9.}}], 
               LineBox[{{117., 9.}, {117., 12.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{135., 6.}, {135., 9.}}], 
               LineBox[{{135., 9.}, {135., 12.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{162., 11.127016653792584`}, {162., 15.}}], 
               LineBox[{{162., 15.}, {162., 18.872983346207416`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{180., 11.127016653792584`}, {180., 15.}}], 
               LineBox[{{180., 15.}, {180., 18.872983346207416`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{207., 0.5857864376269049}, {207., 2.}}], 
               LineBox[{{207., 2.}, {207., 3.414213562373095}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{225., 0.5857864376269049}, {225., 2.}}], 
               LineBox[{{225., 2.}, {225., 3.414213562373095}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{252., 1.2679491924311228`}, {252., 3.}}], 
               LineBox[{{252., 3.}, {252., 4.732050807568877}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{270., 5.17157287525381}, {270., 8.}}], 
               LineBox[{{270., 8.}, {270., 10.82842712474619}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{27., 1.2679491924311228`}, {27., 3.}}], 
               LineBox[{{27., 3.}, {27., 4.732050807568877}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{297., 9.39444872453601}, {297., 13.}}], 
               LineBox[{{297., 13.}, {297., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{315., 10.25834261322606}, {315., 14.}}], 
               LineBox[{{315., 14.}, {315., 17.74165738677394}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{342., 6.83772233983162}, {342., 10.}}], 
               LineBox[{{342., 10.}, {342., 13.16227766016838}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{360., 8.535898384862247}, {360., 12.}}], 
               LineBox[{{360., 12.}, {360., 15.464101615137753`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{45., 0.5857864376269049}, {45., 2.}}], 
               LineBox[{{45., 2.}, {45., 3.414213562373095}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{72., 5.17157287525381}, {72., 8.}}], 
               LineBox[{{72., 8.}, {72., 10.82842712474619}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{90., 3.550510257216822}, {90., 6.}}], 
               LineBox[{{90., 6.}, {90., 8.449489742783179}}]}}}}, {{{
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 3.414213562373095}, 
                  Offset[{3, 0}, {0., 3.414213562373095}]}, {{0., 
                  3.414213562373095}, 
                  Offset[{-3, 0}, {0., 3.414213562373095}]}, {{0., 
                  0.5857864376269049}, 
                  Offset[{3, 0}, {0., 0.5857864376269049}]}, {{0., 
                  0.5857864376269049}, 
                  Offset[{-3, 0}, {0., 0.5857864376269049}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 22.242640687119284`}, 
                  Offset[{3, 0}, {117., 22.242640687119284`}]}, {{117., 
                  22.242640687119284`}, 
                  Offset[{-3, 0}, {117., 22.242640687119284`}]}, {{117., 
                  13.757359312880714`}, 
                  Offset[{3, 0}, {117., 13.757359312880714`}]}, {{117., 
                  13.757359312880714`}, 
                  Offset[{-3, 0}, {117., 13.757359312880714`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 12.}, 
                  Offset[{3, 0}, {135., 12.}]}, {{135., 12.}, 
                  Offset[{-3, 0}, {135., 12.}]}, {{135., 6.}, 
                  Offset[{3, 0}, {135., 6.}]}, {{135., 6.}, 
                  Offset[{-3, 0}, {135., 6.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 6.}, 
                  Offset[{3, 0}, {162., 6.}]}, {{162., 6.}, 
                  Offset[{-3, 0}, {162., 6.}]}, {{162., 2.}, 
                  Offset[{3, 0}, {162., 2.}]}, {{162., 2.}, 
                  Offset[{-3, 0}, {162., 2.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 2.}, 
                  Offset[{3, 0}, {180., 2.}]}, {{180., 2.}, 
                  Offset[{-3, 0}, {180., 2.}]}, {{180., 0.}, 
                  Offset[{3, 0}, {180., 0.}]}, {{180., 0.}, 
                  Offset[{-3, 0}, {180., 0.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 12.}, 
                  Offset[{3, 0}, {207., 12.}]}, {{207., 12.}, 
                  Offset[{-3, 0}, {207., 12.}]}, {{207., 6.}, 
                  Offset[{3, 0}, {207., 6.}]}, {{207., 6.}, 
                  Offset[{-3, 0}, {207., 6.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 10.82842712474619}, 
                  Offset[{3, 0}, {225., 10.82842712474619}]}, {{225., 
                  10.82842712474619}, 
                  Offset[{-3, 0}, {225., 10.82842712474619}]}, {{225., 
                  5.17157287525381}, 
                  Offset[{3, 0}, {225., 5.17157287525381}]}, {{225., 
                  5.17157287525381}, 
                  Offset[{-3, 0}, {225., 5.17157287525381}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 16.605551275463988`}, 
                  Offset[{3, 0}, {252., 16.605551275463988`}]}, {{252., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {252., 16.605551275463988`}]}, {{252., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {252., 9.39444872453601}]}, {{252., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {252., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 24.47213595499958}, 
                  Offset[{3, 0}, {270., 24.47213595499958}]}, {{270., 
                  24.47213595499958}, 
                  Offset[{-3, 0}, {270., 24.47213595499958}]}, {{270., 
                  15.52786404500042}, 
                  Offset[{3, 0}, {270., 15.52786404500042}]}, {{270., 
                  15.52786404500042}, 
                  Offset[{-3, 0}, {270., 15.52786404500042}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 2.}, 
                  Offset[{3, 0}, {27., 2.}]}, {{27., 2.}, 
                  Offset[{-3, 0}, {27., 2.}]}, {{27., 0.}, 
                  Offset[{3, 0}, {27., 0.}]}, {{27., 0.}, 
                  Offset[{-3, 0}, {27., 0.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 17.74165738677394}, 
                  Offset[{3, 0}, {297., 17.74165738677394}]}, {{297., 
                  17.74165738677394}, 
                  Offset[{-3, 0}, {297., 17.74165738677394}]}, {{297., 
                  10.25834261322606}, 
                  Offset[{3, 0}, {297., 10.25834261322606}]}, {{297., 
                  10.25834261322606}, 
                  Offset[{-3, 0}, {297., 10.25834261322606}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 17.74165738677394}, 
                  Offset[{3, 0}, {315., 17.74165738677394}]}, {{315., 
                  17.74165738677394}, 
                  Offset[{-3, 0}, {315., 17.74165738677394}]}, {{315., 
                  10.25834261322606}, 
                  Offset[{3, 0}, {315., 10.25834261322606}]}, {{315., 
                  10.25834261322606}, 
                  Offset[{-3, 0}, {315., 10.25834261322606}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 2.}, 
                  Offset[{3, 0}, {342., 2.}]}, {{342., 2.}, 
                  Offset[{-3, 0}, {342., 2.}]}, {{342., 0.}, 
                  Offset[{3, 0}, {342., 0.}]}, {{342., 0.}, 
                  Offset[{-3, 0}, {342., 0.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 2.}, 
                  Offset[{3, 0}, {360., 2.}]}, {{360., 2.}, 
                  Offset[{-3, 0}, {360., 2.}]}, {{360., 0.}, 
                  Offset[{3, 0}, {360., 0.}]}, {{360., 0.}, 
                  Offset[{-3, 0}, {360., 0.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 15.464101615137753`}, 
                  Offset[{3, 0}, {45., 15.464101615137753`}]}, {{45., 
                  15.464101615137753`}, 
                  Offset[{-3, 0}, {45., 15.464101615137753`}]}, {{45., 
                  8.535898384862247}, 
                  Offset[{3, 0}, {45., 8.535898384862247}]}, {{45., 
                  8.535898384862247}, 
                  Offset[{-3, 0}, {45., 8.535898384862247}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 13.16227766016838}, 
                  Offset[{3, 0}, {72., 13.16227766016838}]}, {{72., 
                  13.16227766016838}, 
                  Offset[{-3, 0}, {72., 13.16227766016838}]}, {{72., 
                  6.83772233983162}, 
                  Offset[{3, 0}, {72., 6.83772233983162}]}, {{72., 
                  6.83772233983162}, 
                  Offset[{-3, 0}, {72., 6.83772233983162}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 17.74165738677394}, 
                  Offset[{3, 0}, {90., 17.74165738677394}]}, {{90., 
                  17.74165738677394}, 
                  Offset[{-3, 0}, {90., 17.74165738677394}]}, {{90., 
                  10.25834261322606}, 
                  Offset[{3, 0}, {90., 10.25834261322606}]}, {{90., 
                  10.25834261322606}, 
                  Offset[{-3, 0}, {90., 10.25834261322606}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}}, {{Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 15.464101615137753`}, 
                  Offset[{3, 0}, {0., 15.464101615137753`}]}, {{0., 
                  15.464101615137753`}, 
                  Offset[{-3, 0}, {0., 15.464101615137753`}]}, {{0., 
                  8.535898384862247}, 
                  Offset[{3, 0}, {0., 8.535898384862247}]}, {{0., 
                  8.535898384862247}, 
                  Offset[{-3, 0}, {0., 8.535898384862247}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 12.}, 
                  Offset[{3, 0}, {117., 12.}]}, {{117., 12.}, 
                  Offset[{-3, 0}, {117., 12.}]}, {{117., 6.}, 
                  Offset[{3, 0}, {117., 6.}]}, {{117., 6.}, 
                  Offset[{-3, 0}, {117., 6.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 12.}, 
                  Offset[{3, 0}, {135., 12.}]}, {{135., 12.}, 
                  Offset[{-3, 0}, {135., 12.}]}, {{135., 6.}, 
                  Offset[{3, 0}, {135., 6.}]}, {{135., 6.}, 
                  Offset[{-3, 0}, {135., 6.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 18.872983346207416`}, 
                  Offset[{3, 0}, {162., 18.872983346207416`}]}, {{162., 
                  18.872983346207416`}, 
                  Offset[{-3, 0}, {162., 18.872983346207416`}]}, {{162., 
                  11.127016653792584`}, 
                  Offset[{3, 0}, {162., 11.127016653792584`}]}, {{162., 
                  11.127016653792584`}, 
                  Offset[{-3, 0}, {162., 11.127016653792584`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 18.872983346207416`}, 
                  Offset[{3, 0}, {180., 18.872983346207416`}]}, {{180., 
                  18.872983346207416`}, 
                  Offset[{-3, 0}, {180., 18.872983346207416`}]}, {{180., 
                  11.127016653792584`}, 
                  Offset[{3, 0}, {180., 11.127016653792584`}]}, {{180., 
                  11.127016653792584`}, 
                  Offset[{-3, 0}, {180., 11.127016653792584`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 3.414213562373095}, 
                  Offset[{3, 0}, {207., 3.414213562373095}]}, {{207., 
                  3.414213562373095}, 
                  Offset[{-3, 0}, {207., 3.414213562373095}]}, {{207., 
                  0.5857864376269049}, 
                  Offset[{3, 0}, {207., 0.5857864376269049}]}, {{207., 
                  0.5857864376269049}, 
                  Offset[{-3, 0}, {207., 0.5857864376269049}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 3.414213562373095}, 
                  Offset[{3, 0}, {225., 3.414213562373095}]}, {{225., 
                  3.414213562373095}, 
                  Offset[{-3, 0}, {225., 3.414213562373095}]}, {{225., 
                  0.5857864376269049}, 
                  Offset[{3, 0}, {225., 0.5857864376269049}]}, {{225., 
                  0.5857864376269049}, 
                  Offset[{-3, 0}, {225., 0.5857864376269049}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 4.732050807568877}, 
                  Offset[{3, 0}, {252., 4.732050807568877}]}, {{252., 
                  4.732050807568877}, 
                  Offset[{-3, 0}, {252., 4.732050807568877}]}, {{252., 
                  1.2679491924311228`}, 
                  Offset[{3, 0}, {252., 1.2679491924311228`}]}, {{252., 
                  1.2679491924311228`}, 
                  Offset[{-3, 0}, {252., 1.2679491924311228`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 10.82842712474619}, 
                  Offset[{3, 0}, {270., 10.82842712474619}]}, {{270., 
                  10.82842712474619}, 
                  Offset[{-3, 0}, {270., 10.82842712474619}]}, {{270., 
                  5.17157287525381}, 
                  Offset[{3, 0}, {270., 5.17157287525381}]}, {{270., 
                  5.17157287525381}, 
                  Offset[{-3, 0}, {270., 5.17157287525381}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 4.732050807568877}, 
                  Offset[{3, 0}, {27., 4.732050807568877}]}, {{27., 
                  4.732050807568877}, 
                  Offset[{-3, 0}, {27., 4.732050807568877}]}, {{27., 
                  1.2679491924311228`}, 
                  Offset[{3, 0}, {27., 1.2679491924311228`}]}, {{27., 
                  1.2679491924311228`}, 
                  Offset[{-3, 0}, {27., 1.2679491924311228`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 16.605551275463988`}, 
                  Offset[{3, 0}, {297., 16.605551275463988`}]}, {{297., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {297., 16.605551275463988`}]}, {{297., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {297., 9.39444872453601}]}, {{297., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {297., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 17.74165738677394}, 
                  Offset[{3, 0}, {315., 17.74165738677394}]}, {{315., 
                  17.74165738677394}, 
                  Offset[{-3, 0}, {315., 17.74165738677394}]}, {{315., 
                  10.25834261322606}, 
                  Offset[{3, 0}, {315., 10.25834261322606}]}, {{315., 
                  10.25834261322606}, 
                  Offset[{-3, 0}, {315., 10.25834261322606}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 13.16227766016838}, 
                  Offset[{3, 0}, {342., 13.16227766016838}]}, {{342., 
                  13.16227766016838}, 
                  Offset[{-3, 0}, {342., 13.16227766016838}]}, {{342., 
                  6.83772233983162}, 
                  Offset[{3, 0}, {342., 6.83772233983162}]}, {{342., 
                  6.83772233983162}, 
                  Offset[{-3, 0}, {342., 6.83772233983162}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 15.464101615137753`}, 
                  Offset[{3, 0}, {360., 15.464101615137753`}]}, {{360., 
                  15.464101615137753`}, 
                  Offset[{-3, 0}, {360., 15.464101615137753`}]}, {{360., 
                  8.535898384862247}, 
                  Offset[{3, 0}, {360., 8.535898384862247}]}, {{360., 
                  8.535898384862247}, 
                  Offset[{-3, 0}, {360., 8.535898384862247}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 3.414213562373095}, 
                  Offset[{3, 0}, {45., 3.414213562373095}]}, {{45., 
                  3.414213562373095}, 
                  Offset[{-3, 0}, {45., 3.414213562373095}]}, {{45., 
                  0.5857864376269049}, 
                  Offset[{3, 0}, {45., 0.5857864376269049}]}, {{45., 
                  0.5857864376269049}, 
                  Offset[{-3, 0}, {45., 0.5857864376269049}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 10.82842712474619}, 
                  Offset[{3, 0}, {72., 10.82842712474619}]}, {{72., 
                  10.82842712474619}, 
                  Offset[{-3, 0}, {72., 10.82842712474619}]}, {{72., 
                  5.17157287525381}, 
                  Offset[{3, 0}, {72., 5.17157287525381}]}, {{72., 
                  5.17157287525381}, 
                  Offset[{-3, 0}, {72., 5.17157287525381}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 8.449489742783179}, 
                  Offset[{3, 0}, {90., 8.449489742783179}]}, {{90., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {90., 8.449489742783179}]}, {{90., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {90., 3.550510257216822}]}, {{90., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {90., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}}}}, {{{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 2.}}, {{117., 18.}}, {{
              135., 9.}}, {{162., 4.}}, {{180., 1.}}, {{207., 9.}}, {{225., 
              8.}}, {{252., 13.}}, {{270., 20.}}, {{27., 1.}}, {{297., 
              14.}}, {{315., 14.}}, {{342., 1.}}, {{360., 1.}}, {{45., 
              12.}}, {{72., 10.}}, {{90., 14.}}}]}, {
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 12.}}, {{117., 9.}}, {{
              135., 9.}}, {{162., 15.}}, {{180., 15.}}, {{207., 2.}}, {{225., 
              2.}}, {{252., 3.}}, {{270., 8.}}, {{27., 3.}}, {{297., 13.}}, {{
              315., 14.}}, {{342., 10.}}, {{360., 12.}}, {{45., 2.}}, {{72., 
              8.}}, {{90., 6.}}}]}}}, {{}, {}}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1: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
9y8GwpWdfth/E4b/ATqzcFo=
               "]]}, Annotation[#, "Charting`Private`Tag$208248#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1: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
arjIzYd49a8xW75qgusMZ27+G16oYYe9/yotGGl8vNp9nRfXd25YeTNQC7Nb
Qxis9rwozhpONxfQxskbMfbnCnlwcNogLN5HBy9/iLzo010Jw39XLM8d0wFr
JpWQ4F+J5ZWiym23dFDSdOT31TFuJChOjvJy66IuTb/jUjY3QlyLXcprdSHF
eeok5wQX7FuWjfpY9WE3slZu4iYneJ+EyPzeoI+dJxaPjWZy4vHrV3+lXfXR
fHisXmE3J4x/VjeFXievj186mr+GE1oKXhtZd2wGh0sZB+PoCkhm3hdXqzDA
s8NFhr5xHBgsWDfv8swA10zWRblu50DBpdN9qb8NwGkiQitR5wD/vciTj2y3
4J/NQdt1v9jB8kOa3Wd+C/46+nIy4tkxw8CCuQKwmSc3amUWGx7ni3/6qQ38
mt53QS6GDRcpv16etQYiHIK0D7mywfpV+Y2pGMBFoMR3gxIbSvetDDzdCrgv
4gnfA1YkToxtN+wHdFKNQw5XscLWpcXo2xeARaxtzKqAFb/XR0ttFTDEU+6O
NXeCWOEw8Kr/k6chau3+bDIQZIWS8c327BhDDHdM75BZYsFS1dEavcOG4E5q
LHP4zILKA5uPn6gyRFLz5K4LLSygqJSaaC0ZYiqkwvlbFAuqD4XXHSo0wnP9
W63+Y1Qc/GFWolJlhEe7NC/q91Hhtkvm5CBhhDYe+Ve+HVSwq74M2fDFCJeD
Fe6XllPh/lZHrl/LGFt/nCr7FkqFmrmQwF4rY3xfSPKx8KSCs/bbX5qnMSr5
RLbP2VNRd6R4MOWQMXpfGGwx06aCW50tR6HPGA28afebyDobOT+c1vvZGF3U
gIclSxQ0cDaGJf4xxpjyyntvf1Lg8y7YolvOBBkXZdsshinQsjTWitcygclt
t4WklxTw1EsqyFiZwN16JPjvIwqajj79x4w2QW51k+mfRgpOzFR+X3vIBE1Z
f57H3aDA32v/m4dnTOB7O2TY6DIFApqajRKECZ4/otzoO03Bpwt85Q9emkD7
r35uYTYFd7m/5EZ+NsHxiScba45SEDhSFNHOZ4pVyd4PB1IoENtA4RRWMAUx
9IklPJ6CrqTdJf66pugyt7jmG0VBUudjvVu2pojqG+tpDqGAsWpTH7u/Ka7e
MUmI2U3BkFd+uHOSKXxMxOqyvCk4dv03x+UTpsi4rJ3F6U7B5kWvi/OXTLF2
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
d/+hYOjtttl//xLBftkgJnyKgv8B0Htb2g==
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$208248#1"]& ]}}, {}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag$208301#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
gMtf+VC5dksyZvXxMG7Kv3LH/1p2VFmSZkd36uQcJDBsMSDvk2tJRhzlP8HJ
ouqx78jdYwGWZI238pHivQQuSC6mq4hbkqGeJSeKEgjsbPrDRU6BXPZlf/h6
6rzZefW/8H8Psq+rX242msC7spKsqksgN2tnr+AKJSClJTOqGQByx+l9mq99
CLy+8+vqLReQ7mXi955uoPwb9uTwDkOQ2tfK81uofmDVWGh/VgykmO6dKjrV
Pz4lqq3dFMkgj58Umh4zJLD7yhCnzJpBWoiLNCmtpvbDV3n+tRyDVIsrfm24
koBjvoq4f7cF+aF8cYOaBoH6U0t6tstZkLfp2VlPJAjEPF7kxL5uRnqJhbXU
v6Nj37+KrJQjZuTLBr/OpAE6SjW0b2dGmpGqTyNe6Dyh43K8oc1RBTNScVxq
78ZbdPAqeltciTUlC/8waKV1dJQEHtUTUjchb0zkpb2JoeNMztIY6b/G5PYO
8SyrUGp869kGhYfG5LiiS+GhADreCl5evmKXMXn9pvHENw86tOtfank8MSKr
7yY1VerR0TGpqHh8ryF5b9Hf03zjNPQo1Ww6tcmQfH2vgSP9kYa3dsuPXNAx
JG38x1kir2ngOWome+2VAekv1yDZdZcGZ3M/yU+rDcjK13UrltXQ8Cajgld3
WJ88P6fwzsyLBu7FS7922+iRS3dMd/ae0YZGQsDyE0p6pLSMWuXyCm04PK8O
3/lnFalywOLKriJt5B3W+qZ7ZhUZ1Wj9ayxFG0vklo+Xi64i4yMOpkp6aCNS
L3Lwe40O+W5ZKW3vlBZeGpSNbiQJ0v7H0u/nDLXQyPg5rT2lSrJ0FwxzF2og
N9H2vnWVKplY6NL/Y48GQhqPlG91VSUL9s6JPWVpwNIudd9KexVypURpT4KX
BlTF5RaLn1xCjvI3mhrJaVD+cja7576YfOetEnD5mDo6wreJHwgVJlvHFRta
jqnBQ3PuTq4gN7b5O96x3a+Ke3efcY1L06B3cqmih7Y8Xvimip/YSsPGM1af
fwrJY+SblsK68zSsWVwQVz4mB74FiaubHOhYyt12WuqCHBg+Ctvjd1N9e9xi
f9waObSMbbk/93U5JoXXlIXYLcZD/sl7gsO6OD7MdT4pVhb9ax3cB0VWYblr
T2unlyzeHj7+vH3VKsQZbnGSMpbFV7rtcMjuVTD9c+Tz53kZiKwt5dxX0EPm
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

               "]]}, 
             Annotation[#, "Charting`Private`Tag$208301#1"]& ]}}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Coinc. per 10 min\"", TraditionalForm], None}, {
            FormBox["\"Measurement Angle\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           Thickness[0.006], FontSize -> 12], FrameTicks -> {{{{-10, 
              FormBox["\"-10\"", TraditionalForm], 0.024}, {0, 
              FormBox["\"0\"", TraditionalForm], 0.024}, {10, 
              FormBox["\"10\"", TraditionalForm], 0.024}, {20, 
              FormBox["\"20\"", TraditionalForm], 0.024}, {30, 
              FormBox["\"30\"", TraditionalForm], 0.024}}, {{-10, "", 
              0.024}, {0, "", 0.024}, {10, "", 0.024}, {20, "", 0.024}, {
             30, "", 0.024}}}, {{{-45, "", 0.024}, {-30, "", 0.012}, {-15, "",
               0.012}, {0, 
              FormBox[
               RowBox[{"\"0\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {15, "", 0.012}, {30, "", 0.012}, {45, "", 0.024}, {
             60, "", 0.012}, {75, "", 0.012}, {90, 
              FormBox[
               RowBox[{"\"90\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {105, "", 0.012}, {120, "", 0.012}, {135, "", 0.024}, {
             150, "", 0.012}, {165, "", 0.012}, {180, 
              FormBox[
               RowBox[{"\"180\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {195, "", 0.012}, {210, "", 0.012}, {225, "", 0.024}, {
             240, "", 0.012}, {255, "", 0.012}, {270, 
              FormBox[
               RowBox[{"\"270\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {285, "", 0.012}, {300, "", 0.012}, {315, "", 0.024}, {
             330, "", 0.012}, {345, "", 0.012}, {360, 
              FormBox[
               RowBox[{"\"360\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}, {{-45, "", 0.024}, {-30, "", 0.012}, {-15, "", 
              0.012}, {0, "", 0.024}, {15, "", 0.012}, {30, "", 0.012}, {
             45, "", 0.024}, {60, "", 0.012}, {75, "", 0.012}, {
             90, "", 0.024}, {105, "", 0.012}, {120, "", 0.012}, {
             135, "", 0.024}, {150, "", 0.012}, {165, "", 0.012}, {
             180, "", 0.024}, {195, "", 0.012}, {210, "", 0.012}, {
             225, "", 0.024}, {240, "", 0.012}, {255, "", 0.012}, {
             270, "", 0.024}, {285, "", 0.012}, {300, "", 0.012}, {
             315, "", 0.024}, {330, "", 0.012}, {345, "", 0.012}, {
             360, "", 0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 260, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"After Cyc: 2-2\"", TraditionalForm], 
         PlotRange -> {{-14.4, 374.4}, {-4., 24.}}, PlotRangeClipping -> True,
          PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox["\"\"", TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
     TagBox[
      GridBox[{{
         StyleBox[
          TagBox[
           
           GridBox[{{"\"Basis\"", "\"Parameters\""}, {
             "\"HV\"", "\"v :  0.93 \[PlusMinus]0.08\""}, {
             "\"\[PlusMinus]45\[Degree]\"", 
              "\"v :  0.73 \[PlusMinus]0.10\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7], 3 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}, {
         StyleBox[
          TagBox[
           
           GridBox[{{"\"Basis\"", "\"Parameters\""}, {
             "\"HV\"", "\"v :  0.95 \[PlusMinus]0.08\""}, {
             "\"\"", "\"\[Theta] :  95 \[PlusMinus]4\""}, {
             "\"\[PlusMinus]45\[Degree]\"", 
              "\"v :  0.76 \[PlusMinus]0.10\""}, {
             "\"\"", "\"\[Theta] :  -39 \[PlusMinus]5\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7], 4 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
       "Column", 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{1}}}], 
      "Column"]}, "RowWithSeparators"]},
  "RowWithSeparators"]], "Output",
 CellChangeTimes->{3.9508445988583508`*^9, 3.950844630207941*^9, 
  3.950844753423421*^9, 3.950845001178018*^9, 3.950845206475319*^9},
 CellLabel->
  "Out[294]=",ExpressionUUID->"68b59182-61fb-483f-995a-7ef9c44b48da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"tempFittedPlot", ",", "\"\<\\t\>\""}], "]"}]], "Input",
 CellLabel->
  "In[964]:=",ExpressionUUID->"de2fe40c-ef4b-4ecb-a61e-3e5411b06749"],

Cell[BoxData[
 TemplateBox[{"\t", "\"\\t\"", 
   TemplateBox[{"   ", "\"   \"", 
     TemplateBox[{
       GraphicsBox[{{{{{{Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{0., 3.550510257216822}, {0., 6.}}], 
               LineBox[{{0., 6.}, {0., 8.449489742783179}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{117., 79.5660188679434}, {117., 89.}}], 
               LineBox[{{117., 89.}, {117., 98.4339811320566}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{135., 50.38422689413609}, {135., 58.}}], 
               LineBox[{{135., 58.}, {135., 65.61577310586391}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{162., 6.83772233983162}, {162., 10.}}], 
               LineBox[{{162., 10.}, {162., 13.16227766016838}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{180., 4.354248688935409}, {180., 7.}}], 
               LineBox[{{180., 7.}, {180., 9.64575131106459}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{207., 16.41742430504416}, {207., 21.}}], 
               LineBox[{{207., 21.}, {207., 25.58257569495584}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{225., 57.87596159536404}, {225., 66.}}], 
               LineBox[{{225., 66.}, {225., 74.12403840463597}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{252., 97.60769515458674}, {252., 108.}}], 
               LineBox[{{252., 108.}, {252., 118.39230484541326`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{270., 98.55969349108945}, {270., 109.}}], 
               LineBox[{{270., 109.}, {270., 119.44030650891055`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{27., 35.51925930159214}, {27., 42.}}], 
               LineBox[{{27., 42.}, {27., 48.48074069840786}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{297., 72.94461486186259}, {297., 82.}}], 
               LineBox[{{297., 82.}, {297., 91.05538513813741}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{315., 42.}, {315., 49.}}], 
               LineBox[{{315., 49.}, {315., 56.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{342., 12.}, {342., 16.}}], 
               LineBox[{{342., 16.}, {342., 20.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{360., 1.2679491924311228`}, {360., 3.}}], 
               LineBox[{{360., 3.}, {360., 4.732050807568877}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{45., 72.94461486186259}, {45., 82.}}], 
               LineBox[{{45., 82.}, {45., 91.05538513813741}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{72., 116.68629150101523`}, {72., 128.}}], 
               LineBox[{{72., 128.}, {72., 139.31370849898477`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{90., 100.46434624714726`}, {90., 111.}}], 
               LineBox[{{90., 111.}, {90., 121.53565375285274`}}]}}}, {{
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{0., 58.81464722812755}, {0., 67.}}], 
               LineBox[{{0., 67.}, {0., 75.18535277187245}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{117., 77.67262094691118}, {117., 87.}}], 
               LineBox[{{117., 87.}, {117., 96.32737905308882}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{135., 94.7530492340404}, {135., 105.}}], 
               LineBox[{{135., 105.}, {135., 115.2469507659596}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{162., 84.30464028516734}, {162., 94.}}], 
               LineBox[{{162., 94.}, {162., 103.69535971483266`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{180., 42.928932188134524`}, {180., 50.}}], 
               LineBox[{{180., 50.}, {180., 57.071067811865476`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{207., 29.083920216900385`}, {207., 35.}}], 
               LineBox[{{207., 35.}, {207., 40.91607978309962}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{225., 21.803847577293368`}, {225., 27.}}], 
               LineBox[{{225., 27.}, {225., 32.19615242270663}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{252., 47.58380151290434}, {252., 55.}}], 
               LineBox[{{252., 55.}, {252., 62.41619848709566}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{270., 50.38422689413609}, {270., 58.}}], 
               LineBox[{{270., 58.}, {270., 65.61577310586391}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{27., 31.835585997031025`}, {27., 38.}}], 
               LineBox[{{27., 38.}, {27., 44.164414002968975`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{297., 78.61916848035314}, {297., 88.}}], 
               LineBox[{{297., 88.}, {297., 97.38083151964686}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{315., 94.7530492340404}, {315., 105.}}], 
               LineBox[{{315., 105.}, {315., 115.2469507659596}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{342., 76.7263815045043}, {342., 86.}}], 
               LineBox[{{342., 86.}, {342., 95.2736184954957}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{360., 51.318854252131395`}, {360., 59.}}], 
               LineBox[{{360., 59.}, {360., 66.68114574786861}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{45., 25.432235637169978`}, {45., 31.}}], 
               LineBox[{{45., 31.}, {45., 36.56776436283002}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{72., 34.59687576256715}, {72., 41.}}], 
               LineBox[{{72., 41.}, {72., 47.40312423743285}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{90., 78.61916848035314}, {90., 88.}}], 
               LineBox[{{90., 88.}, {90., 97.38083151964686}}]}}}}, {{{
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 8.449489742783179}, 
                  Offset[{3, 0}, {0., 8.449489742783179}]}, {{0., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {0., 8.449489742783179}]}, {{0., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {0., 3.550510257216822}]}, {{0., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {0., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 98.4339811320566}, 
                  Offset[{3, 0}, {117., 98.4339811320566}]}, {{117., 
                  98.4339811320566}, 
                  Offset[{-3, 0}, {117., 98.4339811320566}]}, {{117., 
                  79.5660188679434}, 
                  Offset[{3, 0}, {117., 79.5660188679434}]}, {{117., 
                  79.5660188679434}, 
                  Offset[{-3, 0}, {117., 79.5660188679434}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 65.61577310586391}, 
                  Offset[{3, 0}, {135., 65.61577310586391}]}, {{135., 
                  65.61577310586391}, 
                  Offset[{-3, 0}, {135., 65.61577310586391}]}, {{135., 
                  50.38422689413609}, 
                  Offset[{3, 0}, {135., 50.38422689413609}]}, {{135., 
                  50.38422689413609}, 
                  Offset[{-3, 0}, {135., 50.38422689413609}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 13.16227766016838}, 
                  Offset[{3, 0}, {162., 13.16227766016838}]}, {{162., 
                  13.16227766016838}, 
                  Offset[{-3, 0}, {162., 13.16227766016838}]}, {{162., 
                  6.83772233983162}, 
                  Offset[{3, 0}, {162., 6.83772233983162}]}, {{162., 
                  6.83772233983162}, 
                  Offset[{-3, 0}, {162., 6.83772233983162}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 9.64575131106459}, 
                  Offset[{3, 0}, {180., 9.64575131106459}]}, {{180., 
                  9.64575131106459}, 
                  Offset[{-3, 0}, {180., 9.64575131106459}]}, {{180., 
                  4.354248688935409}, 
                  Offset[{3, 0}, {180., 4.354248688935409}]}, {{180., 
                  4.354248688935409}, 
                  Offset[{-3, 0}, {180., 4.354248688935409}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 25.58257569495584}, 
                  Offset[{3, 0}, {207., 25.58257569495584}]}, {{207., 
                  25.58257569495584}, 
                  Offset[{-3, 0}, {207., 25.58257569495584}]}, {{207., 
                  16.41742430504416}, 
                  Offset[{3, 0}, {207., 16.41742430504416}]}, {{207., 
                  16.41742430504416}, 
                  Offset[{-3, 0}, {207., 16.41742430504416}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 74.12403840463597}, 
                  Offset[{3, 0}, {225., 74.12403840463597}]}, {{225., 
                  74.12403840463597}, 
                  Offset[{-3, 0}, {225., 74.12403840463597}]}, {{225., 
                  57.87596159536404}, 
                  Offset[{3, 0}, {225., 57.87596159536404}]}, {{225., 
                  57.87596159536404}, 
                  Offset[{-3, 0}, {225., 57.87596159536404}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 118.39230484541326`}, 
                  Offset[{3, 0}, {252., 118.39230484541326`}]}, {{252., 
                  118.39230484541326`}, 
                  Offset[{-3, 0}, {252., 118.39230484541326`}]}, {{252., 
                  97.60769515458674}, 
                  Offset[{3, 0}, {252., 97.60769515458674}]}, {{252., 
                  97.60769515458674}, 
                  Offset[{-3, 0}, {252., 97.60769515458674}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 119.44030650891055`}, 
                  Offset[{3, 0}, {270., 119.44030650891055`}]}, {{270., 
                  119.44030650891055`}, 
                  Offset[{-3, 0}, {270., 119.44030650891055`}]}, {{270., 
                  98.55969349108945}, 
                  Offset[{3, 0}, {270., 98.55969349108945}]}, {{270., 
                  98.55969349108945}, 
                  Offset[{-3, 0}, {270., 98.55969349108945}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 48.48074069840786}, 
                  Offset[{3, 0}, {27., 48.48074069840786}]}, {{27., 
                  48.48074069840786}, 
                  Offset[{-3, 0}, {27., 48.48074069840786}]}, {{27., 
                  35.51925930159214}, 
                  Offset[{3, 0}, {27., 35.51925930159214}]}, {{27., 
                  35.51925930159214}, 
                  Offset[{-3, 0}, {27., 35.51925930159214}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 91.05538513813741}, 
                  Offset[{3, 0}, {297., 91.05538513813741}]}, {{297., 
                  91.05538513813741}, 
                  Offset[{-3, 0}, {297., 91.05538513813741}]}, {{297., 
                  72.94461486186259}, 
                  Offset[{3, 0}, {297., 72.94461486186259}]}, {{297., 
                  72.94461486186259}, 
                  Offset[{-3, 0}, {297., 72.94461486186259}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 56.}, 
                  Offset[{3, 0}, {315., 56.}]}, {{315., 56.}, 
                  Offset[{-3, 0}, {315., 56.}]}, {{315., 42.}, 
                  Offset[{3, 0}, {315., 42.}]}, {{315., 42.}, 
                  Offset[{-3, 0}, {315., 42.}]}}], {{{1., 0.}, {0., 1.}}, {0.,
                 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 20.}, 
                  Offset[{3, 0}, {342., 20.}]}, {{342., 20.}, 
                  Offset[{-3, 0}, {342., 20.}]}, {{342., 12.}, 
                  Offset[{3, 0}, {342., 12.}]}, {{342., 12.}, 
                  Offset[{-3, 0}, {342., 12.}]}}], {{{1., 0.}, {0., 1.}}, {0.,
                 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 4.732050807568877}, 
                  Offset[{3, 0}, {360., 4.732050807568877}]}, {{360., 
                  4.732050807568877}, 
                  Offset[{-3, 0}, {360., 4.732050807568877}]}, {{360., 
                  1.2679491924311228`}, 
                  Offset[{3, 0}, {360., 1.2679491924311228`}]}, {{360., 
                  1.2679491924311228`}, 
                  Offset[{-3, 0}, {360., 1.2679491924311228`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 91.05538513813741}, 
                  Offset[{3, 0}, {45., 91.05538513813741}]}, {{45., 
                  91.05538513813741}, 
                  Offset[{-3, 0}, {45., 91.05538513813741}]}, {{45., 
                  72.94461486186259}, 
                  Offset[{3, 0}, {45., 72.94461486186259}]}, {{45., 
                  72.94461486186259}, 
                  Offset[{-3, 0}, {45., 72.94461486186259}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 139.31370849898477`}, 
                  Offset[{3, 0}, {72., 139.31370849898477`}]}, {{72., 
                  139.31370849898477`}, 
                  Offset[{-3, 0}, {72., 139.31370849898477`}]}, {{72., 
                  116.68629150101523`}, 
                  Offset[{3, 0}, {72., 116.68629150101523`}]}, {{72., 
                  116.68629150101523`}, 
                  Offset[{-3, 0}, {72., 116.68629150101523`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 121.53565375285274`}, 
                  Offset[{3, 0}, {90., 121.53565375285274`}]}, {{90., 
                  121.53565375285274`}, 
                  Offset[{-3, 0}, {90., 121.53565375285274`}]}, {{90., 
                  100.46434624714726`}, 
                  Offset[{3, 0}, {90., 100.46434624714726`}]}, {{90., 
                  100.46434624714726`}, 
                  Offset[{-3, 0}, {90., 100.46434624714726`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}}, {{Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 75.18535277187245}, 
                  Offset[{3, 0}, {0., 75.18535277187245}]}, {{0., 
                  75.18535277187245}, 
                  Offset[{-3, 0}, {0., 75.18535277187245}]}, {{0., 
                  58.81464722812755}, 
                  Offset[{3, 0}, {0., 58.81464722812755}]}, {{0., 
                  58.81464722812755}, 
                  Offset[{-3, 0}, {0., 58.81464722812755}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 96.32737905308882}, 
                  Offset[{3, 0}, {117., 96.32737905308882}]}, {{117., 
                  96.32737905308882}, 
                  Offset[{-3, 0}, {117., 96.32737905308882}]}, {{117., 
                  77.67262094691118}, 
                  Offset[{3, 0}, {117., 77.67262094691118}]}, {{117., 
                  77.67262094691118}, 
                  Offset[{-3, 0}, {117., 77.67262094691118}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 115.2469507659596}, 
                  Offset[{3, 0}, {135., 115.2469507659596}]}, {{135., 
                  115.2469507659596}, 
                  Offset[{-3, 0}, {135., 115.2469507659596}]}, {{135., 
                  94.7530492340404}, 
                  Offset[{3, 0}, {135., 94.7530492340404}]}, {{135., 
                  94.7530492340404}, 
                  Offset[{-3, 0}, {135., 94.7530492340404}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 103.69535971483266`}, 
                  Offset[{3, 0}, {162., 103.69535971483266`}]}, {{162., 
                  103.69535971483266`}, 
                  Offset[{-3, 0}, {162., 103.69535971483266`}]}, {{162., 
                  84.30464028516734}, 
                  Offset[{3, 0}, {162., 84.30464028516734}]}, {{162., 
                  84.30464028516734}, 
                  Offset[{-3, 0}, {162., 84.30464028516734}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 57.071067811865476`}, 
                  Offset[{3, 0}, {180., 57.071067811865476`}]}, {{180., 
                  57.071067811865476`}, 
                  Offset[{-3, 0}, {180., 57.071067811865476`}]}, {{180., 
                  42.928932188134524`}, 
                  Offset[{3, 0}, {180., 42.928932188134524`}]}, {{180., 
                  42.928932188134524`}, 
                  Offset[{-3, 0}, {180., 42.928932188134524`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 40.91607978309962}, 
                  Offset[{3, 0}, {207., 40.91607978309962}]}, {{207., 
                  40.91607978309962}, 
                  Offset[{-3, 0}, {207., 40.91607978309962}]}, {{207., 
                  29.083920216900385`}, 
                  Offset[{3, 0}, {207., 29.083920216900385`}]}, {{207., 
                  29.083920216900385`}, 
                  Offset[{-3, 0}, {207., 29.083920216900385`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 32.19615242270663}, 
                  Offset[{3, 0}, {225., 32.19615242270663}]}, {{225., 
                  32.19615242270663}, 
                  Offset[{-3, 0}, {225., 32.19615242270663}]}, {{225., 
                  21.803847577293368`}, 
                  Offset[{3, 0}, {225., 21.803847577293368`}]}, {{225., 
                  21.803847577293368`}, 
                  Offset[{-3, 0}, {225., 21.803847577293368`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 62.41619848709566}, 
                  Offset[{3, 0}, {252., 62.41619848709566}]}, {{252., 
                  62.41619848709566}, 
                  Offset[{-3, 0}, {252., 62.41619848709566}]}, {{252., 
                  47.58380151290434}, 
                  Offset[{3, 0}, {252., 47.58380151290434}]}, {{252., 
                  47.58380151290434}, 
                  Offset[{-3, 0}, {252., 47.58380151290434}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 65.61577310586391}, 
                  Offset[{3, 0}, {270., 65.61577310586391}]}, {{270., 
                  65.61577310586391}, 
                  Offset[{-3, 0}, {270., 65.61577310586391}]}, {{270., 
                  50.38422689413609}, 
                  Offset[{3, 0}, {270., 50.38422689413609}]}, {{270., 
                  50.38422689413609}, 
                  Offset[{-3, 0}, {270., 50.38422689413609}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 44.164414002968975`}, 
                  Offset[{3, 0}, {27., 44.164414002968975`}]}, {{27., 
                  44.164414002968975`}, 
                  Offset[{-3, 0}, {27., 44.164414002968975`}]}, {{27., 
                  31.835585997031025`}, 
                  Offset[{3, 0}, {27., 31.835585997031025`}]}, {{27., 
                  31.835585997031025`}, 
                  Offset[{-3, 0}, {27., 31.835585997031025`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 97.38083151964686}, 
                  Offset[{3, 0}, {297., 97.38083151964686}]}, {{297., 
                  97.38083151964686}, 
                  Offset[{-3, 0}, {297., 97.38083151964686}]}, {{297., 
                  78.61916848035314}, 
                  Offset[{3, 0}, {297., 78.61916848035314}]}, {{297., 
                  78.61916848035314}, 
                  Offset[{-3, 0}, {297., 78.61916848035314}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 115.2469507659596}, 
                  Offset[{3, 0}, {315., 115.2469507659596}]}, {{315., 
                  115.2469507659596}, 
                  Offset[{-3, 0}, {315., 115.2469507659596}]}, {{315., 
                  94.7530492340404}, 
                  Offset[{3, 0}, {315., 94.7530492340404}]}, {{315., 
                  94.7530492340404}, 
                  Offset[{-3, 0}, {315., 94.7530492340404}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 95.2736184954957}, 
                  Offset[{3, 0}, {342., 95.2736184954957}]}, {{342., 
                  95.2736184954957}, 
                  Offset[{-3, 0}, {342., 95.2736184954957}]}, {{342., 
                  76.7263815045043}, 
                  Offset[{3, 0}, {342., 76.7263815045043}]}, {{342., 
                  76.7263815045043}, 
                  Offset[{-3, 0}, {342., 76.7263815045043}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 66.68114574786861}, 
                  Offset[{3, 0}, {360., 66.68114574786861}]}, {{360., 
                  66.68114574786861}, 
                  Offset[{-3, 0}, {360., 66.68114574786861}]}, {{360., 
                  51.318854252131395`}, 
                  Offset[{3, 0}, {360., 51.318854252131395`}]}, {{360., 
                  51.318854252131395`}, 
                  Offset[{-3, 0}, {360., 51.318854252131395`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 36.56776436283002}, 
                  Offset[{3, 0}, {45., 36.56776436283002}]}, {{45., 
                  36.56776436283002}, 
                  Offset[{-3, 0}, {45., 36.56776436283002}]}, {{45., 
                  25.432235637169978`}, 
                  Offset[{3, 0}, {45., 25.432235637169978`}]}, {{45., 
                  25.432235637169978`}, 
                  Offset[{-3, 0}, {45., 25.432235637169978`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 47.40312423743285}, 
                  Offset[{3, 0}, {72., 47.40312423743285}]}, {{72., 
                  47.40312423743285}, 
                  Offset[{-3, 0}, {72., 47.40312423743285}]}, {{72., 
                  34.59687576256715}, 
                  Offset[{3, 0}, {72., 34.59687576256715}]}, {{72., 
                  34.59687576256715}, 
                  Offset[{-3, 0}, {72., 34.59687576256715}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 97.38083151964686}, 
                  Offset[{3, 0}, {90., 97.38083151964686}]}, {{90., 
                  97.38083151964686}, 
                  Offset[{-3, 0}, {90., 97.38083151964686}]}, {{90., 
                  78.61916848035314}, 
                  Offset[{3, 0}, {90., 78.61916848035314}]}, {{90., 
                  78.61916848035314}, 
                  Offset[{-3, 0}, {90., 78.61916848035314}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}}}}, {{{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 6.}}, {{117., 89.}}, {{
              135., 58.}}, {{162., 10.}}, {{180., 7.}}, {{207., 21.}}, {{225.,
               66.}}, {{252., 108.}}, {{270., 109.}}, {{27., 42.}}, {{297., 
              82.}}, {{315., 49.}}, {{342., 16.}}, {{360., 3.}}, {{45., 
              82.}}, {{72., 128.}}, {{90., 111.}}}]}, {
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 67.}}, {{117., 87.}}, {{
              135., 105.}}, {{162., 94.}}, {{180., 50.}}, {{207., 35.}}, {{
              225., 27.}}, {{252., 55.}}, {{270., 58.}}, {{27., 38.}}, {{297.,
               88.}}, {{315., 105.}}, {{342., 86.}}, {{360., 59.}}, {{45., 
              31.}}, {{72., 41.}}, {{90., 88.}}}]}}}, {{}, {}}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1:eJwVWnk41N8XtrTIPnYiuyzJvkTxUsku21jmU/ZBtrENCZWKkoSkUlSWFqkQ
hcRHJEWUr2gvkmSrVJTEb35/zfM+d+6557znPefeM8/I+0e5BHGwsbHFcLKx
/f+THqv3fGnJk+Q7WcLH+YcGzc2jO7RmPUmHesv8hCUafgqdGd056UkyI77l
/becwIGaxbl7LzxJiu+7TgshAhe+P5JKrvYk36es6P+lRiC4Nbn02mVP0sz/
v4EyLQLrc7XWvS7yJKt1DOdMDAjc0z65ySTTk7SynaVLg8CrKF/f3/4s+43r
x2rcCFw0F/6y1suTbK3WbTrjRSBEoCPaw8mT/CTJ6RO8k8DcDY0Dt009ScsE
panbwQREpmfL40Q8ycq4wyYquwm8vnd1fRm3J/lrc3ueZQqBkmPEnf/YPMk6
nQHm1v0EdDTvd+pOeZBOi5nti4cJOIYfm/j2wIN8pi150+wUAdGNiJNr8iDJ
jNNF2YUE3vD8WHCq8SBnMf6hvYhA2DVP/pvFHqToSxHHkVICunt4Tr3L9yCj
fSLDn1wiMG/bLMt/1IM8WXm289xVAofHFXUiEjzIwpp05ekbBJwaBxrORXiQ
uiuspRnVBMQyj1h2B3iQD0JGNr64RaBc7aurxnYP0mjp8RfvegLhfy6+8bby
IFdPnYuIbySg/8gtKHOjB/k+woub2UTgfkgj84uqB/k5pn6vGkngiHHEkoSs
BznVE+z8ppXAdi65w9aiHmRA0ur18W0EJF70CSbyeJAmVf8J/Wwn8P7yoTOX
2T1IqajWBc8OApcSjBUG56hkRarVl9KHBCK3TVSsmKaSSXG/nvd3EjAQL9Yz
HKGSufW55MQjAguj25uCXlHJC0cELo89JtB+m3PryadU8i1bfkZXF4Gj6bef
tHdQyT2i8b753QRcqKHUn01U8vH5DdqbnxCQUpF+r3iLSi7SzvwaZOGhXz3B
rlepZMFk8k2XHgJXHuz/lnaeSoa8+UfcYmHGSf3dNSeppPMF+r8/LGwU9Jl9
+CiVPHZaN0ell4Dgln59s/1U8tuRutgNLDyu0BpcyKSS4+yv7miycDv7jcLZ
MCq5fLSB4GTh4g+FT1z8qOTa6hr/Rpa9xJYMtptUKtkYE/T4/+e7FMfp8dhT
Sbcnt/O7Wf6tS/GjB1tQyVs/e+6vZeEVhOOZNkMqaXpNkhrIiu+DiWm37Doq
2WlmtT2NFX+jpOrSHnkquXRw2639LH7yf4vovhCjkn8GXPf7s/iLHGQP0uel
kmG8n5qUWPxa354+lcNOJZWY9SGdrHwonHz9eHLWneR50ZPh8IDAgEuddvmQ
OzlfIaG5wMpvlU5JAPugO1lWVtyozMp/puDxgh3d7mTWKd7H2s0EzHpCFkTv
uJPVC2r7JhpY+b/urhVT6U6KuVtpn71DYOaopX/PRXdy806l+HV1LP3ZSHem
Z7mThhLDfT9uEkhVXfV3eL87OdSybU7tOgHPlbOa5gnuZNVk0kOLCgK8D3pP
zPm5k4oRhofEygjE4YBPiJE7KWgsYeJewKovWUZe+zp38ux6jb1n8gioLhIP
5BTcyWs7Kytasln1dddQ4yWvO7m/wWSwOp3AZqPxWZthNzLU6OnB9fEEpMUG
1S4NupEOxt1/0hgEZn+2ERxP3Mhfc9EXGsIIVNQU3W+840b29226/sSPgNB6
52yNY27kiGnHQq49gUles9aMNDcyYLOuwR8rAh0T6j8/JriRa9//nLe0IJB0
dZn3OX83UnG7hl8qqz8NK9Ur8xm7kWJVVqsKpAlUr5a9Nz3sSmbT+hTcP9Gw
3TqJsfTClbz1ad5q1zsapuOeKwr2upKKUnUZ9EEa1HuOZurcdSUVWnlOijyi
oWTfb4+4E65kkexUoPU1GvI/PZv5s9mVtHunU7I6jAZdIc1L3Cau5Im1322v
+tPw1Oyw12ptVzI82n9xjTcNfKfNyI3SruTe2C0P71vTkG577djeny6kc39U
/ZQSDQk3D6ouL3cheYYfh3x44Q2xN+9fi551IWdS7fpne7xRy2V6XCXXhRQg
q+iz7d745vf917YUFzJy1XaH6ipvhIjsbMt0dyHV/fZuk8jwhvduo52CK1xI
BW3biiYtb2zaPH5idbAzmfHh8eVfDC80XplT37nDmcxafunP6UAvGPIvv3/B
1Znkren6oerpBe2Xst+U4Uw6TEpvEjD3gkKUu722pDOZc6S0ao7HCyvOksu2
dm0n636o/LQv8cTTmYL4SK3tZHuqZentVg882JJxI+2rA9mWWUTSnrljRFNM
x++VA3kmi6Mgu8UdHOLlt8wfOJBbtlucqrnuDrMv9+sXCh3IylUf63uOuKP+
2OJ9ppUD+bKnlaRZuKNyIH5wV5E9KXspPmPiuhvyQwLZXO3sSN2PXV8WUlzh
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
jCQajSzS6NnBiC66Ez1/WAqCOrmzpSeCUXDKJtJhTAp09aFdQ6eDsajjGUu3
WQ0hmf2uRGkwGiJSXD8LSmMXR6uSS30w7M+xk7x1MpB6goebhoPxhv2jTfYV
OTA6ckz3fA5G1HCxrt6oHDpaPtysnwxGV8xE8y0lecTU7DutNxcMBPJd3Vom
j8enyFA13hBsrP1eWXRdAUn+4BU1DMHBgaau82NKeErL2ediGoLotCtGTXrK
UHH/8PM4QnBTLFXw2l5l9G3b95bbLgTe3Z3J/yRVoK5J3mDzDUHGA6FVAZ5r
8XrO3HnySAiKLfOOnvmrBsfHnod6s0NAIXjqzjqo4/656IaaEyF4Hm4RaXdB
HRUWpfK7i0KQJHJQpXqbBpKOrphZXh2Cu+WH0g8Wr4Ok7JM82RchWGmkU3sv
TAseVt79LiqhqLRrfPW5RRePJWK5DDVC0RZ+/rncD12YTRzdKKkdio/1O7rK
VfSgknOv7P2GUJRfnFXJy9bD7Eu5+HCHUNwc+bzwxU8fJyM+i6bHhWIo55Oz
uZgh/suP82i4H4qEprrGGzUb0OzDMFzRGYrw/f99q/uxAVfUw0Vdn4Si0atT
faWBCVLJgP8mB0Px7odhxKF6E6hOujjJTYWC55vhzqH7pkjerLMtQ3wXHow4
phWMbILSzJShe/gunAuTWzmuYQGmU7DYd9EwDGt4E1FTW5HjnPPwtEs44v7y
e26jO+GtUQzHsiMR0LlH6ZS3dMPkHXhvy47A0Ju2z9/c3LBgJFCTeSICqy07
dtYGu0HauNKPUhyB6rG6KvFjbiCMR8k1tyJw+EDLHrtBN7w29t674W0E0l8N
3d8S6o6XGywXInUiITGqVxmeRsVYg6BbjWEkwkQS7JNOUPF7w/trv0wjITa6
uCuhjAoJk2RaslUkrl4wzDHvoMLT5HbjEVokPJcq93Gu8sCgifruskORMJxU
PG9y1APPTYVmX76MhKp4Ckfsfk9wnLzK1/YuEh6lVb7ax1lzwjSUKz9GolC/
uPz1OU9kXYhyS52KxNfLf5L/3vGE5fInNQrsUejel1i4Y8qTdV9kRIWpRmH9
kbJHJ9288G6tbIabZhTkJq3+U/bzAu/+28WbdKPwOei5cUmEF+td9+mJwMYo
XO//3uCT7oU1py3X1TpFYSp3mmfithey/P6NLTCjsHbIVE2L9c5vbMxnG90T
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
C0Mfh63x6o39r6WlRAh5jV3v4LXB/wCaZPId
               "]]}, Annotation[#, "Charting`Private`Tag$668398#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1: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
et5Y/fz3j4uAkTX0xZ9o+B99kkXo
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$668398#1"]& ]}}, {}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
jRg=
               "]]}, Annotation[#, "Charting`Private`Tag$668451#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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

               "]]}, 
             Annotation[#, "Charting`Private`Tag$668451#1"]& ]}}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Coinc. per 4 min\"", TraditionalForm], None}, {
            FormBox["\"Measurement Angle\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           Thickness[0.006], FontSize -> 12], FrameTicks -> {{{{-70, 
              FormBox["\"-70\"", TraditionalForm], 0.024}, {0, 
              FormBox["\"0\"", TraditionalForm], 0.024}, {70, 
              FormBox["\"70\"", TraditionalForm], 0.024}, {140, 
              FormBox["\"140\"", TraditionalForm], 0.024}, {210, 
              FormBox["\"210\"", TraditionalForm], 0.024}}, {{-70, "", 
              0.024}, {0, "", 0.024}, {70, "", 0.024}, {140, "", 0.024}, {
             210, "", 0.024}}}, {{{-45, "", 0.024}, {-30, "", 0.012}, {-15, 
              "", 0.012}, {0, 
              FormBox[
               RowBox[{"\"0\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {15, "", 0.012}, {30, "", 0.012}, {45, "", 0.024}, {
             60, "", 0.012}, {75, "", 0.012}, {90, 
              FormBox[
               RowBox[{"\"90\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {105, "", 0.012}, {120, "", 0.012}, {135, "", 0.024}, {
             150, "", 0.012}, {165, "", 0.012}, {180, 
              FormBox[
               RowBox[{"\"180\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {195, "", 0.012}, {210, "", 0.012}, {225, "", 0.024}, {
             240, "", 0.012}, {255, "", 0.012}, {270, 
              FormBox[
               RowBox[{"\"270\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {285, "", 0.012}, {300, "", 0.012}, {315, "", 0.024}, {
             330, "", 0.012}, {345, "", 0.012}, {360, 
              FormBox[
               RowBox[{"\"360\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}, {{-45, "", 0.024}, {-30, "", 0.012}, {-15, "", 
              0.012}, {0, "", 0.024}, {15, "", 0.012}, {30, "", 0.012}, {
             45, "", 0.024}, {60, "", 0.012}, {75, "", 0.012}, {
             90, "", 0.024}, {105, "", 0.012}, {120, "", 0.012}, {
             135, "", 0.024}, {150, "", 0.012}, {165, "", 0.012}, {
             180, "", 0.024}, {195, "", 0.012}, {210, "", 0.012}, {
             225, "", 0.024}, {240, "", 0.012}, {255, "", 0.012}, {
             270, "", 0.024}, {285, "", 0.012}, {300, "", 0.012}, {
             315, "", 0.024}, {330, "", 0.012}, {345, "", 0.012}, {
             360, "", 0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 260, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Before Cyc: 0-0\"", TraditionalForm], 
         PlotRange -> {{-14.4, 374.4}, {-28., 168.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox["\"\"", TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
     TagBox[
      GridBox[{{
         TemplateBox[{"\"HV Basis\""}, "SwatchLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    InsetBox[
                    Graphics3DBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    Specularity[
                    RGBColor[0, 0, 1], 30], 
                    SphereBox[{0, 0, 0}]}, Boxed -> False, Lighting -> 
                    "Neutral", PlotRange -> {{-1, 1}, {-1, 1}, {-1, 1}}, 
                    ViewPoint -> {0, 
                    DirectedInfinity[-1], 0}, BoxRatios -> {1, 1, 1}], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}], {0.5, 0.5}, {1, 1}]}, 
                    AspectRatio -> Full, PlotRangePadding -> None, 
                    ImagePadding -> 1, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 
                 TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                  "RGBColorSwatchTemplate"], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"SphereBubble\""}]}], 
             "]"}]& ), Editable -> True], 
         TemplateBox[{
           RowBox[{
             RowBox[{"\[PlusMinus]", "45"}], " ", "\[Degree]", " ", 
             "Basis"}]}, "SwatchLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    InsetBox[
                    Graphics3DBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    Specularity[
                    RGBColor[1, 0, 0], 30], 
                    SphereBox[{0, 0, 0}]}, Boxed -> False, Lighting -> 
                    "Neutral", PlotRange -> {{-1, 1}, {-1, 1}, {-1, 1}}, 
                    ViewPoint -> {0, 
                    DirectedInfinity[-1], 0}, BoxRatios -> {1, 1, 1}], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}], {0.5, 0.5}, {1, 1}]}, 
                    AspectRatio -> Full, PlotRangePadding -> None, 
                    ImagePadding -> 1, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 
                 TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                  "RGBColorSwatchTemplate"], "}"}], ",", 
               RowBox[{"{", 
                 TagBox[#, HoldForm], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"SphereBubble\""}]}], 
             "]"}]& ), Editable -> True]}, {
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "60", "\"\[PlusMinus]3\""}, {
             "v", "0.93`2.", "\"\[PlusMinus]0.03\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False], 
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "65", "\"\[PlusMinus]3\""}, {
             "v", "0.55`2.", "\"\[PlusMinus]0.05\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}, {
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "60", "\"\[PlusMinus]3\""}, {
             "v", "0.93`2.", "\"\[PlusMinus]0.03\""}, {
             "\[Theta]", "86.8`3.", "\"\[PlusMinus]1.5\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False], 
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "65", "\"\[PlusMinus]3\""}, {
             "v", "0.55`2.", "\"\[PlusMinus]0.05\""}, {"\[Theta]", 
              RowBox[{"-", "47"}], "\"\[PlusMinus]3\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]}, 
    "RowWithSeparators"], 
   TemplateBox[{"   ", "\"   \"", 
     TemplateBox[{
       GraphicsBox[{{{{{{Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{0., 8.535898384862247}, {0., 12.}}], 
               LineBox[{{0., 12.}, {0., 15.464101615137753`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{117., 85.25320565519104}, {117., 95.}}], 
               LineBox[{{117., 95.}, {117., 104.74679434480896`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{135., 58.81464722812755}, {135., 67.}}], 
               LineBox[{{135., 67.}, {135., 75.18535277187245}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{162., 15.52786404500042}, {162., 20.}}], 
               LineBox[{{162., 20.}, {162., 24.47213595499958}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{180., 9.39444872453601}, {180., 13.}}], 
               LineBox[{{180., 13.}, {180., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{207., 35.51925930159214}, {207., 42.}}], 
               LineBox[{{207., 42.}, {207., 48.48074069840786}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{225., 66.33974596215562}, {225., 75.}}], 
               LineBox[{{225., 75.}, {225., 83.66025403784438}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{252., 116.68629150101523`}, {252., 128.}}], 
               LineBox[{{252., 128.}, {252., 139.31370849898477`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{270., 115.73057233041536`}, {270., 127.}}], 
               LineBox[{{270., 127.}, {270., 138.26942766958464`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{27., 40.144345399598954`}, {27., 47.}}], 
               LineBox[{{27., 47.}, {27., 53.855654600401046`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{297., 98.55969349108945}, {297., 109.}}], 
               LineBox[{{297., 109.}, {297., 119.44030650891055`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{315., 64.45599625468247}, {315., 73.}}], 
               LineBox[{{315., 73.}, {315., 81.54400374531753}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{342., 9.39444872453601}, {342., 13.}}], 
               LineBox[{{342., 13.}, {342., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{360., 8.535898384862247}, {360., 12.}}], 
               LineBox[{{360., 12.}, {360., 15.464101615137753`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{45., 95.704369859013}, {45., 106.}}], 
               LineBox[{{45., 106.}, {45., 116.295630140987}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{72., 120.51087470692394`}, {72., 132.}}], 
               LineBox[{{72., 132.}, {72., 143.48912529307606`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{90., 110.95463898281274`}, {90., 122.}}], 
               LineBox[{{90., 122.}, {90., 133.04536101718725`}}]}}}, {{
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{0., 64.45599625468247}, {0., 73.}}], 
               LineBox[{{0., 73.}, {0., 81.54400374531753}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{117., 116.68629150101523`}, {117., 128.}}], 
               LineBox[{{117., 128.}, {117., 139.31370849898477`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{135., 108.09128788536428`}, {135., 119.}}], 
               LineBox[{{135., 119.}, {135., 129.9087121146357}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{162., 89.0501256289338}, {162., 99.}}], 
               LineBox[{{162., 99.}, {162., 108.9498743710662}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{180., 59.75378874876468}, {180., 68.}}], 
               LineBox[{{180., 68.}, {180., 76.24621125123532}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{207., 18.20416847668728}, {207., 23.}}], 
               LineBox[{{207., 23.}, {207., 27.79583152331272}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{225., 20.}, {225., 25.}}], 
               LineBox[{{225., 25.}, {225., 30.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{252., 45.71989011071948}, {252., 53.}}], 
               LineBox[{{252., 53.}, {252., 60.28010988928052}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{270., 72.}, {270., 81.}}], 
               LineBox[{{270., 81.}, {270., 90.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{27., 32.7550020016016}, {27., 39.}}], 
               LineBox[{{27., 39.}, {27., 45.2449979983984}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{297., 114.77502783967817`}, {297., 126.}}], 
               LineBox[{{297., 126.}, {297., 137.2249721603218}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{315., 124.3380962103094}, {315., 136.}}], 
               LineBox[{{315., 136.}, {315., 147.6619037896906}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{342., 67.28220211291865}, {342., 76.}}], 
               LineBox[{{342., 76.}, {342., 84.71779788708135}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{360., 50.38422689413609}, {360., 58.}}], 
               LineBox[{{360., 58.}, {360., 65.61577310586391}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{45., 21.803847577293368`}, {45., 27.}}], 
               LineBox[{{45., 27.}, {45., 32.19615242270663}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{72., 40.144345399598954`}, {72., 47.}}], 
               LineBox[{{72., 47.}, {72., 53.855654600401046`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{90., 63.51471862576143}, {90., 72.}}], 
               LineBox[{{90., 72.}, {90., 80.48528137423857}}]}}}}, {{{
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 15.464101615137753`}, 
                  Offset[{3, 0}, {0., 15.464101615137753`}]}, {{0., 
                  15.464101615137753`}, 
                  Offset[{-3, 0}, {0., 15.464101615137753`}]}, {{0., 
                  8.535898384862247}, 
                  Offset[{3, 0}, {0., 8.535898384862247}]}, {{0., 
                  8.535898384862247}, 
                  Offset[{-3, 0}, {0., 8.535898384862247}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 104.74679434480896`}, 
                  Offset[{3, 0}, {117., 104.74679434480896`}]}, {{117., 
                  104.74679434480896`}, 
                  Offset[{-3, 0}, {117., 104.74679434480896`}]}, {{117., 
                  85.25320565519104}, 
                  Offset[{3, 0}, {117., 85.25320565519104}]}, {{117., 
                  85.25320565519104}, 
                  Offset[{-3, 0}, {117., 85.25320565519104}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 75.18535277187245}, 
                  Offset[{3, 0}, {135., 75.18535277187245}]}, {{135., 
                  75.18535277187245}, 
                  Offset[{-3, 0}, {135., 75.18535277187245}]}, {{135., 
                  58.81464722812755}, 
                  Offset[{3, 0}, {135., 58.81464722812755}]}, {{135., 
                  58.81464722812755}, 
                  Offset[{-3, 0}, {135., 58.81464722812755}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 24.47213595499958}, 
                  Offset[{3, 0}, {162., 24.47213595499958}]}, {{162., 
                  24.47213595499958}, 
                  Offset[{-3, 0}, {162., 24.47213595499958}]}, {{162., 
                  15.52786404500042}, 
                  Offset[{3, 0}, {162., 15.52786404500042}]}, {{162., 
                  15.52786404500042}, 
                  Offset[{-3, 0}, {162., 15.52786404500042}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 16.605551275463988`}, 
                  Offset[{3, 0}, {180., 16.605551275463988`}]}, {{180., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {180., 16.605551275463988`}]}, {{180., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {180., 9.39444872453601}]}, {{180., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {180., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 48.48074069840786}, 
                  Offset[{3, 0}, {207., 48.48074069840786}]}, {{207., 
                  48.48074069840786}, 
                  Offset[{-3, 0}, {207., 48.48074069840786}]}, {{207., 
                  35.51925930159214}, 
                  Offset[{3, 0}, {207., 35.51925930159214}]}, {{207., 
                  35.51925930159214}, 
                  Offset[{-3, 0}, {207., 35.51925930159214}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 83.66025403784438}, 
                  Offset[{3, 0}, {225., 83.66025403784438}]}, {{225., 
                  83.66025403784438}, 
                  Offset[{-3, 0}, {225., 83.66025403784438}]}, {{225., 
                  66.33974596215562}, 
                  Offset[{3, 0}, {225., 66.33974596215562}]}, {{225., 
                  66.33974596215562}, 
                  Offset[{-3, 0}, {225., 66.33974596215562}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 139.31370849898477`}, 
                  Offset[{3, 0}, {252., 139.31370849898477`}]}, {{252., 
                  139.31370849898477`}, 
                  Offset[{-3, 0}, {252., 139.31370849898477`}]}, {{252., 
                  116.68629150101523`}, 
                  Offset[{3, 0}, {252., 116.68629150101523`}]}, {{252., 
                  116.68629150101523`}, 
                  Offset[{-3, 0}, {252., 116.68629150101523`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 138.26942766958464`}, 
                  Offset[{3, 0}, {270., 138.26942766958464`}]}, {{270., 
                  138.26942766958464`}, 
                  Offset[{-3, 0}, {270., 138.26942766958464`}]}, {{270., 
                  115.73057233041536`}, 
                  Offset[{3, 0}, {270., 115.73057233041536`}]}, {{270., 
                  115.73057233041536`}, 
                  Offset[{-3, 0}, {270., 115.73057233041536`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 53.855654600401046`}, 
                  Offset[{3, 0}, {27., 53.855654600401046`}]}, {{27., 
                  53.855654600401046`}, 
                  Offset[{-3, 0}, {27., 53.855654600401046`}]}, {{27., 
                  40.144345399598954`}, 
                  Offset[{3, 0}, {27., 40.144345399598954`}]}, {{27., 
                  40.144345399598954`}, 
                  Offset[{-3, 0}, {27., 40.144345399598954`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 119.44030650891055`}, 
                  Offset[{3, 0}, {297., 119.44030650891055`}]}, {{297., 
                  119.44030650891055`}, 
                  Offset[{-3, 0}, {297., 119.44030650891055`}]}, {{297., 
                  98.55969349108945}, 
                  Offset[{3, 0}, {297., 98.55969349108945}]}, {{297., 
                  98.55969349108945}, 
                  Offset[{-3, 0}, {297., 98.55969349108945}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 81.54400374531753}, 
                  Offset[{3, 0}, {315., 81.54400374531753}]}, {{315., 
                  81.54400374531753}, 
                  Offset[{-3, 0}, {315., 81.54400374531753}]}, {{315., 
                  64.45599625468247}, 
                  Offset[{3, 0}, {315., 64.45599625468247}]}, {{315., 
                  64.45599625468247}, 
                  Offset[{-3, 0}, {315., 64.45599625468247}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 16.605551275463988`}, 
                  Offset[{3, 0}, {342., 16.605551275463988`}]}, {{342., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {342., 16.605551275463988`}]}, {{342., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {342., 9.39444872453601}]}, {{342., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {342., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 15.464101615137753`}, 
                  Offset[{3, 0}, {360., 15.464101615137753`}]}, {{360., 
                  15.464101615137753`}, 
                  Offset[{-3, 0}, {360., 15.464101615137753`}]}, {{360., 
                  8.535898384862247}, 
                  Offset[{3, 0}, {360., 8.535898384862247}]}, {{360., 
                  8.535898384862247}, 
                  Offset[{-3, 0}, {360., 8.535898384862247}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 116.295630140987}, 
                  Offset[{3, 0}, {45., 116.295630140987}]}, {{45., 
                  116.295630140987}, 
                  Offset[{-3, 0}, {45., 116.295630140987}]}, {{45., 
                  95.704369859013}, 
                  Offset[{3, 0}, {45., 95.704369859013}]}, {{45., 
                  95.704369859013}, 
                  Offset[{-3, 0}, {45., 95.704369859013}]}}], {{{1., 0.}, {0.,
                 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 143.48912529307606`}, 
                  Offset[{3, 0}, {72., 143.48912529307606`}]}, {{72., 
                  143.48912529307606`}, 
                  Offset[{-3, 0}, {72., 143.48912529307606`}]}, {{72., 
                  120.51087470692394`}, 
                  Offset[{3, 0}, {72., 120.51087470692394`}]}, {{72., 
                  120.51087470692394`}, 
                  Offset[{-3, 0}, {72., 120.51087470692394`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 133.04536101718725`}, 
                  Offset[{3, 0}, {90., 133.04536101718725`}]}, {{90., 
                  133.04536101718725`}, 
                  Offset[{-3, 0}, {90., 133.04536101718725`}]}, {{90., 
                  110.95463898281274`}, 
                  Offset[{3, 0}, {90., 110.95463898281274`}]}, {{90., 
                  110.95463898281274`}, 
                  Offset[{-3, 0}, {90., 110.95463898281274`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}}, {{Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 81.54400374531753}, 
                  Offset[{3, 0}, {0., 81.54400374531753}]}, {{0., 
                  81.54400374531753}, 
                  Offset[{-3, 0}, {0., 81.54400374531753}]}, {{0., 
                  64.45599625468247}, 
                  Offset[{3, 0}, {0., 64.45599625468247}]}, {{0., 
                  64.45599625468247}, 
                  Offset[{-3, 0}, {0., 64.45599625468247}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 139.31370849898477`}, 
                  Offset[{3, 0}, {117., 139.31370849898477`}]}, {{117., 
                  139.31370849898477`}, 
                  Offset[{-3, 0}, {117., 139.31370849898477`}]}, {{117., 
                  116.68629150101523`}, 
                  Offset[{3, 0}, {117., 116.68629150101523`}]}, {{117., 
                  116.68629150101523`}, 
                  Offset[{-3, 0}, {117., 116.68629150101523`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 129.9087121146357}, 
                  Offset[{3, 0}, {135., 129.9087121146357}]}, {{135., 
                  129.9087121146357}, 
                  Offset[{-3, 0}, {135., 129.9087121146357}]}, {{135., 
                  108.09128788536428`}, 
                  Offset[{3, 0}, {135., 108.09128788536428`}]}, {{135., 
                  108.09128788536428`}, 
                  Offset[{-3, 0}, {135., 108.09128788536428`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 108.9498743710662}, 
                  Offset[{3, 0}, {162., 108.9498743710662}]}, {{162., 
                  108.9498743710662}, 
                  Offset[{-3, 0}, {162., 108.9498743710662}]}, {{162., 
                  89.0501256289338}, 
                  Offset[{3, 0}, {162., 89.0501256289338}]}, {{162., 
                  89.0501256289338}, 
                  Offset[{-3, 0}, {162., 89.0501256289338}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 76.24621125123532}, 
                  Offset[{3, 0}, {180., 76.24621125123532}]}, {{180., 
                  76.24621125123532}, 
                  Offset[{-3, 0}, {180., 76.24621125123532}]}, {{180., 
                  59.75378874876468}, 
                  Offset[{3, 0}, {180., 59.75378874876468}]}, {{180., 
                  59.75378874876468}, 
                  Offset[{-3, 0}, {180., 59.75378874876468}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 27.79583152331272}, 
                  Offset[{3, 0}, {207., 27.79583152331272}]}, {{207., 
                  27.79583152331272}, 
                  Offset[{-3, 0}, {207., 27.79583152331272}]}, {{207., 
                  18.20416847668728}, 
                  Offset[{3, 0}, {207., 18.20416847668728}]}, {{207., 
                  18.20416847668728}, 
                  Offset[{-3, 0}, {207., 18.20416847668728}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 30.}, 
                  Offset[{3, 0}, {225., 30.}]}, {{225., 30.}, 
                  Offset[{-3, 0}, {225., 30.}]}, {{225., 20.}, 
                  Offset[{3, 0}, {225., 20.}]}, {{225., 20.}, 
                  Offset[{-3, 0}, {225., 20.}]}}], {{{1., 0.}, {0., 1.}}, {0.,
                 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 60.28010988928052}, 
                  Offset[{3, 0}, {252., 60.28010988928052}]}, {{252., 
                  60.28010988928052}, 
                  Offset[{-3, 0}, {252., 60.28010988928052}]}, {{252., 
                  45.71989011071948}, 
                  Offset[{3, 0}, {252., 45.71989011071948}]}, {{252., 
                  45.71989011071948}, 
                  Offset[{-3, 0}, {252., 45.71989011071948}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 90.}, 
                  Offset[{3, 0}, {270., 90.}]}, {{270., 90.}, 
                  Offset[{-3, 0}, {270., 90.}]}, {{270., 72.}, 
                  Offset[{3, 0}, {270., 72.}]}, {{270., 72.}, 
                  Offset[{-3, 0}, {270., 72.}]}}], {{{1., 0.}, {0., 1.}}, {0.,
                 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 45.2449979983984}, 
                  Offset[{3, 0}, {27., 45.2449979983984}]}, {{27., 
                  45.2449979983984}, 
                  Offset[{-3, 0}, {27., 45.2449979983984}]}, {{27., 
                  32.7550020016016}, 
                  Offset[{3, 0}, {27., 32.7550020016016}]}, {{27., 
                  32.7550020016016}, 
                  Offset[{-3, 0}, {27., 32.7550020016016}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 137.2249721603218}, 
                  Offset[{3, 0}, {297., 137.2249721603218}]}, {{297., 
                  137.2249721603218}, 
                  Offset[{-3, 0}, {297., 137.2249721603218}]}, {{297., 
                  114.77502783967817`}, 
                  Offset[{3, 0}, {297., 114.77502783967817`}]}, {{297., 
                  114.77502783967817`}, 
                  Offset[{-3, 0}, {297., 114.77502783967817`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 147.6619037896906}, 
                  Offset[{3, 0}, {315., 147.6619037896906}]}, {{315., 
                  147.6619037896906}, 
                  Offset[{-3, 0}, {315., 147.6619037896906}]}, {{315., 
                  124.3380962103094}, 
                  Offset[{3, 0}, {315., 124.3380962103094}]}, {{315., 
                  124.3380962103094}, 
                  Offset[{-3, 0}, {315., 124.3380962103094}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 84.71779788708135}, 
                  Offset[{3, 0}, {342., 84.71779788708135}]}, {{342., 
                  84.71779788708135}, 
                  Offset[{-3, 0}, {342., 84.71779788708135}]}, {{342., 
                  67.28220211291865}, 
                  Offset[{3, 0}, {342., 67.28220211291865}]}, {{342., 
                  67.28220211291865}, 
                  Offset[{-3, 0}, {342., 67.28220211291865}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 65.61577310586391}, 
                  Offset[{3, 0}, {360., 65.61577310586391}]}, {{360., 
                  65.61577310586391}, 
                  Offset[{-3, 0}, {360., 65.61577310586391}]}, {{360., 
                  50.38422689413609}, 
                  Offset[{3, 0}, {360., 50.38422689413609}]}, {{360., 
                  50.38422689413609}, 
                  Offset[{-3, 0}, {360., 50.38422689413609}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 32.19615242270663}, 
                  Offset[{3, 0}, {45., 32.19615242270663}]}, {{45., 
                  32.19615242270663}, 
                  Offset[{-3, 0}, {45., 32.19615242270663}]}, {{45., 
                  21.803847577293368`}, 
                  Offset[{3, 0}, {45., 21.803847577293368`}]}, {{45., 
                  21.803847577293368`}, 
                  Offset[{-3, 0}, {45., 21.803847577293368`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 53.855654600401046`}, 
                  Offset[{3, 0}, {72., 53.855654600401046`}]}, {{72., 
                  53.855654600401046`}, 
                  Offset[{-3, 0}, {72., 53.855654600401046`}]}, {{72., 
                  40.144345399598954`}, 
                  Offset[{3, 0}, {72., 40.144345399598954`}]}, {{72., 
                  40.144345399598954`}, 
                  Offset[{-3, 0}, {72., 40.144345399598954`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 80.48528137423857}, 
                  Offset[{3, 0}, {90., 80.48528137423857}]}, {{90., 
                  80.48528137423857}, 
                  Offset[{-3, 0}, {90., 80.48528137423857}]}, {{90., 
                  63.51471862576143}, 
                  Offset[{3, 0}, {90., 63.51471862576143}]}, {{90., 
                  63.51471862576143}, 
                  Offset[{-3, 0}, {90., 63.51471862576143}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}}}}, {{{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 12.}}, {{117., 95.}}, {{
              135., 67.}}, {{162., 20.}}, {{180., 13.}}, {{207., 42.}}, {{
              225., 75.}}, {{252., 128.}}, {{270., 127.}}, {{27., 47.}}, {{
              297., 109.}}, {{315., 73.}}, {{342., 13.}}, {{360., 12.}}, {{
              45., 106.}}, {{72., 132.}}, {{90., 122.}}}]}, {
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 73.}}, {{117., 
              128.}}, {{135., 119.}}, {{162., 99.}}, {{180., 68.}}, {{207., 
              23.}}, {{225., 25.}}, {{252., 53.}}, {{270., 81.}}, {{27., 
              39.}}, {{297., 126.}}, {{315., 136.}}, {{342., 76.}}, {{360., 
              58.}}, {{45., 27.}}, {{72., 47.}}, {{90., 
              72.}}}]}}}, {{}, {}}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1: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
Xgb8V7j8vUuxsc5wx/E8Bm6lf97YTLHkr849O44xQA4PvjxN8cKNBnidYcDO
JupdPMVv00sX9S4xMJ81sFWf4haT/TfXNTCQoVKm+pOy9zhXfMrCbQa+5mxO
KqGYdd9H990DBkou2yvpUeyWYzF7q4sBPv+TtvcpPbTs1a+V9DMQJPO315zi
lYJicbtGGXizKaK7gdLzexenOvGNgfGC70ZrKX5e9PUrfjNg2Nsuuo3SP2/d
nQgOfnfUuGbRRij/RQ5UyX1Y645vTn6eKyi2OVP4sX29O7Qf2HDKUv7mkQsP
+E/bHcoL/qQCFR+jn52kQo3dYULavl5zgcDdav13FtbumOF4uX2Giq89mgKe
PL7uSLgbsSbrHJVvo7cjb4a5Qz13dZPEWQJixdEZzDh3xEdUe56j4reO/emF
3ix3TBf9vbrzNIH0hrQbuYfdcay9LfrpScqeCJVnOO2Onmu5+oLFBIaf585W
1rnDc250dcBRKn72GSz3veWO9fevKjALCaToTkgIPXAH3XzWL/owpU+ZrfmO
d+7AGjZD3XwCpjHLC615PFCb+taeg8pnfpmWC39XeuATn/pEDpXvb3oiblyV
8MA4Y7aLg6oHcUYPh0U3ekDC/2QBmULlH1+2xrivBxQutccnxBCIvrPJvCTc
A1ynxBeSIgnoJX7ycI73wFCM1uK2CAJd/RYZLdkeODfAfUAqiABH9ZJnOfUe
6LrMd7DdjaoP/g3DRrc9EH5Do3qLM4HiVSGz0w88MBx3Mq3e4f/n4R0S3gMe
4Ny92TfQkkCgzd5IpWWeeP0iYO7vJqr+jbEtf+znCc/2MlutNQTyT9VKZER4
4uZugaZ6IQJeWwkNrQRPyPw3GyrDR2C6qdXj1H5PSE4L33rJSWBDVvqFyGue
IEJ0X0wP+mM3bcGMb7kXCGnJWx15/ogu+5VwcLUXpkIXdi/b6w+fdXPlQlJe
CHh41VYj2R+6QtNca7S8sLh9i61ioD8mFz51SPp54f6dhWMdWv7w6n5ppl7n
BV6JUZHabj9o7b1k5uLljbNDrgXibH7Uvqky4VWwNy4tedH+47svBHacL3eP
8YZdbpn31Q++GI8+w+Wzj1q3RQ02Dt7zxRmvYx3BV7yR3R/2RSDXF/yae81Y
HD6omhRKfinki0+DXmYnqnyw67BcwqsVPhDkH/8Res0HvFVlVu//eENPf8c5
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
/fFuzL46DrX/bfVPsfKCY7z2q2VkHAzGf7V8bfJEbtzI5d2f4vDyNr1OPdcD
3LGm/rE68eB9vk+PbyUDz1J9JTOH4uF2aPMsM2Qr7nlFzdNG4iFxOe+BiONW
3NZN67o7Go/lIic8OnS34srPU5lLJuIx/aQuVo53K3Ij+yf3zcZjLlAsxzzU
EVY+3q17VyTA8erfGDUuB5D6nsRu7QTwbraZyLWxRd1v17Op+xOQ3+xk1yhs
AV1za5+pAwlofTrWEv/NHK0HDdcE5ifgWxvvOdtOczyWpedYHknA9bCKGdvd
5hh1mItdeZp6nv+a+tFJM4idO2FSWZuA4aNi13OfbsFu24HBl68T4Hfxx/7u
ChPwHO0qtniTgCm6WF3QPhPkD95zbe5PQMmIznHhIBMUJ9Y8KBlKgEym9LFh
aRNcK82ojfiSgAnZcUn5EmDsx4aMf4sJUOWPG1U2NsbWU2FSSvREbFqSkqi9
Sx8rg55c6ZJPxO8/1/eKmuijW2GjUYpSItLExX0JTn24Ny36PFRPhNsj6YMi
+/Xg11VUHKafCHWd9wUmJzYjiqdDuHxrIu7IzGuNPd4E1WcKFbYuiZjV+3dB
p2gTvhUd1PrhlogW5RXzU76bkCDj7WLqnYgDnFtWV3zTQarRdMFgSCLcw3rs
6Ot0kJMgzSuxMxGTpely4/u0YKefebIjLRGEhIaLhKsW+DkmFCMzEtHHI7S3
TUYLhw42Wd/4LxF7izKOBXdsxPEqhyzPgkSw+n//XLliIy4MpnIcrUjEhfYb
tswrGgi/MHzIsDIRuqJD/j/2aUAx2mr9x6pEeNpMlk96a+DKn1XQqk0En5CX
guMKDTSuuZTW1ZKIgp4DjXdi1NFh1zfP/zwRohPnj0aWqkI4QyZ8f1cihEa2
DxsRqgitj3rN+SoROwyTznxZr4qlYhyN832JMDT1dOu5oAKbT4rxwx8SUbdX
1uDvLWWcFEsc9hml3t8S+KrmP2VM2Lc6vR5LhOInvhg4KCPvmov646+JsLrw
0ubvkBKe70792jCXiCL75t5vq5SwvuGej/rvRJw+frahZFgRcWOCj6sWEsF+
+0WDSp0iVjlWVJWys9DonX3om4siGOJPw/avYKHjoX/cqrMKuOAo8pqTnwWt
OkuN7iQFzO8JtEgXZEE6LO1RsoMCTnyelY0XZmH1v2X3oxfl0d8oNewjxUKB
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
wAzXPQf8D9YGD9w=
               "]]}, Annotation[#, "Charting`Private`Tag$669749#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1: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
FEzHqz6b33NzXBhxjm4tZtDxPwN1K7s=
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$669749#1"]& ]}}, {}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
9vPfv1h47Nw10CRsg/8APjmgdw==
               "]]}, Annotation[#, "Charting`Private`Tag$669802#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
XEQMzzKFKfw/+KLCXA==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$669802#1"]& ]}}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Coinc. per 5 min\"", TraditionalForm], None}, {
            FormBox["\"Measurement Angle\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           Thickness[0.006], FontSize -> 12], FrameTicks -> {{{{-70, 
              FormBox["\"-70\"", TraditionalForm], 0.024}, {0, 
              FormBox["\"0\"", TraditionalForm], 0.024}, {70, 
              FormBox["\"70\"", TraditionalForm], 0.024}, {140, 
              FormBox["\"140\"", TraditionalForm], 0.024}, {210, 
              FormBox["\"210\"", TraditionalForm], 0.024}}, {{-70, "", 
              0.024}, {0, "", 0.024}, {70, "", 0.024}, {140, "", 0.024}, {
             210, "", 0.024}}}, {{{-45, "", 0.024}, {-30, "", 0.012}, {-15, 
              "", 0.012}, {0, 
              FormBox[
               RowBox[{"\"0\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {15, "", 0.012}, {30, "", 0.012}, {45, "", 0.024}, {
             60, "", 0.012}, {75, "", 0.012}, {90, 
              FormBox[
               RowBox[{"\"90\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {105, "", 0.012}, {120, "", 0.012}, {135, "", 0.024}, {
             150, "", 0.012}, {165, "", 0.012}, {180, 
              FormBox[
               RowBox[{"\"180\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {195, "", 0.012}, {210, "", 0.012}, {225, "", 0.024}, {
             240, "", 0.012}, {255, "", 0.012}, {270, 
              FormBox[
               RowBox[{"\"270\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {285, "", 0.012}, {300, "", 0.012}, {315, "", 0.024}, {
             330, "", 0.012}, {345, "", 0.012}, {360, 
              FormBox[
               RowBox[{"\"360\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}, {{-45, "", 0.024}, {-30, "", 0.012}, {-15, "", 
              0.012}, {0, "", 0.024}, {15, "", 0.012}, {30, "", 0.012}, {
             45, "", 0.024}, {60, "", 0.012}, {75, "", 0.012}, {
             90, "", 0.024}, {105, "", 0.012}, {120, "", 0.012}, {
             135, "", 0.024}, {150, "", 0.012}, {165, "", 0.012}, {
             180, "", 0.024}, {195, "", 0.012}, {210, "", 0.012}, {
             225, "", 0.024}, {240, "", 0.012}, {255, "", 0.012}, {
             270, "", 0.024}, {285, "", 0.012}, {300, "", 0.012}, {
             315, "", 0.024}, {330, "", 0.012}, {345, "", 0.012}, {
             360, "", 0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 260, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Before Cyc: 0-1\"", TraditionalForm], 
         PlotRange -> {{-14.4, 374.4}, {-28., 168.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox["\"\"", TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
     TagBox[
      GridBox[{{
         TemplateBox[{"\"HV Basis\""}, "SwatchLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    InsetBox[
                    Graphics3DBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    Specularity[
                    RGBColor[0, 0, 1], 30], 
                    SphereBox[{0, 0, 0}]}, Boxed -> False, Lighting -> 
                    "Neutral", PlotRange -> {{-1, 1}, {-1, 1}, {-1, 1}}, 
                    ViewPoint -> {0, 
                    DirectedInfinity[-1], 0}, BoxRatios -> {1, 1, 1}], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}], {0.5, 0.5}, {1, 1}]}, 
                    AspectRatio -> Full, PlotRangePadding -> None, 
                    ImagePadding -> 1, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 
                 TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                  "RGBColorSwatchTemplate"], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"SphereBubble\""}]}], 
             "]"}]& ), Editable -> True], 
         TemplateBox[{
           RowBox[{
             RowBox[{"\[PlusMinus]", "45"}], " ", "\[Degree]", " ", 
             "Basis"}]}, "SwatchLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    InsetBox[
                    Graphics3DBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    Specularity[
                    RGBColor[1, 0, 0], 30], 
                    SphereBox[{0, 0, 0}]}, Boxed -> False, Lighting -> 
                    "Neutral", PlotRange -> {{-1, 1}, {-1, 1}, {-1, 1}}, 
                    ViewPoint -> {0, 
                    DirectedInfinity[-1], 0}, BoxRatios -> {1, 1, 1}], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}], {0.5, 0.5}, {1, 1}]}, 
                    AspectRatio -> Full, PlotRangePadding -> None, 
                    ImagePadding -> 1, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 
                 TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                  "RGBColorSwatchTemplate"], "}"}], ",", 
               RowBox[{"{", 
                 TagBox[#, HoldForm], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"SphereBubble\""}]}], 
             "]"}]& ), Editable -> True]}, {
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "72", "\"\[PlusMinus]3\""}, {
             "v", "0.85`2.", "\"\[PlusMinus]0.04\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False], 
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "72", "\"\[PlusMinus]3\""}, {
             "v", "0.67`2.", "\"\[PlusMinus]0.05\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}, {
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "73", "\"\[PlusMinus]3\""}, {
             "v", "0.85`2.", "\"\[PlusMinus]0.03\""}, {
             "\[Theta]", "85.2`3.", "\"\[PlusMinus]1.2\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False], 
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "73", "\"\[PlusMinus]3\""}, {
             "v", "0.68`2.", "\"\[PlusMinus]0.04\""}, {"\[Theta]", 
              RowBox[{"-", "50.`3."}], "\"\[PlusMinus]1.7\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]}, 
    "RowWithSeparators"], 
   TemplateBox[{"   ", "\"   \"", 
     TemplateBox[{
       GraphicsBox[{{{{{{Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{0., 8.535898384862247}, {0., 12.}}], 
               LineBox[{{0., 12.}, {0., 15.464101615137753`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{117., 131.0417392568986}, {117., 143.}}], 
               LineBox[{{117., 143.}, {117., 154.9582607431014}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{135., 91.90049506163793}, {135., 102.}}], 
               LineBox[{{135., 102.}, {135., 112.09950493836207`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{162., 13.757359312880714`}, {162., 18.}}], 
               LineBox[{{162., 18.}, {162., 22.242640687119284`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{180., 8.535898384862247}, {180., 12.}}], 
               LineBox[{{180., 12.}, {180., 15.464101615137753`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{207., 47.58380151290434}, {207., 55.}}], 
               LineBox[{{207., 55.}, {207., 62.41619848709566}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{225., 87.1511421982039}, {225., 97.}}], 
               LineBox[{{225., 97.}, {225., 106.8488578017961}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{252., 153.1159012732749}, {252., 166.}}], 
               LineBox[{{252., 166.}, {252., 178.8840987267251}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{270., 150.2328546651963}, {270., 163.}}], 
               LineBox[{{270., 163.}, {270., 175.7671453348037}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{27., 51.318854252131395`}, {27., 59.}}], 
               LineBox[{{27., 59.}, {27., 66.68114574786861}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{297., 127.2101738774484}, {297., 139.}}], 
               LineBox[{{297., 139.}, {297., 150.7898261225516}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{315., 72.94461486186259}, {315., 82.}}], 
               LineBox[{{315., 82.}, {315., 91.05538513813741}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{342., 15.52786404500042}, {342., 20.}}], 
               LineBox[{{342., 20.}, {342., 24.47213595499958}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{360., 6.}, {360., 9.}}], 
               LineBox[{{360., 9.}, {360., 12.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{45., 104.27619470523639`}, {45., 115.}}], 
               LineBox[{{45., 115.}, {45., 125.72380529476361`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{72., 162.7335008385784}, {72., 176.}}], 
               LineBox[{{72., 176.}, {72., 189.2664991614216}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{90., 189.7171431429143}, {90., 204.}}], 
               LineBox[{{90., 204.}, {90., 218.2828568570857}}]}}}, {{
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{0., 90.}, {0., 100.}}], 
               LineBox[{{0., 100.}, {0., 110.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{117., 133.91695402640542`}, {117., 146.}}], 
               LineBox[{{117., 146.}, {117., 158.08304597359458`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{135., 122.42416309720977`}, {135., 134.}}], 
               LineBox[{{135., 134.}, {135., 145.57583690279023`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{162., 89.0501256289338}, {162., 99.}}], 
               LineBox[{{162., 99.}, {162., 108.9498743710662}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{180., 65.39767473295737}, {180., 74.}}], 
               LineBox[{{180., 74.}, {180., 82.60232526704263}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{207., 50.38422689413609}, {207., 58.}}], 
               LineBox[{{207., 58.}, {207., 65.61577310586391}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{225., 40.144345399598954`}, {225., 47.}}], 
               LineBox[{{225., 47.}, {225., 53.855654600401046`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{252., 83.35634923900705}, {252., 93.}}], 
               LineBox[{{252., 93.}, {252., 102.64365076099295`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{270., 85.25320565519104}, {270., 95.}}], 
               LineBox[{{270., 95.}, {270., 104.74679434480896`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{27., 56.}, {27., 64.}}], 
               LineBox[{{27., 64.}, {27., 72.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{297., 127.2101738774484}, {297., 139.}}], 
               LineBox[{{297., 139.}, {297., 150.7898261225516}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{315., 127.2101738774484}, {315., 139.}}], 
               LineBox[{{315., 139.}, {315., 150.7898261225516}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{342., 112.86447127433996`}, {342., 124.}}], 
               LineBox[{{342., 124.}, {342., 135.13552872566004`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{360., 68.22503561260788}, {360., 77.}}], 
               LineBox[{{360., 77.}, {360., 85.77496438739212}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{45., 49.45016556472925}, {45., 57.}}], 
               LineBox[{{45., 57.}, {45., 64.54983443527075}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{72., 76.7263815045043}, {72., 86.}}], 
               LineBox[{{72., 86.}, {72., 95.2736184954957}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{90., 90.95012437887911}, {90., 101.}}], 
               LineBox[{{90., 101.}, {90., 111.04987562112089`}}]}}}}, {{{
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 15.464101615137753`}, 
                  Offset[{3, 0}, {0., 15.464101615137753`}]}, {{0., 
                  15.464101615137753`}, 
                  Offset[{-3, 0}, {0., 15.464101615137753`}]}, {{0., 
                  8.535898384862247}, 
                  Offset[{3, 0}, {0., 8.535898384862247}]}, {{0., 
                  8.535898384862247}, 
                  Offset[{-3, 0}, {0., 8.535898384862247}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 154.9582607431014}, 
                  Offset[{3, 0}, {117., 154.9582607431014}]}, {{117., 
                  154.9582607431014}, 
                  Offset[{-3, 0}, {117., 154.9582607431014}]}, {{117., 
                  131.0417392568986}, 
                  Offset[{3, 0}, {117., 131.0417392568986}]}, {{117., 
                  131.0417392568986}, 
                  Offset[{-3, 0}, {117., 131.0417392568986}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 112.09950493836207`}, 
                  Offset[{3, 0}, {135., 112.09950493836207`}]}, {{135., 
                  112.09950493836207`}, 
                  Offset[{-3, 0}, {135., 112.09950493836207`}]}, {{135., 
                  91.90049506163793}, 
                  Offset[{3, 0}, {135., 91.90049506163793}]}, {{135., 
                  91.90049506163793}, 
                  Offset[{-3, 0}, {135., 91.90049506163793}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 22.242640687119284`}, 
                  Offset[{3, 0}, {162., 22.242640687119284`}]}, {{162., 
                  22.242640687119284`}, 
                  Offset[{-3, 0}, {162., 22.242640687119284`}]}, {{162., 
                  13.757359312880714`}, 
                  Offset[{3, 0}, {162., 13.757359312880714`}]}, {{162., 
                  13.757359312880714`}, 
                  Offset[{-3, 0}, {162., 13.757359312880714`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 15.464101615137753`}, 
                  Offset[{3, 0}, {180., 15.464101615137753`}]}, {{180., 
                  15.464101615137753`}, 
                  Offset[{-3, 0}, {180., 15.464101615137753`}]}, {{180., 
                  8.535898384862247}, 
                  Offset[{3, 0}, {180., 8.535898384862247}]}, {{180., 
                  8.535898384862247}, 
                  Offset[{-3, 0}, {180., 8.535898384862247}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 62.41619848709566}, 
                  Offset[{3, 0}, {207., 62.41619848709566}]}, {{207., 
                  62.41619848709566}, 
                  Offset[{-3, 0}, {207., 62.41619848709566}]}, {{207., 
                  47.58380151290434}, 
                  Offset[{3, 0}, {207., 47.58380151290434}]}, {{207., 
                  47.58380151290434}, 
                  Offset[{-3, 0}, {207., 47.58380151290434}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 106.8488578017961}, 
                  Offset[{3, 0}, {225., 106.8488578017961}]}, {{225., 
                  106.8488578017961}, 
                  Offset[{-3, 0}, {225., 106.8488578017961}]}, {{225., 
                  87.1511421982039}, 
                  Offset[{3, 0}, {225., 87.1511421982039}]}, {{225., 
                  87.1511421982039}, 
                  Offset[{-3, 0}, {225., 87.1511421982039}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 178.8840987267251}, 
                  Offset[{3, 0}, {252., 178.8840987267251}]}, {{252., 
                  178.8840987267251}, 
                  Offset[{-3, 0}, {252., 178.8840987267251}]}, {{252., 
                  153.1159012732749}, 
                  Offset[{3, 0}, {252., 153.1159012732749}]}, {{252., 
                  153.1159012732749}, 
                  Offset[{-3, 0}, {252., 153.1159012732749}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 175.7671453348037}, 
                  Offset[{3, 0}, {270., 175.7671453348037}]}, {{270., 
                  175.7671453348037}, 
                  Offset[{-3, 0}, {270., 175.7671453348037}]}, {{270., 
                  150.2328546651963}, 
                  Offset[{3, 0}, {270., 150.2328546651963}]}, {{270., 
                  150.2328546651963}, 
                  Offset[{-3, 0}, {270., 150.2328546651963}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 66.68114574786861}, 
                  Offset[{3, 0}, {27., 66.68114574786861}]}, {{27., 
                  66.68114574786861}, 
                  Offset[{-3, 0}, {27., 66.68114574786861}]}, {{27., 
                  51.318854252131395`}, 
                  Offset[{3, 0}, {27., 51.318854252131395`}]}, {{27., 
                  51.318854252131395`}, 
                  Offset[{-3, 0}, {27., 51.318854252131395`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 150.7898261225516}, 
                  Offset[{3, 0}, {297., 150.7898261225516}]}, {{297., 
                  150.7898261225516}, 
                  Offset[{-3, 0}, {297., 150.7898261225516}]}, {{297., 
                  127.2101738774484}, 
                  Offset[{3, 0}, {297., 127.2101738774484}]}, {{297., 
                  127.2101738774484}, 
                  Offset[{-3, 0}, {297., 127.2101738774484}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 91.05538513813741}, 
                  Offset[{3, 0}, {315., 91.05538513813741}]}, {{315., 
                  91.05538513813741}, 
                  Offset[{-3, 0}, {315., 91.05538513813741}]}, {{315., 
                  72.94461486186259}, 
                  Offset[{3, 0}, {315., 72.94461486186259}]}, {{315., 
                  72.94461486186259}, 
                  Offset[{-3, 0}, {315., 72.94461486186259}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 24.47213595499958}, 
                  Offset[{3, 0}, {342., 24.47213595499958}]}, {{342., 
                  24.47213595499958}, 
                  Offset[{-3, 0}, {342., 24.47213595499958}]}, {{342., 
                  15.52786404500042}, 
                  Offset[{3, 0}, {342., 15.52786404500042}]}, {{342., 
                  15.52786404500042}, 
                  Offset[{-3, 0}, {342., 15.52786404500042}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 12.}, 
                  Offset[{3, 0}, {360., 12.}]}, {{360., 12.}, 
                  Offset[{-3, 0}, {360., 12.}]}, {{360., 6.}, 
                  Offset[{3, 0}, {360., 6.}]}, {{360., 6.}, 
                  Offset[{-3, 0}, {360., 6.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 125.72380529476361`}, 
                  Offset[{3, 0}, {45., 125.72380529476361`}]}, {{45., 
                  125.72380529476361`}, 
                  Offset[{-3, 0}, {45., 125.72380529476361`}]}, {{45., 
                  104.27619470523639`}, 
                  Offset[{3, 0}, {45., 104.27619470523639`}]}, {{45., 
                  104.27619470523639`}, 
                  Offset[{-3, 0}, {45., 104.27619470523639`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 189.2664991614216}, 
                  Offset[{3, 0}, {72., 189.2664991614216}]}, {{72., 
                  189.2664991614216}, 
                  Offset[{-3, 0}, {72., 189.2664991614216}]}, {{72., 
                  162.7335008385784}, 
                  Offset[{3, 0}, {72., 162.7335008385784}]}, {{72., 
                  162.7335008385784}, 
                  Offset[{-3, 0}, {72., 162.7335008385784}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 218.2828568570857}, 
                  Offset[{3, 0}, {90., 218.2828568570857}]}, {{90., 
                  218.2828568570857}, 
                  Offset[{-3, 0}, {90., 218.2828568570857}]}, {{90., 
                  189.7171431429143}, 
                  Offset[{3, 0}, {90., 189.7171431429143}]}, {{90., 
                  189.7171431429143}, 
                  Offset[{-3, 0}, {90., 189.7171431429143}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}}, {{Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 110.}, 
                  Offset[{3, 0}, {0., 110.}]}, {{0., 110.}, 
                  Offset[{-3, 0}, {0., 110.}]}, {{0., 90.}, 
                  Offset[{3, 0}, {0., 90.}]}, {{0., 90.}, 
                  Offset[{-3, 0}, {0., 90.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 158.08304597359458`}, 
                  Offset[{3, 0}, {117., 158.08304597359458`}]}, {{117., 
                  158.08304597359458`}, 
                  Offset[{-3, 0}, {117., 158.08304597359458`}]}, {{117., 
                  133.91695402640542`}, 
                  Offset[{3, 0}, {117., 133.91695402640542`}]}, {{117., 
                  133.91695402640542`}, 
                  Offset[{-3, 0}, {117., 133.91695402640542`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 145.57583690279023`}, 
                  Offset[{3, 0}, {135., 145.57583690279023`}]}, {{135., 
                  145.57583690279023`}, 
                  Offset[{-3, 0}, {135., 145.57583690279023`}]}, {{135., 
                  122.42416309720977`}, 
                  Offset[{3, 0}, {135., 122.42416309720977`}]}, {{135., 
                  122.42416309720977`}, 
                  Offset[{-3, 0}, {135., 122.42416309720977`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 108.9498743710662}, 
                  Offset[{3, 0}, {162., 108.9498743710662}]}, {{162., 
                  108.9498743710662}, 
                  Offset[{-3, 0}, {162., 108.9498743710662}]}, {{162., 
                  89.0501256289338}, 
                  Offset[{3, 0}, {162., 89.0501256289338}]}, {{162., 
                  89.0501256289338}, 
                  Offset[{-3, 0}, {162., 89.0501256289338}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 82.60232526704263}, 
                  Offset[{3, 0}, {180., 82.60232526704263}]}, {{180., 
                  82.60232526704263}, 
                  Offset[{-3, 0}, {180., 82.60232526704263}]}, {{180., 
                  65.39767473295737}, 
                  Offset[{3, 0}, {180., 65.39767473295737}]}, {{180., 
                  65.39767473295737}, 
                  Offset[{-3, 0}, {180., 65.39767473295737}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 65.61577310586391}, 
                  Offset[{3, 0}, {207., 65.61577310586391}]}, {{207., 
                  65.61577310586391}, 
                  Offset[{-3, 0}, {207., 65.61577310586391}]}, {{207., 
                  50.38422689413609}, 
                  Offset[{3, 0}, {207., 50.38422689413609}]}, {{207., 
                  50.38422689413609}, 
                  Offset[{-3, 0}, {207., 50.38422689413609}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 53.855654600401046`}, 
                  Offset[{3, 0}, {225., 53.855654600401046`}]}, {{225., 
                  53.855654600401046`}, 
                  Offset[{-3, 0}, {225., 53.855654600401046`}]}, {{225., 
                  40.144345399598954`}, 
                  Offset[{3, 0}, {225., 40.144345399598954`}]}, {{225., 
                  40.144345399598954`}, 
                  Offset[{-3, 0}, {225., 40.144345399598954`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 102.64365076099295`}, 
                  Offset[{3, 0}, {252., 102.64365076099295`}]}, {{252., 
                  102.64365076099295`}, 
                  Offset[{-3, 0}, {252., 102.64365076099295`}]}, {{252., 
                  83.35634923900705}, 
                  Offset[{3, 0}, {252., 83.35634923900705}]}, {{252., 
                  83.35634923900705}, 
                  Offset[{-3, 0}, {252., 83.35634923900705}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 104.74679434480896`}, 
                  Offset[{3, 0}, {270., 104.74679434480896`}]}, {{270., 
                  104.74679434480896`}, 
                  Offset[{-3, 0}, {270., 104.74679434480896`}]}, {{270., 
                  85.25320565519104}, 
                  Offset[{3, 0}, {270., 85.25320565519104}]}, {{270., 
                  85.25320565519104}, 
                  Offset[{-3, 0}, {270., 85.25320565519104}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 72.}, 
                  Offset[{3, 0}, {27., 72.}]}, {{27., 72.}, 
                  Offset[{-3, 0}, {27., 72.}]}, {{27., 56.}, 
                  Offset[{3, 0}, {27., 56.}]}, {{27., 56.}, 
                  Offset[{-3, 0}, {27., 56.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 150.7898261225516}, 
                  Offset[{3, 0}, {297., 150.7898261225516}]}, {{297., 
                  150.7898261225516}, 
                  Offset[{-3, 0}, {297., 150.7898261225516}]}, {{297., 
                  127.2101738774484}, 
                  Offset[{3, 0}, {297., 127.2101738774484}]}, {{297., 
                  127.2101738774484}, 
                  Offset[{-3, 0}, {297., 127.2101738774484}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 150.7898261225516}, 
                  Offset[{3, 0}, {315., 150.7898261225516}]}, {{315., 
                  150.7898261225516}, 
                  Offset[{-3, 0}, {315., 150.7898261225516}]}, {{315., 
                  127.2101738774484}, 
                  Offset[{3, 0}, {315., 127.2101738774484}]}, {{315., 
                  127.2101738774484}, 
                  Offset[{-3, 0}, {315., 127.2101738774484}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 135.13552872566004`}, 
                  Offset[{3, 0}, {342., 135.13552872566004`}]}, {{342., 
                  135.13552872566004`}, 
                  Offset[{-3, 0}, {342., 135.13552872566004`}]}, {{342., 
                  112.86447127433996`}, 
                  Offset[{3, 0}, {342., 112.86447127433996`}]}, {{342., 
                  112.86447127433996`}, 
                  Offset[{-3, 0}, {342., 112.86447127433996`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 85.77496438739212}, 
                  Offset[{3, 0}, {360., 85.77496438739212}]}, {{360., 
                  85.77496438739212}, 
                  Offset[{-3, 0}, {360., 85.77496438739212}]}, {{360., 
                  68.22503561260788}, 
                  Offset[{3, 0}, {360., 68.22503561260788}]}, {{360., 
                  68.22503561260788}, 
                  Offset[{-3, 0}, {360., 68.22503561260788}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 64.54983443527075}, 
                  Offset[{3, 0}, {45., 64.54983443527075}]}, {{45., 
                  64.54983443527075}, 
                  Offset[{-3, 0}, {45., 64.54983443527075}]}, {{45., 
                  49.45016556472925}, 
                  Offset[{3, 0}, {45., 49.45016556472925}]}, {{45., 
                  49.45016556472925}, 
                  Offset[{-3, 0}, {45., 49.45016556472925}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 95.2736184954957}, 
                  Offset[{3, 0}, {72., 95.2736184954957}]}, {{72., 
                  95.2736184954957}, 
                  Offset[{-3, 0}, {72., 95.2736184954957}]}, {{72., 
                  76.7263815045043}, 
                  Offset[{3, 0}, {72., 76.7263815045043}]}, {{72., 
                  76.7263815045043}, 
                  Offset[{-3, 0}, {72., 76.7263815045043}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 111.04987562112089`}, 
                  Offset[{3, 0}, {90., 111.04987562112089`}]}, {{90., 
                  111.04987562112089`}, 
                  Offset[{-3, 0}, {90., 111.04987562112089`}]}, {{90., 
                  90.95012437887911}, 
                  Offset[{3, 0}, {90., 90.95012437887911}]}, {{90., 
                  90.95012437887911}, 
                  Offset[{-3, 0}, {90., 90.95012437887911}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}}}}, {{{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 12.}}, {{117., 
              143.}}, {{135., 102.}}, {{162., 18.}}, {{180., 12.}}, {{207., 
              55.}}, {{225., 97.}}, {{252., 166.}}, {{270., 163.}}, {{27., 
              59.}}, {{297., 139.}}, {{315., 82.}}, {{342., 20.}}, {{360., 
              9.}}, {{45., 115.}}, {{72., 176.}}, {{90., 204.}}}]}, {
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 100.}}, {{117., 
              146.}}, {{135., 134.}}, {{162., 99.}}, {{180., 74.}}, {{207., 
              58.}}, {{225., 47.}}, {{252., 93.}}, {{270., 95.}}, {{27., 
              64.}}, {{297., 139.}}, {{315., 139.}}, {{342., 124.}}, {{360., 
              77.}}, {{45., 57.}}, {{72., 86.}}, {{90., 
              101.}}}]}}}, {{}, {}}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1: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
ggtev7GZ+vcvHq2Ljp1NtXLB/wAzERCl
               "]]}, Annotation[#, "Charting`Private`Tag$671100#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1:eJwVmnk4Vd8XxlWUFFIpkiFTkjKVIdRrHs41KzLdY8p0jVdcUkkpSaUMRShE
ERVK+JZORCVTUaYGipJEg0hJv/P76zyf556zz15rv2ud/e7nrvMMsfOZz8XF
pb6Ai+v/1z1s9Rf//jlR/l5a+jcVHbDJ8IOb8pQTdZ4RbF6i6YDJ5Zkf3Mec
qCtSZ26WGDngcMXc9L0eJ2rTpk/ade4OuPTtyZrYcifqUlRA0qZUB/SFkOQv
TycqM/t+0uq/DrBinfz8tdGREgrw1g/o2glNn4/z3p3YRa30TbPbd8IR5WKS
98bf2VNPZjRzp9VdYGMWE/qvx57KvnBl8B9cMB7xQmZZuz0lL7VJep6VCxTb
TiSp/mdPff4XrDHu64L8uF+OEan21PbPSd9DLrggbfjZ9xlDe+pa/kGJWS5X
RN04osBTaEfdO5ZScLLRFateve0XvmBHxVaNqxx95opbvDqn5c/YUZM/Kqoj
Xrviq8e3n6b77ahli6+5qP90hd9K94aknXbUpVa7sC2ybnCO1nRfttCOeqwd
u0ktzg16hqOpYr62VIhW7vN4ZXfUXp1WdHezpZp+3hnu03aHhgBP/SV7W6rq
B+euvJE7VHolv8rBlmoVf+WX6eQO6ZCdDBVRW+pbTWbZSJw7Fl6guI2f2lA/
X4jckWh3R8f3jL3ByjaU/5zTDpYHEwyny0vL5Wwo302br4sGMPHkXnnBDzEb
atbzT1l1OBP1iS3POLw21Ke2Z1JPDzPhr8fturDBmnr9KkcMhUyopfe1KK+3
pt46VHC5DTPRaHTsevyEJdUaoHpqTonE0KZVqh59ltTswpGPV1VIzF9dWLmj
0ZJa1VBYZb6FxPZP9dWzWZZUvWZVarAOieqTc/WRJpbUq5ZtEUbmJEpf7u0O
yGFQv/LOOqzxItF8n9vZPJFBJTwzjVbYQ+LT1dRX69kMSsj+XK6SPwn5feWD
Q2YMasXF3o5VISQuSX757D5JUKaa8evCY0ik+Xlz2RMExbs4QGHHaRIVtj/i
VTUISnqRCrvkDIln2+J5lq0jKP/IQeaSNBIC/Jf4WqcsKL8LfnzXz5NILO9f
aZpvQbX+KRaJzCNRlBVwTu6kBRXY3f7hZAGJxsMzotwcC2rtxh/KFwrpeHet
lnxgaUEZpLLWZRST2PfbboPOjDl1n+fJYv5yElnvB6+JDplTHN1ezY4KOv6W
0M2/2sypmZ7y+4m3SEzmnlK/fdmcYpX2tPbeIbE8Ubwq9bQ5FSU7wQivIaEa
VqoVHmNObU1zX831H4lgw2Y9ZRtz6vN4T9yfeySSlXZT/DrmlEnsHlH/+ySu
CY8YjMmZUzsc7L4+pUiMfOQxK/5jRv2OJCzDGkh4JuvbyVwxo8a1V+zd9pjE
YqGyFwGpZpTch3U+O56QuJkusrvioBm1YcWmoW3NJOZyJ5j6TmZUL2/PMeEW
EoUyLu8TjcyopvWTVydpZlxt2tOhYkbdjOGxa26l4y3PCWIuNqNMqcatu9tJ
6Gss/lb005T6nhMXtLyDnk9tRMT4oCmlfMJsfT3Np3cMTG9tM6W+hnd4+D0j
ofGQ2Le/1pQ6jNdiPM9JvDa7M/ewyJT6MGjscJ7mI63S8UtTTakZ8x+LpTtJ
PH85k3gh0JTycF/zSaSLRLSLz9L3jqbUszXUsqM0Sw10nFY0MqUuPZhf8Ynm
R966K8JVTKnQGLkWwxd0Pj9dyahZa0rJx+53T6NZOHjFmnmLTSktgXC/fprv
fj+QY/bThHp0PPaTyEsSXlGjUimDJlSOs8Igg2a+2Z2Xu1tNKCGuFdZRNJfH
PVgvWWtC1fGPqZ2n2Yln07U9RSbUaqW9yTdo/nf8/ObrZ02oIZF4l3s0Fwlw
V/w8YEKlXfl18QHNlqkhW/UCTSjWg47dd2meXN1ffcTRhMr0WXm8jObsbBPd
FkMTam3x203pNBuuq7i/QsWEyqgizdg0jxaKG7qsNaHGWrt7TGk+q3i8KZ/X
hOoxPPd2Oc3aNybNRyeNKd1DC9y66PgG1MlW1UFjau/8VNtkmo9VP7WJbjWm
Qne13dtG82Y9zS6qxpgqFrfJf0vn78WDfEfeImNq4eLGfzE0x5oI9FufNaYy
ej6/XEqzzNNo93MHjCkx53SFdHp9mq2HB98EGFPHfS//XEFzWJeNj7yjMeUw
zL/jOL2eIrvvjgQZGlO5VA/PT3r9779ez7qtbEyZfREnHGne45k6MStmTL3y
4l12k9bLrcCAqROTRlTbmk5xY1pfLl9fRHcOGFE/rbz8D7XR9bhX/++aViMq
/sYv7Vu0Hm0OiHCXFBpRyy84hf59SmJ6/pFj384YUXL9nr0raM49NsGnfcCI
On/tW6sUrfexlCahx7uMqNK8QVKCro9UYbV0QUMjSqJfaIHgIxLbsnJEHJWN
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
amz0R4OP7V27xzbY/vmErqiKPybZaj921NlAPuXe5bfa/vR4VCdKbDDVK7WX
ZekPPr2zvm/ibZAe9FH4aIQ/mhdubjqvYYPOtAjHmnp/PD+XqbjY1hp1zFCN
hY/9cVAvw6ZzuzWuKrKE7Vv9sfBm5V5KyRoHKK/OsW5/eIx4u3AvtobCmJ21
1Bd/3JjCS40GK8QaqpoeWx0AklmY7rvdCnsENsl3rQ1AmtT2s+zNVrDtVeBZ
Jx2AQ39L3l2WsIJ8iFRDrVIA2j+qL+b8s0RHluCOcf0AlKl6Sg/VW0L2+xeN
nawA8N38LPHVxhIC9z4J54cF4Lfi4zekoSVmjg1PjkcGQCYr4uevrZZoE39d
kXgoANfPkdkXxSzBMW/ZfDcjAAEtCd+ejDDgufIx/+LsAOw00z3BecWA5duG
sZ15Acgw3uJm3cGA9N7/SiauBeDiqnUrI6sZaL1UIi/zIAAnukTyS5IYqA4s
4gltCsDHgKCunIMM5GvkD919GoDC78F8tREMcFoy83e9DMAZgeSBICY93q9E
iaTPAVCunKpt1GAg0tp31TfhQNQN5CmZfyFw4MfG2+/XBML3iWO8zzCBY+e+
2r+UDMQDne7/il4TOP82+sx/GwJxsnKZ8Pk2AjUhyUuP6gVCq2PJF80KAvUr
bK9xDAJhuOn8ROw1As13hC0CTQOxY1uM0cfLBPr+5R6zsQ3E564dq5XO0/78
dPl8MZ9ARP1WvxEVR/vlLZF5/AH0+F/q00ZiCPD3bKP3foGwzPTecHAvAQmp
h/uHOYGIVfycKB5I+9uHiWt79gciMybPV24P7XP9LP9rjg/EazV+cXsPArj5
8teN5EAsyz2pIuVEwMzhwrn8M4Ewfat66T7t721/MTXSMwJRdrhkcYI1AU98
YsdcCsRbAbHRQ6YEAobKlgcVBkLttHtojSGB8MTwcmZJIFIT+QVXg8Dhjj/j
RrcCseuIXLmRNoHkCOqkZk0gXJzSHqzUIJAmkqCkWBeIZ8ox3EvUCVwmBQIE
HwdiXmOaVsAmAqXcnbzzWwNRMXdsS6cigdtXz12ZfEbnTzKE46lAoOmr1HBv
fyDWs8NHf8gQaEsbPtwyEIiCI9zrptYR6NYqkb4/HAi5DZE3JaQIDLwKflA+
Goi9LkR2kASBkTh18vJEIFT76z6+W0vgq+yvuYzJQBTL16cfECMw8/huzvGZ
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
JvA/N7NWXw==
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$671100#1"]& ]}}, {}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
GAO9MhnGbjDzrzOeZ1L2iILlWifc8ELe5rX1EQLSSb9c2grckNpcMfL4OGU/
w/6Y3xU3nEtPVjTII8B7dU4gvd4N0rGXeZ4UEjj51Z+nd9gNZy/HGb2/QUB/
rtKC9dMNFR9xo6yCsi8guI97zg1Spy5xB1YTkFK/t6Ah6o6vCrNmafcIlLHW
/t5v5A5vxkfJiseUf3sTDSSt3CGyaKinuYPy73hHYrmzO8o/2Vs0UPut/u2d
E2+Z7rhwIeN3ZBfFX/NrzRiWOxroP9eve0v506kWs3iHOxICJ3gbqP35/lTf
V/Vj7rDqXGtxi9qvmTz6yi357ghYkVK85CPlz6qj4T4l7jil/nS31SdqX11v
8mlfnTve58yd3Ent7z9t8mgSre74r+5icyK13+f4fAu+8cwdKmndfp7jlP3t
hf3dQ+64uORR1fMfBGqMMwtqv7kj/enQe6cJAnkccb75s+44tCUlpm6SQGKz
n/gOLg8Y8r8OFpki4J5u2eUn4IGzW6IqXaYJaG/WyNm40gPcUu8Zu2YIiApI
uK6V8cB1x2+svFmKj6dcIvNKHhjYkN515jeBp8fHOvp1PMAVW3sy8w+B6+5d
hxqNPaD2oulyyF8Ch1eRmy9Ye+BMOoeQ4hyBrT1Xl+x18cBN4fkH3RTefO5k
a7CfB16Zbn2V8I/az4N27jNnemDIbI3GHIV5aGFmtBgPROUv64meJ/Dpk/PC
ohQPnFKKf9VO4ZZSw3tDaR5oUD0kuXKBwKVt9B2thz3w1PTZDVsK71UX2nA5
zwMWW3qzt1I46OfMdPoFD0x+jLuXSGGTyoHKsDIPsI/sMYik8NqkJ3E2lR5w
SV4570DhuQ1VmkoNHuiXjRZdTeGeucJvSx9S528biX1F2a9tzLw2+sIDqccF
ZZIofDotbuuTXg980TyyhofCbEt/xWufPBBmYRK+h/LHg9dq+PB3D/DLSi8e
pvzXfaJRHPXbA/UpHj/1KbzsqESI4yJPLHNT14qn+PvpvEhGQ9ATL/mkWvMp
fp8vH+8TXuUJNWfyxnWK/xtdXWd/yHiial339/+o+Bw+Q/q8UPbEv0dOWblU
/Lb5l62q0PXETO/6PVup+CoO7jwZb+OJpp6IjC5KD0tKwlzcXT0Ro33mXBSl
l+EwF2E9f08YkbwSPyg9FY3TD03HeMI9X97uDqW3tJtCm9+kUOf3TS2Zo/QY
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
wgv/AzglW1s=
               "]]}, Annotation[#, "Charting`Private`Tag$671153#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwVmnk4VV0UxlUUMkQTKYRKSIaiMr1m7jXLPJ2LzOO94qZSGqQyNEqSJhql
UkQlx5AmopJQVJKQIRJC+vb3V8/v6bhn7bXetfZ+93OW+0Y6bJnJw8NjP4uH
5/9/Azia7/79c6WLXs26m7LBBWuMu7zWjrrSf8/ONhoxc8GI+Oku7z5X2nih
ibSXkwv2Fk6PlTW70r+uqTlosF1wfuj5kh13XOmtB6/d+X7DBa2RFDXu60qn
BhqeDpBxhU1Y6o+fT1zogeZPDmN8btDe8n1Gx2FnWsZPXCXhpTvmmTSu0090
phML8xLTW93RK1cRmBXrTH9LXxaf1eOOnM9ZdQ4sZ1qiaupV9hwPzPa0OV2l
5Uwz13NDbI090ORQpJb3xYkOabW5YVvqgRjs9QnSdqItrmeOtuR4wkYm6li1
ihMtfFL4+Od8TyhOez6RlXOiWy/r1n184ImPD7WUW4ScaFnBkHNFTZ4w1u4d
tezYTC/amkx9E/aCuKp9mnLqZlpfpOy1XLwX7kjJlA10ONLKPpU5ZpbesLOI
j/rX7Ei3vyjx+7XZGwMx7+Tn1TvSDz1EfhynvKH06vAh9YeOtPtk1Pdbcd64
uHvcJea4I/3Zc5+SfZ43Tnx7PfzH2JEeu77vyYppb8Td2qfIl+dA89xK69ib
54NFHz99WHjGgW60k9q565YP7vHrpK886kCvVVlnEFbqg5+sod/mOx1ovwtV
/RJ1Pgha4F11yMmBLrpT0vnolw/ct2l7z5vtQJ95lJImKkNBz7j3uFSgPV0U
f/RfkB+FB1fHlLy97OnX7xJ6HAMpaInwVZ53tKf73bdd0QqloNYi83MF7Ol4
la49X9kU5CKdrNQk7ekMwRXDLYkUZp+heU1f2tEiJ9pKNHMo7OF5deZAhR3d
Efz0cuYFCv+2fNB4cd+O/lU2MTWSS2FcbZSyzbWjC3Wjnx+/QeFHjXKZ2047
2nTWvg3BJRQahjO2Rqy1o0+sc3WMaKBg5ZordGeFHX3nt/I/s7cUnpfdufRL
yo4udgm8v6iJQmVy7Wsuvx1tYey24cwHCsF6vJ6zq2xp3k/XB7S7KPjyyxw6
fMuW/qb4PPJZNwXPtxtL5mXb0qbzD76z/UHBJjhygdRWW/qHp6Wu8U8KGidb
a9eusqUlHv4be/iHgjL1e+LefFs6275HetYUBQXleas38djSW2w6ZxtOU1hc
YbrfpMWGnp44KHBhJgtTfbf13A7b0AlJRcFDgiz8vv8ytD3OhnbVbFQcEGJh
YE/XaT9/G1rH+MHBLyIsfJZYOhquZ0P3ndklly/OwhOTAwV7Bq3pg2Xqtg2S
LHSuWaTOarWms1YY8F+WYmHm4ry7Bk+saQFdyzNRy1jQ76ksmcqypgu/vDXo
lGXB8429zof91nR12GvLVDkWtj/8XFYaZU0bFjyRVlZgoSR1ujLWzJqGV6aU
6SoWmmJTTZ3UrenpjmLdCkUSr8/SZ5pLrWlbbyspDSUWNDQ21f0csqKV6GDe
YRUW8pu2vg85a0WfWp6/rledhRflvO6WyVa0cueCwbmaLPRcPf5xFceKvtuR
Zie3joWV2+986bSwog15XP+paLFg4g//Kk0reuLSeovl2iz4Wdd3XZC2oosy
DNcKbmDhvEz/D+8RJi35UqyhdCMLj/l3ROh9YtLxpUpJuzex0DYkOCT1gklb
u0q91dEh+W49zZm4x6St5loV/SC8pFpxtPkck64T0Vc+osvChpv3ufcPMem/
8Yc1V+ux4JJhNnlyK5MeMPteW0w4dte7nTEUk45gLhvdoM/CiSB/Hkcmkz5n
Kl5wi3Ch/a896lpMOrCl6tcSAxZeb9rDN285k84+blETT/invFjywFwmzddX
r1BPWET4vGDdKIOWMr8oIgEWVEZVU298YdDnxmT3OhFmfioTPVTLoHsNahIP
EA55ZnUs6D553nGFYAHh5DsfFphfZNATTr1Szwlfzgo5tSKVQRf5tBY3E36y
948kL5dBe8W/bf1IuDMsObvDl0FrXqo98I7wTOfFMhXWDLr4xbuySsKyBpcv
nNvAoJMaF+/MJayvuF4hQZ5B859qfBJP2FOs+rKnCINubg3INCW8fcJhtc4f
S5rP3eg3L+Gsr19uSHZa0kLlvz6WkPWV1Eapjr+ypO9fkrVjEW4q+ne7qdSS
vph+wHaa5GskJ02zKNeSvjH670M6YfHkZcXH0y1pMe340YWE1aPzN7DjLenY
U//OHSH5jzB+obfWzpKmbepy/Ui9UlTcaGEdS9rxSu7MR6SeNxZ2G/WtsKRv
Lcsb4Sfc/Z3P4tqkBd3UaXdmN9HH7NcnXhzosqCfCzs43iD6WfFA3jrgtQV9
4u+qyy+IvnxTDB3kr1jQQ09EFL6vZ0FA7Oa7kOMWdMBo4q/fRJ+3T0q4Fe6y
oN85qbZNEP1O5wz6GLpa0LsWFc3+TvSdJ+/xNdnEgg5L2cV4pcaC1dWagAY1
C1rP0e/2jbUkP3fOhvsIWNDbXiv8sFjDgqGWwNDl3+b0+03J1fykX7ofxMQM
fDGnI+3mPX9M+kmrmrl95wNzei5PoJcw6bc3TX+Sz4Sa07sjlafWkX7d5rFF
6KuLOV10XjXuMuln2c8N6Uom5nRWTK+GiAzJV8+VjNKl5Pc7i7g0mQeCU065
7+vM6KmlzzNuL2DBeHlh+Xw1MzrJZo9cJS8LvXnLjD2WmtELxHh0T5P5dEzp
YM1FfjO6vlSlPoCHzB9Nqk79iykt88+K822Swg4zkQ+2x0zpwdzbytHDFO6F
howeHjGhb/oN+tS0UfD4+W7b288m9MCE8do5ZN7O3Gr4d0mdCR2Va1Gl30zB
LkGC93qeCb1HNtXm2BsKfUdqxJ45m9AzPkwffFlD5mex3BreUmOaXSKbevgm
hZ+uM/nyLhnTs78atP66RuHR5JePpmnGdKwxX5n9ZQpOhhdSDvgZ02kzR/wG
yP6SVCvTJyhiTN/YuV8mP51CT8fSG2J+RnTw7OgWRFIoEF28WkbYkLb9mmY1
bxWF+MJRHnoMdIl89C1dOQpmTk3NVAdoscsSTT7LKHzKOpl88T7ophKJrEPz
KcxbuaB7hS/o9wd+s7qmfdDFlbNxizCg05YJT6y74YPoN4sYMZW69H2jI4ar
x7yxbzIneWemLr39i9T8Uz+8kaGw6mlShC7t+11y8vcnbzyI1TY5vUSXVtnr
yT7wzBuzpFz1H7N16NtPI+nJTG+c9DutwS+/idbfUecIbW+UjkhJZe/Vptcs
oVR/BXthxuLlfVUmGvQxq7EFKws8cMdgeHzVmCz90uBIxLHVrnBYMf0sdc4M
GB1U95l02gz3g9+j00xmIq7cbtzOYjNY/Q1L0hNn4euvG+dubtqMqKJLYUcm
+XBvVWDiDpnNSDW1nHd8UBCcO0uDOD2O6NR4oVwbKg7PZkurjwmOkHZcyHnt
uBQcqen9zNsOkOM79NR+eCn+CSywu3fJASvvT0u9ObIM4eFLrVedcsAaqe7q
N3XSmHL/a6CS4ICcaK+5vZdk0bU/JveelQPyN6p5/VgmD5+HdTyNP+zx4vk7
ngExRSyuV/Pt17BHs0eC8DkfRfSea4mZoWiP7/0rl9jdVIT3o88icsvswSvO
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
yDlMKH+wjPzeq/cbJyRZWJtwXxVVFL5Ve0QslmDBLFto3Zc6Mtfm0ZJqC1jg
NBfry3+loLDdZ6R1LgvZUEqU7KYQ6l/kWC/AQs3Vs1Wi/RT49Zz/lc4h79u2
z2JqlEKR+WEmm8yjR5IODu8ESR/bb1aJJPNqtkf/lgNk3RVt+36eJfNvbRV1
dSfJ4/xvU0v/kPe4Kjf2ckhd/M23tDPIvLwx+SCSMmNhZPutdW8+ULDLTt62
0Z2FeXvvVUWR+ZvVJp/6I5EF82W7GMP3KVSZnqr/kkTmXtdz59J7FPpuCoo3
H2Zh+vkjh7g7FAwShjKqT7KwPPqORvN1Cp3S5efPXmPh8xY9M9WzFNZQ7vds
X7NwoZBKV99Nge448uGurC96UzJKawzI/qGqrHJ0hS8mmq40p+mQ/S3+yY4I
JV88alu33FabwlWxiWWr1/lCyHKNTQnR2RH4UTnmvjAwvTa6ZhkFKmf9t+QI
X2iev27vMeQDHvfWAa9HvlCeeVJ362Yf4LX8TH5XP3wrzLmh/MsL0Qsv/LXx
8oPQIS8bzy4vXHST/nPS1w+PBePn7W4h+0yHxE/5cD/Y55/zvVDuhZph4XaD
PX7IjApxtDnsBeaC8dK4fD8or1q4JYTsO84utdHfefyhyL3vzzUi+2hbzJea
a/74d8R+6dkwdwirTxX+7tyC6DtLY/PeOuON2QpJq94t+N1xXlaw2hmZnja7
SM/CWX8jN/qeM+SSzzNtJ7bg87MNpRYnnaH1yaTzqmgAFH7yMpe5OINKTV3o
uSkAqZWPW3Z8cMK9HmluZXoApi+PL+br3gz3i4Z66ZsCobkiQujwYkfcPnP0
Tq1BIH70SX34JuCI2Se/rBA0DcSxt7IbmVMOKDyQKLLfNhAHy88u1vriAMHw
ik/x/oEo7HFOTr/hgAfahnsC0gLxfXjuphAjByypw1O9jkC055wsTtxmj6ia
IzrbvweCr1+cd0u4PWrKP98q6QtE1lKVzc4se7ALd2dqjgVih7Gbn5+lPV6c
ooNXCwWh/jS/gNISe8ST0i7UCoKb4VjArsd2+DBmYN93MAjnoyLZv8TtYPPC
dX99WhAe8xoEbRWwQ2V2dGnh8SC0JbqsmM1jh+uGl5ZvOxuEwQzFuKuttog/
PHuY704Qfu+Zsd3yqC0kZeqOyTQH4fWx9OdMXlukDH2rmdkWhFcLdp/d8MsG
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
DPwHvBUFjg==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$671153#1"]& ]}}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Coinc. per 6 min\"", TraditionalForm], None}, {
            FormBox["\"Measurement Angle\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           Thickness[0.006], FontSize -> 12], FrameTicks -> {{{{-100, 
              FormBox["\"-100\"", TraditionalForm], 0.024}, {0, 
              FormBox["\"0\"", TraditionalForm], 0.024}, {100, 
              FormBox["\"100\"", TraditionalForm], 0.024}, {200, 
              FormBox["\"200\"", TraditionalForm], 0.024}, {300, 
              FormBox["\"300\"", TraditionalForm], 0.024}}, {{-100, "", 
              0.024}, {0, "", 0.024}, {100, "", 0.024}, {200, "", 0.024}, {
             300, "", 0.024}}}, {{{-45, "", 0.024}, {-30, "", 0.012}, {-15, 
              "", 0.012}, {0, 
              FormBox[
               RowBox[{"\"0\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {15, "", 0.012}, {30, "", 0.012}, {45, "", 0.024}, {
             60, "", 0.012}, {75, "", 0.012}, {90, 
              FormBox[
               RowBox[{"\"90\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {105, "", 0.012}, {120, "", 0.012}, {135, "", 0.024}, {
             150, "", 0.012}, {165, "", 0.012}, {180, 
              FormBox[
               RowBox[{"\"180\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {195, "", 0.012}, {210, "", 0.012}, {225, "", 0.024}, {
             240, "", 0.012}, {255, "", 0.012}, {270, 
              FormBox[
               RowBox[{"\"270\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {285, "", 0.012}, {300, "", 0.012}, {315, "", 0.024}, {
             330, "", 0.012}, {345, "", 0.012}, {360, 
              FormBox[
               RowBox[{"\"360\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}, {{-45, "", 0.024}, {-30, "", 0.012}, {-15, "", 
              0.012}, {0, "", 0.024}, {15, "", 0.012}, {30, "", 0.012}, {
             45, "", 0.024}, {60, "", 0.012}, {75, "", 0.012}, {
             90, "", 0.024}, {105, "", 0.012}, {120, "", 0.012}, {
             135, "", 0.024}, {150, "", 0.012}, {165, "", 0.012}, {
             180, "", 0.024}, {195, "", 0.012}, {210, "", 0.012}, {
             225, "", 0.024}, {240, "", 0.012}, {255, "", 0.012}, {
             270, "", 0.024}, {285, "", 0.012}, {300, "", 0.012}, {
             315, "", 0.024}, {330, "", 0.012}, {345, "", 0.012}, {
             360, "", 0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 260, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Before Cyc: 1-1\"", TraditionalForm], 
         PlotRange -> {{-14.4, 374.4}, {-40., 240.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox["\"\"", TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
     TagBox[
      GridBox[{{
         TemplateBox[{"\"HV Basis\""}, "SwatchLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    InsetBox[
                    Graphics3DBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    Specularity[
                    RGBColor[0, 0, 1], 30], 
                    SphereBox[{0, 0, 0}]}, Boxed -> False, Lighting -> 
                    "Neutral", PlotRange -> {{-1, 1}, {-1, 1}, {-1, 1}}, 
                    ViewPoint -> {0, 
                    DirectedInfinity[-1], 0}, BoxRatios -> {1, 1, 1}], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}], {0.5, 0.5}, {1, 1}]}, 
                    AspectRatio -> Full, PlotRangePadding -> None, 
                    ImagePadding -> 1, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 
                 TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                  "RGBColorSwatchTemplate"], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"SphereBubble\""}]}], 
             "]"}]& ), Editable -> True], 
         TemplateBox[{
           RowBox[{
             RowBox[{"\[PlusMinus]", "45"}], " ", "\[Degree]", " ", 
             "Basis"}]}, "SwatchLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    InsetBox[
                    Graphics3DBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    Specularity[
                    RGBColor[1, 0, 0], 30], 
                    SphereBox[{0, 0, 0}]}, Boxed -> False, Lighting -> 
                    "Neutral", PlotRange -> {{-1, 1}, {-1, 1}, {-1, 1}}, 
                    ViewPoint -> {0, 
                    DirectedInfinity[-1], 0}, BoxRatios -> {1, 1, 1}], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}], {0.5, 0.5}, {1, 1}]}, 
                    AspectRatio -> Full, PlotRangePadding -> None, 
                    ImagePadding -> 1, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 
                 TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                  "RGBColorSwatchTemplate"], "}"}], ",", 
               RowBox[{"{", 
                 TagBox[#, HoldForm], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"SphereBubble\""}]}], 
             "]"}]& ), Editable -> True]}, {
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "96", "\"\[PlusMinus]4\""}, {
             "v", "0.9`2.", "\"\[PlusMinus]0.03\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False], 
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "94", "\"\[PlusMinus]4\""}, {
             "v", "0.43`2.", "\"\[PlusMinus]0.05\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}, {
         StyleBox[
          TagBox[
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "97", "\"\[PlusMinus]3\""}, {
             "v", "0.898`3.", "\"\[PlusMinus]0.015\""}, {
             "\[Theta]", "86.5`3.", "\"\[PlusMinus]0.9\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False], 
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "96", "\"\[PlusMinus]3\""}, {
             "v", "0.44`2.", "\"\[PlusMinus]0.04\""}, {"\[Theta]", 
              RowBox[{"-", "53"}], "\"\[PlusMinus]3\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]}, 
    "RowWithSeparators"], 
   TemplateBox[{"   ", "\"   \"", 
     TemplateBox[{
       GraphicsBox[{{{{{{Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{0., 27.25543735346197}, {0., 33.}}], 
               LineBox[{{0., 33.}, {0., 38.74456264653803}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{117., 201.30306154330094`}, {117., 216.}}], 
               LineBox[{{117., 216.}, {117., 230.69693845669906`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{135., 132.}, {135., 144.}}], 
               LineBox[{{135., 144.}, {135., 156.}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{162., 39.217670016874735`}, {162., 46.}}], 
               LineBox[{{162., 46.}, {162., 52.782329983125265`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{180., 16.41742430504416}, {180., 21.}}], 
               LineBox[{{180., 21.}, {180., 25.58257569495584}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{207., 59.75378874876468}, {207., 68.}}], 
               LineBox[{{207., 68.}, {207., 76.24621125123532}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{225., 120.51087470692394`}, {225., 132.}}], 
               LineBox[{{225., 132.}, {225., 143.48912529307606`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{252., 236.12549213361245`}, {252., 252.}}], 
               LineBox[{{252., 252.}, {252., 267.87450786638755`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{270., 287.53575080342705`}, {270., 305.}}], 
               LineBox[{{270., 305.}, {270., 322.46424919657295`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{27., 82.40833695337456}, {27., 92.}}], 
               LineBox[{{27., 92.}, {27., 101.59166304662544`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{297., 189.7171431429143}, {297., 204.}}], 
               LineBox[{{297., 204.}, {297., 218.2828568570857}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{315., 140.630683123147}, {315., 153.}}], 
               LineBox[{{315., 153.}, {315., 165.369316876853}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{342., 38.29179606750063}, {342., 45.}}], 
               LineBox[{{342., 45.}, {342., 51.70820393249937}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{360., 22.70849737787082}, {360., 28.}}], 
               LineBox[{{360., 28.}, {360., 33.29150262212918}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{45., 149.27207793864216`}, {45., 162.}}], 
               LineBox[{{45., 162.}, {45., 174.72792206135784`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{72., 250.6598653616318}, {72., 267.}}], 
               LineBox[{{72., 267.}, {72., 283.34013463836817`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{90., 252.59878053314327`}, {90., 269.}}], 
               LineBox[{{90., 269.}, {90., 285.40121946685673`}}]}}}, {{
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{0., 123.38104996137776`}, {0., 135.}}], 
               LineBox[{{0., 135.}, {0., 146.61895003862224`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{117., 194.54316770519904`}, {117., 209.}}], 
               LineBox[{{117., 209.}, {117., 223.45683229480096`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{135., 199.3712611616722}, {135., 214.}}], 
               LineBox[{{135., 214.}, {135., 228.6287388383278}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{162., 165.62091183974036`}, {162., 179.}}], 
               LineBox[{{162., 179.}, {162., 192.37908816025964`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{180., 110.}, {180., 121.}}], 
               LineBox[{{180., 121.}, {180., 132.}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{207., 60.69337613708193}, {207., 69.}}], 
               LineBox[{{207., 69.}, {207., 77.30662386291807}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{225., 63.51471862576143}, {225., 72.}}], 
               LineBox[{{225., 72.}, {225., 80.48528137423857}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{252., 106.18334617360803`}, {252., 117.}}], 
               LineBox[{{252., 117.}, {252., 127.81665382639197`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{270., 149.27207793864216`}, {270., 162.}}], 
               LineBox[{{270., 162.}, {270., 174.72792206135784`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{27., 79.5660188679434}, {27., 89.}}], 
               LineBox[{{27., 89.}, {27., 98.4339811320566}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{297., 208.06681547693194`}, {297., 223.}}], 
               LineBox[{{297., 223.}, {297., 237.93318452306806`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{315., 225.47582530373998`}, {315., 241.}}], 
               LineBox[{{315., 241.}, {315., 256.52417469626005`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{342., 200.33712170138483`}, {342., 215.}}], 
               LineBox[{{342., 215.}, {342., 229.66287829861517`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{360., 135.83447493940355`}, {360., 148.}}], 
               LineBox[{{360., 148.}, {360., 160.16552506059645`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{45., 57.87596159536404}, {45., 66.}}], 
               LineBox[{{45., 66.}, {45., 74.12403840463597}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{72., 93.80196097281443}, {72., 104.}}], 
               LineBox[{{72., 104.}, {72., 114.19803902718557`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{90., 172.36181830301413`}, {90., 186.}}], 
               LineBox[{{90., 186.}, {90., 199.63818169698587`}}]}}}}, {{{
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 38.74456264653803}, 
                  Offset[{3, 0}, {0., 38.74456264653803}]}, {{0., 
                  38.74456264653803}, 
                  Offset[{-3, 0}, {0., 38.74456264653803}]}, {{0., 
                  27.25543735346197}, 
                  Offset[{3, 0}, {0., 27.25543735346197}]}, {{0., 
                  27.25543735346197}, 
                  Offset[{-3, 0}, {0., 27.25543735346197}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 230.69693845669906`}, 
                  Offset[{3, 0}, {117., 230.69693845669906`}]}, {{117., 
                  230.69693845669906`}, 
                  Offset[{-3, 0}, {117., 230.69693845669906`}]}, {{117., 
                  201.30306154330094`}, 
                  Offset[{3, 0}, {117., 201.30306154330094`}]}, {{117., 
                  201.30306154330094`}, 
                  Offset[{-3, 0}, {117., 201.30306154330094`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 156.}, 
                  Offset[{3, 0}, {135., 156.}]}, {{135., 156.}, 
                  Offset[{-3, 0}, {135., 156.}]}, {{135., 132.}, 
                  Offset[{3, 0}, {135., 132.}]}, {{135., 132.}, 
                  Offset[{-3, 0}, {135., 132.}]}}], {{{1., 0.}, {0., 1.}}, {
                0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 52.782329983125265`}, 
                  Offset[{3, 0}, {162., 52.782329983125265`}]}, {{162., 
                  52.782329983125265`}, 
                  Offset[{-3, 0}, {162., 52.782329983125265`}]}, {{162., 
                  39.217670016874735`}, 
                  Offset[{3, 0}, {162., 39.217670016874735`}]}, {{162., 
                  39.217670016874735`}, 
                  Offset[{-3, 0}, {162., 39.217670016874735`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 25.58257569495584}, 
                  Offset[{3, 0}, {180., 25.58257569495584}]}, {{180., 
                  25.58257569495584}, 
                  Offset[{-3, 0}, {180., 25.58257569495584}]}, {{180., 
                  16.41742430504416}, 
                  Offset[{3, 0}, {180., 16.41742430504416}]}, {{180., 
                  16.41742430504416}, 
                  Offset[{-3, 0}, {180., 16.41742430504416}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 76.24621125123532}, 
                  Offset[{3, 0}, {207., 76.24621125123532}]}, {{207., 
                  76.24621125123532}, 
                  Offset[{-3, 0}, {207., 76.24621125123532}]}, {{207., 
                  59.75378874876468}, 
                  Offset[{3, 0}, {207., 59.75378874876468}]}, {{207., 
                  59.75378874876468}, 
                  Offset[{-3, 0}, {207., 59.75378874876468}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 143.48912529307606`}, 
                  Offset[{3, 0}, {225., 143.48912529307606`}]}, {{225., 
                  143.48912529307606`}, 
                  Offset[{-3, 0}, {225., 143.48912529307606`}]}, {{225., 
                  120.51087470692394`}, 
                  Offset[{3, 0}, {225., 120.51087470692394`}]}, {{225., 
                  120.51087470692394`}, 
                  Offset[{-3, 0}, {225., 120.51087470692394`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 267.87450786638755`}, 
                  Offset[{3, 0}, {252., 267.87450786638755`}]}, {{252., 
                  267.87450786638755`}, 
                  Offset[{-3, 0}, {252., 267.87450786638755`}]}, {{252., 
                  236.12549213361245`}, 
                  Offset[{3, 0}, {252., 236.12549213361245`}]}, {{252., 
                  236.12549213361245`}, 
                  Offset[{-3, 0}, {252., 236.12549213361245`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 322.46424919657295`}, 
                  Offset[{3, 0}, {270., 322.46424919657295`}]}, {{270., 
                  322.46424919657295`}, 
                  Offset[{-3, 0}, {270., 322.46424919657295`}]}, {{270., 
                  287.53575080342705`}, 
                  Offset[{3, 0}, {270., 287.53575080342705`}]}, {{270., 
                  287.53575080342705`}, 
                  Offset[{-3, 0}, {270., 287.53575080342705`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 101.59166304662544`}, 
                  Offset[{3, 0}, {27., 101.59166304662544`}]}, {{27., 
                  101.59166304662544`}, 
                  Offset[{-3, 0}, {27., 101.59166304662544`}]}, {{27., 
                  82.40833695337456}, 
                  Offset[{3, 0}, {27., 82.40833695337456}]}, {{27., 
                  82.40833695337456}, 
                  Offset[{-3, 0}, {27., 82.40833695337456}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 218.2828568570857}, 
                  Offset[{3, 0}, {297., 218.2828568570857}]}, {{297., 
                  218.2828568570857}, 
                  Offset[{-3, 0}, {297., 218.2828568570857}]}, {{297., 
                  189.7171431429143}, 
                  Offset[{3, 0}, {297., 189.7171431429143}]}, {{297., 
                  189.7171431429143}, 
                  Offset[{-3, 0}, {297., 189.7171431429143}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 165.369316876853}, 
                  Offset[{3, 0}, {315., 165.369316876853}]}, {{315., 
                  165.369316876853}, 
                  Offset[{-3, 0}, {315., 165.369316876853}]}, {{315., 
                  140.630683123147}, 
                  Offset[{3, 0}, {315., 140.630683123147}]}, {{315., 
                  140.630683123147}, 
                  Offset[{-3, 0}, {315., 140.630683123147}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 51.70820393249937}, 
                  Offset[{3, 0}, {342., 51.70820393249937}]}, {{342., 
                  51.70820393249937}, 
                  Offset[{-3, 0}, {342., 51.70820393249937}]}, {{342., 
                  38.29179606750063}, 
                  Offset[{3, 0}, {342., 38.29179606750063}]}, {{342., 
                  38.29179606750063}, 
                  Offset[{-3, 0}, {342., 38.29179606750063}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 33.29150262212918}, 
                  Offset[{3, 0}, {360., 33.29150262212918}]}, {{360., 
                  33.29150262212918}, 
                  Offset[{-3, 0}, {360., 33.29150262212918}]}, {{360., 
                  22.70849737787082}, 
                  Offset[{3, 0}, {360., 22.70849737787082}]}, {{360., 
                  22.70849737787082}, 
                  Offset[{-3, 0}, {360., 22.70849737787082}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 174.72792206135784`}, 
                  Offset[{3, 0}, {45., 174.72792206135784`}]}, {{45., 
                  174.72792206135784`}, 
                  Offset[{-3, 0}, {45., 174.72792206135784`}]}, {{45., 
                  149.27207793864216`}, 
                  Offset[{3, 0}, {45., 149.27207793864216`}]}, {{45., 
                  149.27207793864216`}, 
                  Offset[{-3, 0}, {45., 149.27207793864216`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 283.34013463836817`}, 
                  Offset[{3, 0}, {72., 283.34013463836817`}]}, {{72., 
                  283.34013463836817`}, 
                  Offset[{-3, 0}, {72., 283.34013463836817`}]}, {{72., 
                  250.6598653616318}, 
                  Offset[{3, 0}, {72., 250.6598653616318}]}, {{72., 
                  250.6598653616318}, 
                  Offset[{-3, 0}, {72., 250.6598653616318}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 285.40121946685673`}, 
                  Offset[{3, 0}, {90., 285.40121946685673`}]}, {{90., 
                  285.40121946685673`}, 
                  Offset[{-3, 0}, {90., 285.40121946685673`}]}, {{90., 
                  252.59878053314327`}, 
                  Offset[{3, 0}, {90., 252.59878053314327`}]}, {{90., 
                  252.59878053314327`}, 
                  Offset[{-3, 0}, {90., 252.59878053314327`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}}, {{Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 146.61895003862224`}, 
                  Offset[{3, 0}, {0., 146.61895003862224`}]}, {{0., 
                  146.61895003862224`}, 
                  Offset[{-3, 0}, {0., 146.61895003862224`}]}, {{0., 
                  123.38104996137776`}, 
                  Offset[{3, 0}, {0., 123.38104996137776`}]}, {{0., 
                  123.38104996137776`}, 
                  Offset[{-3, 0}, {0., 123.38104996137776`}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 223.45683229480096`}, 
                  Offset[{3, 0}, {117., 223.45683229480096`}]}, {{117., 
                  223.45683229480096`}, 
                  Offset[{-3, 0}, {117., 223.45683229480096`}]}, {{117., 
                  194.54316770519904`}, 
                  Offset[{3, 0}, {117., 194.54316770519904`}]}, {{117., 
                  194.54316770519904`}, 
                  Offset[{-3, 0}, {117., 194.54316770519904`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 228.6287388383278}, 
                  Offset[{3, 0}, {135., 228.6287388383278}]}, {{135., 
                  228.6287388383278}, 
                  Offset[{-3, 0}, {135., 228.6287388383278}]}, {{135., 
                  199.3712611616722}, 
                  Offset[{3, 0}, {135., 199.3712611616722}]}, {{135., 
                  199.3712611616722}, 
                  Offset[{-3, 0}, {135., 199.3712611616722}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 192.37908816025964`}, 
                  Offset[{3, 0}, {162., 192.37908816025964`}]}, {{162., 
                  192.37908816025964`}, 
                  Offset[{-3, 0}, {162., 192.37908816025964`}]}, {{162., 
                  165.62091183974036`}, 
                  Offset[{3, 0}, {162., 165.62091183974036`}]}, {{162., 
                  165.62091183974036`}, 
                  Offset[{-3, 0}, {162., 165.62091183974036`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 132.}, 
                  Offset[{3, 0}, {180., 132.}]}, {{180., 132.}, 
                  Offset[{-3, 0}, {180., 132.}]}, {{180., 110.}, 
                  Offset[{3, 0}, {180., 110.}]}, {{180., 110.}, 
                  Offset[{-3, 0}, {180., 110.}]}}], {{{1., 0.}, {0., 1.}}, {
                0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 77.30662386291807}, 
                  Offset[{3, 0}, {207., 77.30662386291807}]}, {{207., 
                  77.30662386291807}, 
                  Offset[{-3, 0}, {207., 77.30662386291807}]}, {{207., 
                  60.69337613708193}, 
                  Offset[{3, 0}, {207., 60.69337613708193}]}, {{207., 
                  60.69337613708193}, 
                  Offset[{-3, 0}, {207., 60.69337613708193}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 80.48528137423857}, 
                  Offset[{3, 0}, {225., 80.48528137423857}]}, {{225., 
                  80.48528137423857}, 
                  Offset[{-3, 0}, {225., 80.48528137423857}]}, {{225., 
                  63.51471862576143}, 
                  Offset[{3, 0}, {225., 63.51471862576143}]}, {{225., 
                  63.51471862576143}, 
                  Offset[{-3, 0}, {225., 63.51471862576143}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 127.81665382639197`}, 
                  Offset[{3, 0}, {252., 127.81665382639197`}]}, {{252., 
                  127.81665382639197`}, 
                  Offset[{-3, 0}, {252., 127.81665382639197`}]}, {{252., 
                  106.18334617360803`}, 
                  Offset[{3, 0}, {252., 106.18334617360803`}]}, {{252., 
                  106.18334617360803`}, 
                  Offset[{-3, 0}, {252., 106.18334617360803`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 174.72792206135784`}, 
                  Offset[{3, 0}, {270., 174.72792206135784`}]}, {{270., 
                  174.72792206135784`}, 
                  Offset[{-3, 0}, {270., 174.72792206135784`}]}, {{270., 
                  149.27207793864216`}, 
                  Offset[{3, 0}, {270., 149.27207793864216`}]}, {{270., 
                  149.27207793864216`}, 
                  Offset[{-3, 0}, {270., 149.27207793864216`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 98.4339811320566}, 
                  Offset[{3, 0}, {27., 98.4339811320566}]}, {{27., 
                  98.4339811320566}, 
                  Offset[{-3, 0}, {27., 98.4339811320566}]}, {{27., 
                  79.5660188679434}, 
                  Offset[{3, 0}, {27., 79.5660188679434}]}, {{27., 
                  79.5660188679434}, 
                  Offset[{-3, 0}, {27., 79.5660188679434}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 237.93318452306806`}, 
                  Offset[{3, 0}, {297., 237.93318452306806`}]}, {{297., 
                  237.93318452306806`}, 
                  Offset[{-3, 0}, {297., 237.93318452306806`}]}, {{297., 
                  208.06681547693194`}, 
                  Offset[{3, 0}, {297., 208.06681547693194`}]}, {{297., 
                  208.06681547693194`}, 
                  Offset[{-3, 0}, {297., 208.06681547693194`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 256.52417469626005`}, 
                  Offset[{3, 0}, {315., 256.52417469626005`}]}, {{315., 
                  256.52417469626005`}, 
                  Offset[{-3, 0}, {315., 256.52417469626005`}]}, {{315., 
                  225.47582530373998`}, 
                  Offset[{3, 0}, {315., 225.47582530373998`}]}, {{315., 
                  225.47582530373998`}, 
                  Offset[{-3, 0}, {315., 225.47582530373998`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 229.66287829861517`}, 
                  Offset[{3, 0}, {342., 229.66287829861517`}]}, {{342., 
                  229.66287829861517`}, 
                  Offset[{-3, 0}, {342., 229.66287829861517`}]}, {{342., 
                  200.33712170138483`}, 
                  Offset[{3, 0}, {342., 200.33712170138483`}]}, {{342., 
                  200.33712170138483`}, 
                  Offset[{-3, 0}, {342., 200.33712170138483`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 160.16552506059645`}, 
                  Offset[{3, 0}, {360., 160.16552506059645`}]}, {{360., 
                  160.16552506059645`}, 
                  Offset[{-3, 0}, {360., 160.16552506059645`}]}, {{360., 
                  135.83447493940355`}, 
                  Offset[{3, 0}, {360., 135.83447493940355`}]}, {{360., 
                  135.83447493940355`}, 
                  Offset[{-3, 0}, {360., 135.83447493940355`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 74.12403840463597}, 
                  Offset[{3, 0}, {45., 74.12403840463597}]}, {{45., 
                  74.12403840463597}, 
                  Offset[{-3, 0}, {45., 74.12403840463597}]}, {{45., 
                  57.87596159536404}, 
                  Offset[{3, 0}, {45., 57.87596159536404}]}, {{45., 
                  57.87596159536404}, 
                  Offset[{-3, 0}, {45., 57.87596159536404}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 114.19803902718557`}, 
                  Offset[{3, 0}, {72., 114.19803902718557`}]}, {{72., 
                  114.19803902718557`}, 
                  Offset[{-3, 0}, {72., 114.19803902718557`}]}, {{72., 
                  93.80196097281443}, 
                  Offset[{3, 0}, {72., 93.80196097281443}]}, {{72., 
                  93.80196097281443}, 
                  Offset[{-3, 0}, {72., 93.80196097281443}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 199.63818169698587`}, 
                  Offset[{3, 0}, {90., 199.63818169698587`}]}, {{90., 
                  199.63818169698587`}, 
                  Offset[{-3, 0}, {90., 199.63818169698587`}]}, {{90., 
                  172.36181830301413`}, 
                  Offset[{3, 0}, {90., 172.36181830301413`}]}, {{90., 
                  172.36181830301413`}, 
                  Offset[{-3, 0}, {90., 172.36181830301413`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}}}}, {{{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 33.}}, {{117., 
              216.}}, {{135., 144.}}, {{162., 46.}}, {{180., 21.}}, {{207., 
              68.}}, {{225., 132.}}, {{252., 252.}}, {{270., 305.}}, {{27., 
              92.}}, {{297., 204.}}, {{315., 153.}}, {{342., 45.}}, {{360., 
              28.}}, {{45., 162.}}, {{72., 267.}}, {{90., 269.}}}]}, {
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 135.}}, {{117., 
              209.}}, {{135., 214.}}, {{162., 179.}}, {{180., 121.}}, {{207., 
              69.}}, {{225., 72.}}, {{252., 117.}}, {{270., 162.}}, {{27., 
              89.}}, {{297., 223.}}, {{315., 241.}}, {{342., 215.}}, {{360., 
              148.}}, {{45., 66.}}, {{72., 104.}}, {{90., 
              186.}}}]}}}, {{}, {}}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag$672451#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1:eJwVWnlcTO8brahv0k6UVChJaJO0yWnflO6079OimplbqRk1LSJLQipaEKEo
IVGRSnJtISlL0iJClCQkKpLf/f01n/O5M+993+c5z/Oc835mcXA0Y5OQgIDA
6hkCAv//DOOufvHvnxeV98XFq8E4AKssP/pr//Kijr2fe/KYWwDGZI9+DBj2
okKlUo7uiQrAzqrp8RudXlTXc+7HXcUBOPX94YLkSi+qeco2XWp2ILqjmcyJ
YC+q4rb1a6PXgXAmD3z+ds+Tunc0QevOPSbWbhoQfLffg1ocEHeIlxSMSkWV
GyPvXKng1/eahBaHwcUucfO/TlcqJvHPUQGtMIzwXqhKt7lShcX90ePGYdBs
3b9P97orZT4wj2pzC0Px9glPXo4rJZH50VgjPQy5H56OTlq6Uvq+r6RDvoQh
/tIuDeESBiUWpq/mWRmOea/e9MgdY1DvpH4vsLkRjiuiJlnqBxnU1YaVc1c8
DMe3oO8/bbcyqBBxZlVHXzgi5gbc2efOoF40/lpcJRUBn4S1AdIiDOqP1mnt
ME4E1lkO5SiGE5Tl/OkIzQUs1JeNawb4E1R61dzViWosGEgK3z7lSlBj3JPN
N7RY0OlS+bYUBFV9z2jeIksWlkS7b9BRIKgeqkBmI4cFkWPUTOtHLtSW4RVx
NnUsPBnN3xKl7UKNc1PalB3Z2OB1RrxyqQuV/G+W4z1XNh7eqDz9Q9GFal6m
FOLvx8bt9JanfFEXKskkaHlwJBusdTP9RO5spGZ9+urZkMmGXl53i/ayjZRd
8Nt3Ja1s3LPaU7HjqxN1Knkgd9CCg/5V83SDup2oPovlrLUOHAjNL6lef8+J
mkXdNuASHJh9ul07VeBEqWRpbasM5KD2wPTtOBsnSupN8DzbJA7KO7a8ZBdu
oNinlXkPKzhovjnTxz59A/VK+mhn3xUOPpXlvFrG3UDtXbDBub+eA/Wkyrf9
dhuoh7laRpeaODil8uVzwJgjJXNB55xrLwe5EaECro6OlIheZWiLCIkq4scO
XQNH6tv2VQtOzibx1HiHsPRiR8rfc6GavzQJSYlTYo9/OVDFewzEjymQSK/s
mWtb7EDd09k+X2kFidIC9uGlBxyoVcUJ3vbaJO7tnFSYyXegzgrbFTNXkxDy
mK9yy8mBWtYypuZiQiLpN2O5yaQ9Vfdsn4CeA4mC928vKPTbU+tsP+296kSi
tmWz1kSrPRVwfeClKkFi7ETm6qtn7KlkZ7kzlCcJ2XSlmpwse+r0tr45X31I
6MaUG8Ym2lOzxnauEA0gEWXZvE7bxZ5Kc9u39ncIiYyV3pSEiT3VPDSl/DyM
xAW5QYvhpfZUm354bj6LxOCAsN25P3ZUsaGlTG8UieAMc4bqWTvqdoxBTTif
xCyZiy/YOXZU9xBjLDqRxOU8ee+qbXaUkW164KZkEtMnvgaae9lRiyv2VMzf
TqJE1fd9upUdFSLisr89lcSGsqawJzp2VNHQqj0pO+nzVhZGBs6yo36EXm47
mkbC3GDW99KftpRORsy82en0fup5vJG3ttRXMnUzay+JrPV942tabanTo7Y9
V/aRMLjrmLS13pY6O+zi9mU/iV67a9N3S22pLtkNXbIHSOx6vGSHeI4tNTVL
ImJpJolnHZPpxzi2lOa1dwUy2SQSfDeJv/e0pYSTGCafabyo70mWppUtFaRn
9rryIIn7oaZzYnVsKQHfVTs2HaLj+elsft1CW8qB92ipSA4Juag5CwRn2VIt
goP3c2jcMJpSaPfThko6EBcumUsiJH5oUfZbG+rSucwZcTQWm3I/8/KxDfV2
lHOsmcaV228tU6m3oeRkorTE80h4Ca+6EFZqQ8nXyTcY0/jf3iNaFYdsKP+L
c6w8aFwqObPqZ4oNVdGo2RRAY6ec6DXrODbUgRYnCzcaj83vqd3laUM538uu
NaDx8eM2pi2WNtRkyYrlIjS2XFx1c46ODdWZkJh7m37/UImSpe9CG6rN++9v
Do0Pae5tKha1oTZxvPyFaGx0acx+aMyaynrj2rCbPl/fauZj3bfWlO73Hvlf
dDz21D5ySXhsTYW9F+C50lhr3dp2qs6a4v371VpIx+/FrWJP0VJrateheSte
0PFNtpHs2XjImlr4uWfvZBYJ1UcJAYdTrCkHj4FhMRo3b/zw9jWbft/Cv+6z
6HzFtLtsUve0plJThO+PZZCQ924YjLS0powrxS0e0/m+2buMvKptTUV0Wzw8
RPMhLDjn65SiNaUnPhVgTfPlCof9a/+YFVXv/udmDM0v328vEp73WVH/RAqz
P++i63GL+d8Fj62oe5/4iQyajy4p8jPPl1hRqVcXlQ5sIzEutGvP94NWlEV7
2IhcCokTe76KGaVYUR07e/x0ab4PZzfJPPCwoqYMW+u16frIkdPLk7K0orQ3
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
79VyXbHAKPe1zWgkKnqHIjWyXeFj1LrO7b8o/P30V/dxsyu6jCymonSj8E/M
NUza1g2DddJuVQZRePRjw4V1nm6YMHpz4adJFIb2Pl6UFe4GeeNk32SbKNjb
zpM+ke4GL+Oa+r2+UTA5WyMT0eKGl8aaCWd2R6HnatiaDB93vDCR/dXVFQWx
VaauQtkeEMo7J3HndRTKliqcFT/tAZ0RLC1/H4WJhUc09Wo8kHEq2i3lSxRY
ajY6ra88YCH8uGqJYDS2BXYa2azwxOXWPdEcjWiwer0b5R57IiPo7+BUXDS2
bj3EV1P1RrHl2Bcpsc1IfCISMi3lBx6pu7FOfDNiWElfLmr6wSYv6nKw1GbI
O27Xi7H2w+ePg7FX527GkdXb/+km+UF/X++4j8pmzNv3ZUn+gB/uPWkSLNXf
jIWRr39W3/HHoP9ROdPAzTjxss3q6J5AaPPN1kVc2QyT/hMGi44Egf/k9G6+
awwkyyo608Q3ofhlp9Ogewwqo9wKGxU24dFriXleXjHIboo5+119E5S/xJeu
9Y9BioWbpr35JtydteH+r7AYPLNLwfUtmyBtOSa6JTEGB+1ck/N7N+HcVauM
mKIY3JwxsyO1LAzPGhLc3p6OAefetqoftH6dulOxkCiNwQXOh27/W2FweSZ/
UedCDAyVd1cv6A7Dr5Hhx1+vxIC89HGG/uxwWGjkSUU9iMHsRd7EU044ugs+
HGJ/jYGwpm60onoE1itn6EiN0r+35hgz9SJwpkivtXosBr3FhjVHzCIQVbZt
1t/JGCQ4qrn3e0RAsEZhe9bMWGg89XJ6nxZBfzpFXlGIhc+Dbg6rPwJx/9XY
TlvGYmfEyL6PuSz07PP7UGwTi5b0W3+iT7IAyRk7be1jobf3kuDQORbE5Fwa
s51joRNxMeZSIwuFS4b0Vb1jUeboxdk6wMLddcpL7KJisXh42XZZAzZkeWlT
B4/EYvsWnncmrXtEQmUSZx2LhXUqVzeG9iu/XY+Pby+MRai3h58VrXverq4a
jS6OxfSr5OjrH2hd96N30Kk8FtevPB0dmsHBRu6aF7OoWBzPXythSesYixCK
kXo7FqwYp0A1Kw4MXB2fTNyNhcCFPrWfDhworw56NPAwFinz+zpCveg5PJpx
695z+vfpz7hJsRxkxPZfTB2Ixenp8o+JpznYHhy9YvJTLNwnX5Q4naP9GON3
2ebhWLiJJ8pLXeLAV0/6TOD3WJBVRcP+9bQOGjUpWPeH3t+a8+qaT+j3vWua
f/VvLPK7BD1jXnAg+4zIWynARb2RxEBpNwe/K8OzFYW5UBJvn37Vz8HDmJy0
SUkuBkoOCPAmOGgIUp4ZI8PF/cXCi1f95eAycS51cA4Xfq333NsF6TmiezP5
pTwXid++dQ6L0XP0+1Ds1SVcfByY5WlNz2mRGIvAGAMu1O2frThgQmJNr1mV
khEXAvt0GqLXkwi1NxFuNuFCVSzooik9V28v1r+wxJyL3QfSsvNoP77t2dLx
545c3PmTz7fwIlFhtsRhuzMX2ec+rYz3JfH6vHLhSoKLmwJ5M/IDSJjunG+5
24MLtonb1MFQEhOrZ2UZBHHx6W596A56Ti47JfzuXQgXJU/vcP+Lpf29uNCa
rDAuzuR3x8bxSFzp/909wOGCNevyCll6jr53GV+VG8XFRt3lPWZJJGRv/NiO
GC6KFi4Nc99KIiZvWP1oHBf8ZsOp9akkTgl+SrBO4EK2O296Dj1nn0R+aPme
xEWlj8Cjp7tI/Ot6q3IihYvUM/n+CWkktGxexzqkcjFytKxKLJ2ea1Xd937t
5KLv0rWm3XtJZCi/lD+dxsXWn3H5Q/tIDP1qa/yzn4vwpGa/mAMkFEJaZMoy
uYhQuuGUk0nCru1BqNtBLmbcXPj1RBaJeJN71wRyubTfzDXLzSZRevaW2MV8
LuqKhIy5//9/1JxGf++jNJ6/5Y3JIVpnbK+/LHycCz2BVatGaKw/XDOj6gQX
7V+OL96XQ+sCr2qPgCIuyi1Z16X+/3+tu5fOiZ3hYqVhxGQKjW/rlE/VlHJx
/WVR90safz9etjHkHBdDIi4BC/JILJpVUixVzoXartc7bWi8cUvRz+sVXEwO
Djn8/z4u5W2hXUQlF//OW1X70viiU8GxuVe4MFn4pcGKxq/q8keoGi6UOfMj
5tN4tnqOeWQdFzLFGlef//9+8FBWrkIDF4dLr51J+P/92/T+gXuNXHqOHlg7
i8ZH2enGsbe4yPlyOmoHfZ4HHbsOKN/l4oC+huMH+rwTFql9zU1ceDjxW3Vp
vOzS1tXxD7lIs1P7HU7Hy0MxMU21hYuoGSNte+h47t4T19XWysUKtYfEQTre
V37Erkx+yoW1XE/qLjof7wOjt2m0c/FZICk4iM6XbAvnWXsHF9Qj3V/LaN1l
bhixNLWLCy2p+vWddH43nwnlr3rFhfscAYtYOv9tyf7KaW+5sKCitobQfGny
iZxY2s+FdpNKxW2aT42GW5/d+0jXj8epWHGabxVjx9OEh+n4Ko3dC9xG5/tZ
ObNkhItDG8r9WDRfCy83GFt/5+LVh7/5/jSfM8hXI7t+0fHz0BEViad1pMPw
A7VJOn82m+zq6XpI0pgqvvuHi2qqx8ybrhd2v6LnTEEedD6sDPGMpPnm53tz
52we+m3rVN2DScCYc1RVkof3HnMuBQaSWCufxL0jzUPG7ixld1rnqrcXLJsx
j4fvzmZ3BTxovm3oztqxiAfnjfuHfWkdPbV8iLVElYdXuq3ejVYkfvz32/L2
Uh62N7L6Z5uTeHdHYUJwBQ8bjAtjImidTpl4M1PX0O8/E+iusZxErQLLeLEh
D8WLD+f1q5G4NM6fe8uYhxyJvLUZi0icqD7yQAA87G4KbyqkfUXyik6d7Q48
XOCfU3k0k9atip6C2wJ50OPmP/OkfZPOZFiPcjAPimtzv7bS/VPjZdzVxlAe
NK5CXo/ur/I5+axpFg/m0eI3Gu5y8Eus4+lWHg/Wcw9d7i+nfe9vt+LkvTxM
ZxMX9iVw6Dlp7/d1Pw/Cg/7u67gc3MxaNy84k4cVE+k+b0gOWtTU99nm8DAQ
Nl7yPZCDj87jMbKFPCzWUMl3seZgwemj5mWXebB4nDQgJMFBquPrvucvebia
2/fycDYbovnPCmy6edjmIGaxMZ2NzL4mt7pXPPwl9zSOb2OjYMulByfe8sBy
mFy5MJqNKye3X2Z95iH2usGxKxvYGPyxZPu/aR4WbsoY1RVmw+V4uMoK9S3I
TU85/4LDgmzI44pnGlsgfiWs9heThfblq80SV2zBScL5tqgHC57Xpv0e6mzB
fp6bpgBYCHiWVxBusgWpwZ9+mM1hIVL0rtwZly2If+OlKHstAvt4i8SVkrZA
Prst5vZYOO5u6JqQfLIFB+Qm51g5h+HHorBH56PiIBGpt2Tdl2CYhrcFa4jF
Q3BH26eGJYHITj+h9Ug8HorvRYr2iwTiw7nI35FS8ajOTd0WPhSAzOHZh6rn
xqP2g0KpbVUA+mLsbpmpxKPsj7PZZYsA7Eq+peKuHw8tXwsvzzB/tBysfpUa
EI+/PxfOPV7vi0XVO8rUguJxW0Fw085TvtjSTvDuh8QjVOW+8bY0X9qvfJst
wYpH/SIPj6sMX2w+vtLkCDce8+KVIhcP+2Du2ZKjFenxuB6zLnm5qg98Gw57
9FTFwyrVUzD2tBfMHByFiKvxqHCx2fL6gBeWdE5fbLoWj62n9uQE873ofGwS
rmqIx44ygZgqJy/ErdC/kt4UjxlBr+dsmfTEoYInMgbd8ah5bbmjzN0TD/iz
HmcL8nHq6EDss8UeKBe5wReZycfW3Xla26Q8kJW7WS1ZhI9Vyjb2dn/d4XH5
ZVL4bD7aWeNqOl3ueD9Qomkmx0dLIqXpc8gd0x4W6Z81+DBV0NqkL+aONWuS
LG1c+MhUuFnVK+2G9iQLTWFXPqhzM8RKBdwQe3uWzF13PnI+vTiU/80Vlzce
eW3uy0f9kY62b09cocm+mrAujI+DEz6CmTmuUD759ZJ+Mh8Xj8p77lvkioYP
Nfk/Uvhgd5PnPsq6wndlytaqVD7IW6F+kcKuOFIn7qizh4/SqSPBv4cYmNO+
/OOKQ3xM7jviPK+WAdFZoQtVy/i4Mkw4RfswULpxxYx35/lwt4o7u20jA9b5
o59OXeQjUZZa1WDFwA7V1GvK1XwMChxTrdem/da6E4wFjXw4DyYFtvzHQMGu
TUZdFB8igZceYJqA0aOVi47c4aO5ZZ7SuzECcV7Xv8g95ENll/GbC+8IfI/t
TJdp5+MTr2p+AEX7/7qT0U86+Nj9xmqlaS0BLYFwj6wuPgLPVz2xvUyAPPBT
VeINHylte+YMniLw8azsTdEhPmSiWLHOuwjsGukquT/Mh/HA3N8FW2n/vaYo
I+0rH54OScfk4gkwb2v7zPzJx/bJ4Ig8NoFp0XHcGafj89K+soD2z4UbG5ft
+M3H85Qa59YAAqb5uyXN//LxrsDRWcebQPerDT///eMj4a7ZDcqVwP8AFtsj
aw==
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$672451#1"]& ]}}, {}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
k/PzCbh3/xBfVpg//gM7Lt1Q
               "]]}, Annotation[#, "Charting`Private`Tag$672504#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwVWnk4VW8XVaFSCCkkY0lRpqIkLfOUONc8X0OGew/iihsaKCWhyRz9Qkql
QqmIOiiVUCGZKpQypZRIqb7z/eVZz3nuefdea+/97nUe8j6hjF1zeXh4TObx
8Pz/rz9H69W/f87Uks7kgg+9TKw3+uihNuVMBRsqVBeOMDEpmv3Rc8yZylVQ
2Ob/k4lD5X+nazqdqUNJPEI/xLxxfuKpVGyZM5WmarhMx8ob3aFM5k8fZ0rs
Sch87Spv7CRTRr8+cqKEJI/WB2b7QGfXpzkDxx2pvloV24+Oflhi3L5RP86R
UvCNzu7e5YcRhdqAnEhHavnuRRufRfjhXF9OM8PbkUqLkOw6f9oP/O47s+u1
HanhG00WUi1+6GBUqBf1O1A+2dbSa413IQKHvAJ1HCg7tx0n2lT8UbZCtmZ8
wI5a+So8MmIgALbm0bv/ddpRJgt+B10YD8B4xCvFJc/tqK59ma6NvwKwruV4
ksY9O8pf7vyradFAFBz86RRxxo7ap7f9codhINIGX36bMbKj5li43TtxPhBR
Nw4r8xUxqMBNZ5Ps7IKwrPddj/hZBvV5VDNguWcQbi3YekLpFIO619a2ryUw
CF+9J36Y7WNQCnwv+ZftD0LgUs/6JAcG9Uz/2I4FxUFw3avjuYSfQa0Ruy0X
OBOEbUYjZ1YEEFR42mmZ1FMsVBVPr/P0IKiswsTl/jksaAvx1Z23I6irSqcO
qhWyoN4l+3U1COrE9+/eGbdYUAh12KEuSVCavVfyyztY4D9L8Zo8s6V2lhwh
l0uwEc/TcvZorS0ldTaF958sG/929Wg23rGlTK1Pi79ew8ZP9SmmzQVb6nba
lUBnHTZGG1RqXPbZUj5lc4zPObDx4lvGnhA1W2q1ct7tdSfY2OF8YXHZalvK
NyqYEMtg42lNWeH3FbYU/nUljeayUZfY9JK7wJb6c3zeJdYVNoK28brz19tQ
xxZdXFvwkA3N9O4mtTU2VFFe3ODoDzZUmD9+3RKzoSSm5O8/+c3GKpUla3V5
bCjfBqO9aXNILK81STDu2knV6lqRPxeTmB0r3eZyfCf19qyU/IQCiUfGR6/H
f7Gm5nQELc6zIvFh/TIN725r6l5G5tJGWxJzlxfd3P7ImvqtJY4BBxL6w3V3
Z3OsKebj9vY2LxJ3U/7WRZpaU6xEtcaqcBIdkSkmDhrWFGdDELU9isQPL+kn
WtLW1LgqjtyIIaGpqdv8dWIHNZDs4GpzmERJx57XrLwdVPJFZfkTaSQaH/C6
WiTuoEwzxU8GZZEYLj7Tu4azgzq/IOLIhlwSSjFl/R/Md1CKph+GogpJnJf9
POo5aUWxQ1hX5peRuL8gNmTbOyvqxp+IvZtukXgzITCxotGK0ljFOWN9h4TU
Q+Wpzv+sqPk2SSl6NSTSAv147KysKNd9GF76hEQ58T1eQ9uKin1e6ZHWSOKl
bjzfEnkrqqYoauxPEwkhwfMCzVOWVGPdV6MTL0moTm1IudpvSTWY3Jt7p42E
1bsa4aQmS2qge+jxk1ckEst6lpoVWFJHuNl2V7pIXMxhZa5OsaSUba+IRPfQ
/B+akeTlWlLRI1seab2h+ScTcwd8LKntC46yXr+l+XdcLltrbUm1BvH89esj
Ibf9Yv5/my2pzx3Gsb39tB7Km1btV7SkeJQUB7a9JxHzi7F264wFdUO7y/n+
IImc9/1XJT9YUPoq2/3efKT1atq94WeLBZXAcdvx8ROtV8W/0o5KCyr9xGeh
riESk+dStSouWFAPNAYvVwyTEE1cefvMCQtqqZHPitgREhphJZvDoy2oA59u
eauOkrB13XrPdpcFxY7ziGmgcYhR4zY1WwuKv2JxgOUYiWRVF0pwqwUlyy5U
vEvjq+JDhmOrLai0Ns1S4c+03n8jHzUusaAcA2YXETQe+sRnfvm3OSU6EqYd
S2P+l2mNRz+aUy7sTWqnaLy6StHa/6U5FWUmOXWCxsaF5c+Nq82p12vkjnNp
7JNswFC8ZE59nbtv3JLGC0WuvWKdMadUBd46LaZxabqES/kBcyrDPyi4io7H
Sepw7wzbnPrlXqXmQOO/5754GTibU+FtJ//rpfMpUnR7n2hsTs21fVljS+Md
xQ3+L9TNqfapw8fLaD6+q2qOLF9pTtkldi38R/OVU5YX7LXQnBrxlNfdQmMD
7YUTF3+YUQfJtpVMmt+hqoiI8X4zqlzn+G0Ozf+J7X3Tm1rMqMbOBfwRtD7a
D61i9lWZUawpdSFvWr835nf+PrxoRv2sXfxS9wOJw80K8YvPmFHU96e2c2i9
WztmEs+yzaiLkw4n7en62Ou2a/F7JzPKvVTboZ+uH7m+FyfWGZtRffnS/a50
fYUMX8qolDajto6XuCztJiEeIiY1Z6EZFVOavMO+k0T1t/155j9MqZPsXtG4
DhICsw4XXjebUkGpDWvyW0mUHaxdI1tlSklKV+5Le0HCmW/9Vf+LplRy37OK
iBa6voV4y3/sN6U2KZzq/f2UhJF8+QMxdVPqcfu2/aspEiNFK43cpE2p+v2v
PQ7S/Xd63bGGggWmVIrIPaMnVST6tJjNGv0mlNh5eR3ZChKxpkI9NqdNqPgf
pxxGikkoPtvrmbnfhEradeHftSK6fmwG+9+yTCizf2veeBaQkHCpHgo2MqE6
FWqsEs+SuMVmTR2fNKbGo/bf+JVMwu3rq71tfcZU3u0DJcrH6P7aY/BHqtmY
Wpg0R8w4ga7n/RK8V4qMqRTNDbpG+0iMnWwQeeJoTAlrBz/xJUmsuq2wnrfS
iFr0XV1kkxmJr85z+YoKjahEDr9sqwHN3+/+XpNUI0ri44JpFz0SDgb5yUd9
jaieA1Ha6zRIHGmSHRMQMqIO10XZtUjS821A+qqIryH1bvdkgfonNm4nzMaX
WxtSx3d/DjnYR98/yr2udpsNqSVX7r6518WGVMhZgXRBQyr1rnbfj2f0fTIj
yZK4a0BZ59Wv5d5g47rw8rWyggbU8Rerh+vD2Ygun+KhpkGZRq+wf8Viw9Sh
o5M5AKos4VVAmw8b73LSEwvugJq1FH6ZzmBjidLSodU+oGzG9Is3abDxkauw
0yVkO8Wbbdk/McJCWOsyy4g6Peqqmvf1IVsWDv8+l7gvS48qejB29YMpCxmr
1jw+EqJHzc5kRr3Qo+/jSB3jbCk9alBl4nmUMgvzVjjr3w/fSo0YXh+Z/y8I
6b7ZmgsUdSl5Uc0Ag8tBqJxcsSL3kA5Vk7JOseZbIOYslx+rN9akbJS5BU5e
AVgV5aP630pNapO7yqJRRgDMXxeS0VMa1G7rkXd7TAOQmqn0Wb1Yg/oVULgu
fH0ApCVUx/MWaVDLzCTa5//2R4hmSN+XC2rU2WgP+eo0f3Rr5ww5UeuoS10p
XV/rdqFs+7efa6blKMbsb5Pvwn5grP77JGX+HFjHLbF+asOE67FPYanGc3H8
q57eckMmvD+/kDoRNw96jyoGgzYysbuikDz5mw8GrhterJRkIsXEYsmZLwLQ
f7X+XsIjL3zQbFRpYoui9b2xhMa4J2TsxDkv7aRhfMrvq6WFBxT4kh4T36RR
tWyOyl41Dyjd+bui9eRKTEjmbrkj7oH1K4YetjbLQPZ7U6bvgDvOhXksGimU
w6bAHbfiY91RskXdY3SlIs4cqBrkveWGxqeveMZFlLE4DD27NFzR6bZf8D8v
ZTBTC057S7ni02clKdtrysi8NV8lfJ4reEW5WuXma7HniM+l1lcu2O4q5R95
YB02HjvinR7jglsjns/+jqmiL6V9wuSZM57zTTbO/6AOjd+mF9ixTujYaU70
CWjA5vUmSUagE95m5r6+q6GBcv8JX4a9E8bWmnwIOqCB2IO3BPNVnSCwM+PP
MylNNGpqlkS/dYRxxmb1k4QWKtqmDfXNHFGptC9d4sEmNB6S/PpjvQMitYbD
9Yc3YfbwqrPfVjhAEw62fmLaaP7x4LKogANKXNYvKg3QRm2UTHLNR3ucS35z
0GyJDnYovUipy7fH4W/byEjvzRh3+dhwWcYeBv8uW+Qe34yAUzsVx4Xs8XfR
sjV1FZvBbDiz1vmfHaJWj/cLCmyBvaZDVV6fHVjO55yKyregDbLHvl2wg+39
v4bt87biWMbw9bcb7SD4jCX3a/1WmAenPExeY4fG1x1/ZJ23wtXgPddHyg5G
E9fvsku2ImS3lVoCjx20V3ltmOegh960+z1XWhj4rv5s0doDegh+MDORVcdA
6Tad4Z2X9aD1gRV34zYDa52EL+T80UNZa2W4438MSCc9kNS8uA3aK+3cUsMZ
6MpQmXZ6sQ2nG0dm6gIYyCjMbN/3axuSMh075DwYEK4JPfF0pz4uv/C+4GzO
wNyvsnze0/q49rFk3j05BibX4afZKiC8T0XKo4tAY7rkxwkdQEykwKPqJYHz
PN/bzloB46WzhXqNBKw6im58CQeQdSqs9B6BgrhFAZm1wFd+6yTH8wS4Yx/s
DV4BT637mW+yCex0um84OgTI/DhfeOwMgV+qYTLblxgguUIwj3GUANHZ8eqj
pwHOrRLPvbSbgJJRaf3JcAPY3AsSdWMTmL12rEz3iAFqak7s2OhPoPiQXkrq
NQPMn3qj6exOYP+4eMzmWvr5dM5EgRMBe5cvgQPtBhjoYmSL2RHgUSsw1p41
wBT57JG/JYGO7BjNPmFDXGQOulqYEijhdZBLUjTEvrMlM4QhAafu+bNvLA3h
YN0f9kqXgKpJ//BRT0OInmK52OoQmFta9Voj3BAvczr9J7QIXE8IvpmQbQgT
xcOLL64ncPirab7aNUMY2ZwrrVxHwNVN7kQXZYjYBMfT39cQUG+YiT3Ubgj+
+Z9u260mwKfRxlo/RL//l4FitwKB7rMlzq9/GyKfKdJ7RI5AKf8R0zhhI9wQ
vjPoIkPAvXezwittI1gcK/wdLkVA00x0yQFLI6i+MhaulCCwoHz0j7KnEZie
YfGrlxN4K/1otDXMCNcuyTvfFSdw8+i5rtgEIxi94TsTtpRA4reox0rZRqh4
nrCJECNAe6mKFyVGCPhCGTiJEtj4ZF1hNGWENPPUykMiBAS0eE+tajfCywOx
5zqWEOjLe7O/5ZMRFJ+/nLCh8e0Fd0jubyOcmZd864swgWTOSVcFYWM4xTA/
VdDY+22QeZOCMSJWVScV0Fjbwkg7UtsYUzH15/7/fPEt6VVylsa4nMJQ/P/v
B2SmRBo9jOE1Obv8/++/e+z5P06YMe50C8a+onHqZPHnlQnGiJk9ujOejs/P
K77ncZYxwopXpzrQ8es2uj0NKzFGS53zFhs6vyWbNt1ZQRlD6onlzlA6/4//
CRU9ajNGyYvexgqan2qBodOhn4xxKe1SiQLN3+k9tQclfxsjfvfvrxU0vwF9
OSH1QiaQYvWlhdL8S6znWbB0lQlYV1j5e6UJPNm7K99viwkk8yWqS2m99jY0
6lbsNMHKk3P7lsoTWCem3s7nZwIlnjfzLyrSenulBzvuNYFH08/1fkoEjpf8
4r+UaoK/G4x22KwlMGbyaIt5pQk2NCs5lagRyD29ri2rxQTPXxVvkqHrz/rd
CXL4vQlUNqh8rdam65Hr+l+SkCnid9R0HtQnsPvqF95mX1P4K+odkLclIPfT
/tzKvaZIisszm7En8NK4Sick1RRuhfPz/7jQ9fT2MEu40hTuHYrdx/0ITC6R
ekEImSFqk/qymhgCFzwOBBUomoFxZLvUzzgCDlc+zP2+2QwHAiqsvBJp/Y1u
bErzNcNrTvWfsnR6HkQan+24awb73o0z/uUElOsvb1zTYgapLMWGOVUEuoSF
W6Lem+HKBl/jJ7W0Xpe7eCSFzHFPLEO4k54/sz0h/m6+5pjomPnIM0n3q3L7
v6tccyiOG5tNzxLw2LMlezbFHAsccx9K8DNwX4i3Ke+uOQ7LazzqlWDgoEG2
Rp+gBWwvsU/6gwH11L+N6ooW6H+vlnrTkoH+bl+/uM0WKFJ4N7vOgQHDiA2Z
Cr4WWJk09jyLxQDvpfpZv7sWkNRsKgnOZCBx8fjjYR9LuM6REvn4k4HYT+PZ
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
               "]]}, 
             Annotation[#, "Charting`Private`Tag$672504#1"]& ]}}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Coinc. per 10 min\"", TraditionalForm], None}, {
            FormBox["\"Measurement Angle\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           Thickness[0.006], FontSize -> 12], FrameTicks -> {{{{-180, 
              FormBox["\"-180\"", TraditionalForm], 0.024}, {0, 
              FormBox["\"0\"", TraditionalForm], 0.024}, {180, 
              FormBox["\"180\"", TraditionalForm], 0.024}, {360, 
              FormBox["\"360\"", TraditionalForm], 0.024}, {540, 
              FormBox["\"540\"", TraditionalForm], 0.024}}, {{-180, "", 
              0.024}, {0, "", 0.024}, {180, "", 0.024}, {360, "", 0.024}, {
             540, "", 0.024}}}, {{{-45, "", 0.024}, {-30, "", 0.012}, {-15, 
              "", 0.012}, {0, 
              FormBox[
               RowBox[{"\"0\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {15, "", 0.012}, {30, "", 0.012}, {45, "", 0.024}, {
             60, "", 0.012}, {75, "", 0.012}, {90, 
              FormBox[
               RowBox[{"\"90\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {105, "", 0.012}, {120, "", 0.012}, {135, "", 0.024}, {
             150, "", 0.012}, {165, "", 0.012}, {180, 
              FormBox[
               RowBox[{"\"180\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {195, "", 0.012}, {210, "", 0.012}, {225, "", 0.024}, {
             240, "", 0.012}, {255, "", 0.012}, {270, 
              FormBox[
               RowBox[{"\"270\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {285, "", 0.012}, {300, "", 0.012}, {315, "", 0.024}, {
             330, "", 0.012}, {345, "", 0.012}, {360, 
              FormBox[
               RowBox[{"\"360\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}, {{-45, "", 0.024}, {-30, "", 0.012}, {-15, "", 
              0.012}, {0, "", 0.024}, {15, "", 0.012}, {30, "", 0.012}, {
             45, "", 0.024}, {60, "", 0.012}, {75, "", 0.012}, {
             90, "", 0.024}, {105, "", 0.012}, {120, "", 0.012}, {
             135, "", 0.024}, {150, "", 0.012}, {165, "", 0.012}, {
             180, "", 0.024}, {195, "", 0.012}, {210, "", 0.012}, {
             225, "", 0.024}, {240, "", 0.012}, {255, "", 0.012}, {
             270, "", 0.024}, {285, "", 0.012}, {300, "", 0.012}, {
             315, "", 0.024}, {330, "", 0.012}, {345, "", 0.012}, {
             360, "", 0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 260, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Before Cyc: 2-2\"", TraditionalForm], 
         PlotRange -> {{-14.4, 374.4}, {-72., 432.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox["\"\"", TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
     TagBox[
      GridBox[{{
         TemplateBox[{"\"HV Basis\""}, "SwatchLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    InsetBox[
                    Graphics3DBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    Specularity[
                    RGBColor[0, 0, 1], 30], 
                    SphereBox[{0, 0, 0}]}, Boxed -> False, Lighting -> 
                    "Neutral", PlotRange -> {{-1, 1}, {-1, 1}, {-1, 1}}, 
                    ViewPoint -> {0, 
                    DirectedInfinity[-1], 0}, BoxRatios -> {1, 1, 1}], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}], {0.5, 0.5}, {1, 1}]}, 
                    AspectRatio -> Full, PlotRangePadding -> None, 
                    ImagePadding -> 1, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 
                 TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                  "RGBColorSwatchTemplate"], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"SphereBubble\""}]}], 
             "]"}]& ), Editable -> True], 
         TemplateBox[{
           RowBox[{
             RowBox[{"\[PlusMinus]", "45"}], " ", "\[Degree]", " ", 
             "Basis"}]}, "SwatchLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    InsetBox[
                    Graphics3DBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    Specularity[
                    RGBColor[1, 0, 0], 30], 
                    SphereBox[{0, 0, 0}]}, Boxed -> False, Lighting -> 
                    "Neutral", PlotRange -> {{-1, 1}, {-1, 1}, {-1, 1}}, 
                    ViewPoint -> {0, 
                    DirectedInfinity[-1], 0}, BoxRatios -> {1, 1, 1}], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}], {0.5, 0.5}, {1, 1}]}, 
                    AspectRatio -> Full, PlotRangePadding -> None, 
                    ImagePadding -> 1, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 
                 TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                  "RGBColorSwatchTemplate"], "}"}], ",", 
               RowBox[{"{", 
                 TagBox[#, HoldForm], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"SphereBubble\""}]}], 
             "]"}]& ), Editable -> True]}, {
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "150", "\"\[PlusMinus]4\""}, {
             "v", "0.833`3.", "\"\[PlusMinus]0.018\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False], 
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "148", "\"\[PlusMinus]5\""}, {
             "v", "0.54`2.", "\"\[PlusMinus]0.04\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}, {
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "150", "\"\[PlusMinus]4\""}, {
             "v", "0.832`3.", "\"\[PlusMinus]0.018\""}, {
             "\[Theta]", "89.2`3.", "\"\[PlusMinus]1.0\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False], 
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "150", "\"\[PlusMinus]4\""}, {
             "v", "0.54`2.", "\"\[PlusMinus]0.03\""}, {"\[Theta]", 
              RowBox[{"-", "49.7`3."}], "\"\[PlusMinus]1.6\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]}, 
    "RowWithSeparators"], 
   TemplateBox[{"   ", "\"   \"", 
     TemplateBox[{
       GraphicsBox[{{{{{{Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{0., 0.}, {0., 1.}}], 
               LineBox[{{0., 1.}, {0., 2.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{117., 10.25834261322606}, {117., 14.}}], 
               LineBox[{{117., 14.}, {117., 17.74165738677394}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{135., 9.39444872453601}, {135., 13.}}], 
               LineBox[{{135., 13.}, {135., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{162., 2.}, {162., 4.}}], 
               LineBox[{{162., 4.}, {162., 6.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{180., -0.6324555320336759}, {180., 0.}}], 
               LineBox[{{180., 0.}, {180., 0.6324555320336759}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{207., 1.2679491924311228`}, {207., 3.}}], 
               LineBox[{{207., 3.}, {207., 4.732050807568877}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{225., 3.550510257216822}, {225., 6.}}], 
               LineBox[{{225., 6.}, {225., 8.449489742783179}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{252., 15.52786404500042}, {252., 20.}}], 
               LineBox[{{252., 20.}, {252., 24.47213595499958}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{270., 16.41742430504416}, {270., 21.}}], 
               LineBox[{{270., 21.}, {270., 25.58257569495584}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{27., 3.550510257216822}, {27., 6.}}], 
               LineBox[{{27., 6.}, {27., 8.449489742783179}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{297., 19.101020514433642`}, {297., 24.}}], 
               LineBox[{{297., 24.}, {297., 28.898979485566358`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{315., 9.39444872453601}, {315., 13.}}], 
               LineBox[{{315., 13.}, {315., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{342., 0.5857864376269049}, {342., 2.}}], 
               LineBox[{{342., 2.}, {342., 3.414213562373095}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{360., -0.6324555320336759}, {360., 0.}}], 
               LineBox[{{360., 0.}, {360., 0.6324555320336759}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{45., 12.}, {45., 16.}}], 
               LineBox[{{45., 16.}, {45., 20.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{72., 21.803847577293368`}, {72., 27.}}], 
               LineBox[{{72., 27.}, {72., 32.19615242270663}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{90., 21.803847577293368`}, {90., 27.}}], 
               LineBox[{{90., 27.}, {90., 32.19615242270663}}]}}}, {{
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{0., 5.17157287525381}, {0., 8.}}], 
               LineBox[{{0., 8.}, {0., 10.82842712474619}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{117., 19.101020514433642`}, {117., 24.}}], 
               LineBox[{{117., 24.}, {117., 28.898979485566358`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{135., 18.20416847668728}, {135., 23.}}], 
               LineBox[{{135., 23.}, {135., 27.79583152331272}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{162., 9.39444872453601}, {162., 13.}}], 
               LineBox[{{162., 13.}, {162., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{180., 4.354248688935409}, {180., 7.}}], 
               LineBox[{{180., 7.}, {180., 9.64575131106459}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{207., 1.2679491924311228`}, {207., 3.}}], 
               LineBox[{{207., 3.}, {207., 4.732050807568877}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{225., 1.2679491924311228`}, {225., 3.}}], 
               LineBox[{{225., 3.}, {225., 4.732050807568877}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{252., 5.17157287525381}, {252., 8.}}], 
               LineBox[{{252., 8.}, {252., 10.82842712474619}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{270., 12.}, {270., 16.}}], 
               LineBox[{{270., 16.}, {270., 20.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{27., 2.76393202250021}, {27., 5.}}], 
               LineBox[{{27., 5.}, {27., 7.23606797749979}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{297., 16.41742430504416}, {297., 21.}}], 
               LineBox[{{297., 21.}, {297., 25.58257569495584}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{315., 10.25834261322606}, {315., 14.}}], 
               LineBox[{{315., 14.}, {315., 17.74165738677394}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{342., 9.39444872453601}, {342., 13.}}], 
               LineBox[{{342., 13.}, {342., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{360., 2.76393202250021}, {360., 5.}}], 
               LineBox[{{360., 5.}, {360., 7.23606797749979}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{45., 1.2679491924311228`}, {45., 3.}}], 
               LineBox[{{45., 3.}, {45., 4.732050807568877}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{72., 4.354248688935409}, {72., 7.}}], 
               LineBox[{{72., 7.}, {72., 9.64575131106459}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{90., 7.6833752096446}, {90., 11.}}], 
               LineBox[{{90., 11.}, {90., 14.3166247903554}}]}}}}, {{{
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 2.}, 
                  Offset[{3, 0}, {0., 2.}]}, {{0., 2.}, 
                  Offset[{-3, 0}, {0., 2.}]}, {{0., 0.}, 
                  Offset[{3, 0}, {0., 0.}]}, {{0., 0.}, 
                  Offset[{-3, 0}, {0., 0.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 17.74165738677394}, 
                  Offset[{3, 0}, {117., 17.74165738677394}]}, {{117., 
                  17.74165738677394}, 
                  Offset[{-3, 0}, {117., 17.74165738677394}]}, {{117., 
                  10.25834261322606}, 
                  Offset[{3, 0}, {117., 10.25834261322606}]}, {{117., 
                  10.25834261322606}, 
                  Offset[{-3, 0}, {117., 10.25834261322606}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 16.605551275463988`}, 
                  Offset[{3, 0}, {135., 16.605551275463988`}]}, {{135., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {135., 16.605551275463988`}]}, {{135., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {135., 9.39444872453601}]}, {{135., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {135., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 6.}, 
                  Offset[{3, 0}, {162., 6.}]}, {{162., 6.}, 
                  Offset[{-3, 0}, {162., 6.}]}, {{162., 2.}, 
                  Offset[{3, 0}, {162., 2.}]}, {{162., 2.}, 
                  Offset[{-3, 0}, {162., 2.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 0.6324555320336759}, 
                  Offset[{3, 0}, {180., 0.6324555320336759}]}, {{180., 
                  0.6324555320336759}, 
                  Offset[{-3, 0}, {180., 0.6324555320336759}]}, {{
                  180., -0.6324555320336759}, 
                  Offset[{3, 0}, {180., -0.6324555320336759}]}, {{
                  180., -0.6324555320336759}, 
                  Offset[{-3, 0}, {180., -0.6324555320336759}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 4.732050807568877}, 
                  Offset[{3, 0}, {207., 4.732050807568877}]}, {{207., 
                  4.732050807568877}, 
                  Offset[{-3, 0}, {207., 4.732050807568877}]}, {{207., 
                  1.2679491924311228`}, 
                  Offset[{3, 0}, {207., 1.2679491924311228`}]}, {{207., 
                  1.2679491924311228`}, 
                  Offset[{-3, 0}, {207., 1.2679491924311228`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 8.449489742783179}, 
                  Offset[{3, 0}, {225., 8.449489742783179}]}, {{225., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {225., 8.449489742783179}]}, {{225., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {225., 3.550510257216822}]}, {{225., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {225., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 24.47213595499958}, 
                  Offset[{3, 0}, {252., 24.47213595499958}]}, {{252., 
                  24.47213595499958}, 
                  Offset[{-3, 0}, {252., 24.47213595499958}]}, {{252., 
                  15.52786404500042}, 
                  Offset[{3, 0}, {252., 15.52786404500042}]}, {{252., 
                  15.52786404500042}, 
                  Offset[{-3, 0}, {252., 15.52786404500042}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 25.58257569495584}, 
                  Offset[{3, 0}, {270., 25.58257569495584}]}, {{270., 
                  25.58257569495584}, 
                  Offset[{-3, 0}, {270., 25.58257569495584}]}, {{270., 
                  16.41742430504416}, 
                  Offset[{3, 0}, {270., 16.41742430504416}]}, {{270., 
                  16.41742430504416}, 
                  Offset[{-3, 0}, {270., 16.41742430504416}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 8.449489742783179}, 
                  Offset[{3, 0}, {27., 8.449489742783179}]}, {{27., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {27., 8.449489742783179}]}, {{27., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {27., 3.550510257216822}]}, {{27., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {27., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 28.898979485566358`}, 
                  Offset[{3, 0}, {297., 28.898979485566358`}]}, {{297., 
                  28.898979485566358`}, 
                  Offset[{-3, 0}, {297., 28.898979485566358`}]}, {{297., 
                  19.101020514433642`}, 
                  Offset[{3, 0}, {297., 19.101020514433642`}]}, {{297., 
                  19.101020514433642`}, 
                  Offset[{-3, 0}, {297., 19.101020514433642`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 16.605551275463988`}, 
                  Offset[{3, 0}, {315., 16.605551275463988`}]}, {{315., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {315., 16.605551275463988`}]}, {{315., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {315., 9.39444872453601}]}, {{315., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {315., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 3.414213562373095}, 
                  Offset[{3, 0}, {342., 3.414213562373095}]}, {{342., 
                  3.414213562373095}, 
                  Offset[{-3, 0}, {342., 3.414213562373095}]}, {{342., 
                  0.5857864376269049}, 
                  Offset[{3, 0}, {342., 0.5857864376269049}]}, {{342., 
                  0.5857864376269049}, 
                  Offset[{-3, 0}, {342., 0.5857864376269049}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 0.6324555320336759}, 
                  Offset[{3, 0}, {360., 0.6324555320336759}]}, {{360., 
                  0.6324555320336759}, 
                  Offset[{-3, 0}, {360., 0.6324555320336759}]}, {{
                  360., -0.6324555320336759}, 
                  Offset[{3, 0}, {360., -0.6324555320336759}]}, {{
                  360., -0.6324555320336759}, 
                  Offset[{-3, 0}, {360., -0.6324555320336759}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 20.}, 
                  Offset[{3, 0}, {45., 20.}]}, {{45., 20.}, 
                  Offset[{-3, 0}, {45., 20.}]}, {{45., 12.}, 
                  Offset[{3, 0}, {45., 12.}]}, {{45., 12.}, 
                  Offset[{-3, 0}, {45., 12.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 32.19615242270663}, 
                  Offset[{3, 0}, {72., 32.19615242270663}]}, {{72., 
                  32.19615242270663}, 
                  Offset[{-3, 0}, {72., 32.19615242270663}]}, {{72., 
                  21.803847577293368`}, 
                  Offset[{3, 0}, {72., 21.803847577293368`}]}, {{72., 
                  21.803847577293368`}, 
                  Offset[{-3, 0}, {72., 21.803847577293368`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 32.19615242270663}, 
                  Offset[{3, 0}, {90., 32.19615242270663}]}, {{90., 
                  32.19615242270663}, 
                  Offset[{-3, 0}, {90., 32.19615242270663}]}, {{90., 
                  21.803847577293368`}, 
                  Offset[{3, 0}, {90., 21.803847577293368`}]}, {{90., 
                  21.803847577293368`}, 
                  Offset[{-3, 0}, {90., 21.803847577293368`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}}, {{Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 10.82842712474619}, 
                  Offset[{3, 0}, {0., 10.82842712474619}]}, {{0., 
                  10.82842712474619}, 
                  Offset[{-3, 0}, {0., 10.82842712474619}]}, {{0., 
                  5.17157287525381}, 
                  Offset[{3, 0}, {0., 5.17157287525381}]}, {{0., 
                  5.17157287525381}, 
                  Offset[{-3, 0}, {0., 5.17157287525381}]}}], {{{1., 0.}, {0.,
                 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 28.898979485566358`}, 
                  Offset[{3, 0}, {117., 28.898979485566358`}]}, {{117., 
                  28.898979485566358`}, 
                  Offset[{-3, 0}, {117., 28.898979485566358`}]}, {{117., 
                  19.101020514433642`}, 
                  Offset[{3, 0}, {117., 19.101020514433642`}]}, {{117., 
                  19.101020514433642`}, 
                  Offset[{-3, 0}, {117., 19.101020514433642`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 27.79583152331272}, 
                  Offset[{3, 0}, {135., 27.79583152331272}]}, {{135., 
                  27.79583152331272}, 
                  Offset[{-3, 0}, {135., 27.79583152331272}]}, {{135., 
                  18.20416847668728}, 
                  Offset[{3, 0}, {135., 18.20416847668728}]}, {{135., 
                  18.20416847668728}, 
                  Offset[{-3, 0}, {135., 18.20416847668728}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 16.605551275463988`}, 
                  Offset[{3, 0}, {162., 16.605551275463988`}]}, {{162., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {162., 16.605551275463988`}]}, {{162., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {162., 9.39444872453601}]}, {{162., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {162., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 9.64575131106459}, 
                  Offset[{3, 0}, {180., 9.64575131106459}]}, {{180., 
                  9.64575131106459}, 
                  Offset[{-3, 0}, {180., 9.64575131106459}]}, {{180., 
                  4.354248688935409}, 
                  Offset[{3, 0}, {180., 4.354248688935409}]}, {{180., 
                  4.354248688935409}, 
                  Offset[{-3, 0}, {180., 4.354248688935409}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 4.732050807568877}, 
                  Offset[{3, 0}, {207., 4.732050807568877}]}, {{207., 
                  4.732050807568877}, 
                  Offset[{-3, 0}, {207., 4.732050807568877}]}, {{207., 
                  1.2679491924311228`}, 
                  Offset[{3, 0}, {207., 1.2679491924311228`}]}, {{207., 
                  1.2679491924311228`}, 
                  Offset[{-3, 0}, {207., 1.2679491924311228`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 4.732050807568877}, 
                  Offset[{3, 0}, {225., 4.732050807568877}]}, {{225., 
                  4.732050807568877}, 
                  Offset[{-3, 0}, {225., 4.732050807568877}]}, {{225., 
                  1.2679491924311228`}, 
                  Offset[{3, 0}, {225., 1.2679491924311228`}]}, {{225., 
                  1.2679491924311228`}, 
                  Offset[{-3, 0}, {225., 1.2679491924311228`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 10.82842712474619}, 
                  Offset[{3, 0}, {252., 10.82842712474619}]}, {{252., 
                  10.82842712474619}, 
                  Offset[{-3, 0}, {252., 10.82842712474619}]}, {{252., 
                  5.17157287525381}, 
                  Offset[{3, 0}, {252., 5.17157287525381}]}, {{252., 
                  5.17157287525381}, 
                  Offset[{-3, 0}, {252., 5.17157287525381}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 20.}, 
                  Offset[{3, 0}, {270., 20.}]}, {{270., 20.}, 
                  Offset[{-3, 0}, {270., 20.}]}, {{270., 12.}, 
                  Offset[{3, 0}, {270., 12.}]}, {{270., 12.}, 
                  Offset[{-3, 0}, {270., 12.}]}}], {{{1., 0.}, {0., 1.}}, {0.,
                 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 7.23606797749979}, 
                  Offset[{3, 0}, {27., 7.23606797749979}]}, {{27., 
                  7.23606797749979}, 
                  Offset[{-3, 0}, {27., 7.23606797749979}]}, {{27., 
                  2.76393202250021}, 
                  Offset[{3, 0}, {27., 2.76393202250021}]}, {{27., 
                  2.76393202250021}, 
                  Offset[{-3, 0}, {27., 2.76393202250021}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 25.58257569495584}, 
                  Offset[{3, 0}, {297., 25.58257569495584}]}, {{297., 
                  25.58257569495584}, 
                  Offset[{-3, 0}, {297., 25.58257569495584}]}, {{297., 
                  16.41742430504416}, 
                  Offset[{3, 0}, {297., 16.41742430504416}]}, {{297., 
                  16.41742430504416}, 
                  Offset[{-3, 0}, {297., 16.41742430504416}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 17.74165738677394}, 
                  Offset[{3, 0}, {315., 17.74165738677394}]}, {{315., 
                  17.74165738677394}, 
                  Offset[{-3, 0}, {315., 17.74165738677394}]}, {{315., 
                  10.25834261322606}, 
                  Offset[{3, 0}, {315., 10.25834261322606}]}, {{315., 
                  10.25834261322606}, 
                  Offset[{-3, 0}, {315., 10.25834261322606}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 16.605551275463988`}, 
                  Offset[{3, 0}, {342., 16.605551275463988`}]}, {{342., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {342., 16.605551275463988`}]}, {{342., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {342., 9.39444872453601}]}, {{342., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {342., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 7.23606797749979}, 
                  Offset[{3, 0}, {360., 7.23606797749979}]}, {{360., 
                  7.23606797749979}, 
                  Offset[{-3, 0}, {360., 7.23606797749979}]}, {{360., 
                  2.76393202250021}, 
                  Offset[{3, 0}, {360., 2.76393202250021}]}, {{360., 
                  2.76393202250021}, 
                  Offset[{-3, 0}, {360., 2.76393202250021}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 4.732050807568877}, 
                  Offset[{3, 0}, {45., 4.732050807568877}]}, {{45., 
                  4.732050807568877}, 
                  Offset[{-3, 0}, {45., 4.732050807568877}]}, {{45., 
                  1.2679491924311228`}, 
                  Offset[{3, 0}, {45., 1.2679491924311228`}]}, {{45., 
                  1.2679491924311228`}, 
                  Offset[{-3, 0}, {45., 1.2679491924311228`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 9.64575131106459}, 
                  Offset[{3, 0}, {72., 9.64575131106459}]}, {{72., 
                  9.64575131106459}, 
                  Offset[{-3, 0}, {72., 9.64575131106459}]}, {{72., 
                  4.354248688935409}, 
                  Offset[{3, 0}, {72., 4.354248688935409}]}, {{72., 
                  4.354248688935409}, 
                  Offset[{-3, 0}, {72., 4.354248688935409}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 14.3166247903554}, 
                  Offset[{3, 0}, {90., 14.3166247903554}]}, {{90., 
                  14.3166247903554}, 
                  Offset[{-3, 0}, {90., 14.3166247903554}]}, {{90., 
                  7.6833752096446}, 
                  Offset[{3, 0}, {90., 7.6833752096446}]}, {{90., 
                  7.6833752096446}, 
                  Offset[{-3, 0}, {90., 7.6833752096446}]}}], {{{1., 0.}, {0.,
                 1.}}, {0., 0.}}]}}}}, {{{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 1.}}, {{117., 14.}}, {{
              135., 13.}}, {{162., 4.}}, {{180., 0.}}, {{207., 3.}}, {{225., 
              6.}}, {{252., 20.}}, {{270., 21.}}, {{27., 6.}}, {{297., 
              24.}}, {{315., 13.}}, {{342., 2.}}, {{360., 0.}}, {{45., 
              16.}}, {{72., 27.}}, {{90., 27.}}}]}, {
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 8.}}, {{117., 24.}}, {{
              135., 23.}}, {{162., 13.}}, {{180., 7.}}, {{207., 3.}}, {{225., 
              3.}}, {{252., 8.}}, {{270., 16.}}, {{27., 5.}}, {{297., 
              21.}}, {{315., 14.}}, {{342., 13.}}, {{360., 5.}}, {{45., 
              3.}}, {{72., 7.}}, {{90., 11.}}}]}}}, {{}, {}}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1: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
bFcg
               "]]}, Annotation[#, "Charting`Private`Tag$673802#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1:eJwVmnc8Vu8bxyWPvcfXysjejpGR0cde2WWVrez5yCiJFgmp0JJKSEtWhcTJ
aBktFWlQlEpEZkm/8/vreb1f5z7nvu/r+lzXc3/O66wNinXbxsjAwKCzmoHh
/7/b6Tov//3zIg0v3ODySJCAusVnX815L/K+brRzwgkJzPKf+uw34UVa2Jk+
Ot8igX11Kwt3B7zIdPtaRx0WSZyffiSWVutFXixsmFQ4K4k3sQEBi0FeZN7L
/U/Ze6TgFJX3/WeXJ8nA0XNuXHQt9Ld9WfXxsAcZqDcT0JQni1pxqbuTH91J
abKr/fFDJbjY7oz7N+BOfjjMbhI9pITJxJeyvE/cydsbHtXQJpWg0nc4R+uO
Oxny9NKcsIAyyjIWPROPu5M1rOM8rVuVUTj2bGbJwp1M47Uqm/6hjOQb+5Vo
FW6k/Nu0mtUsqvjv7YchoTNupPTWc5VrRVTRwGp0ROGoGxmoYGKrpayKn4HT
cza73Uj2ezfZ5R1UESbo15Gz2Y00Gti47JOvCp9UfT9eZjeS64RNzCifGkws
vh0XD3UlBTU8Lh3jVEdz1YKKn68ruftKkqivuDr0uGnt591dyWfdNZz/qaiD
GJT6KQ9X8mRdFZu7jTpkYjdvJERdyYS/zpHzGepgPkMyWXW7kDv+oKr7pzqe
zhTviNF0IU+Gfvr1954GNnqVc9bKu5AfTeK9t/dp4NHd2ou/xF3I0PwD4s1v
NNCe3fMshdWFFPDV85H9pYFwE6atzB3OZOGDlxt/y2hCu+hNj6aiM3n+8PyH
ynRNdFlmVe+dciS3WXUPNfATGFX/TyvwjSPZ7dF/YkaYAKNwRf2GLkfSS7+2
WkaCgOnX9sbl046kv8lQm7cigca8lfYka0cy4Y2qkYwRgWuvdryOOLuR/Lft
optAAIHHbUw+dtkbSbvMn3XxIQS+Vh1/q0jfSH6ZOvHgXhgBhV21I6O2G8l8
hpxxvXgC56V+fPebdSCzDn1gS8wkUBgWwuDu4EBW335joH2OQJ3rr71aeg5k
9Ca7u5fKCDxbv5fGu9aBZIq+EcNdSYCb6zx777w9uZH7y/ob1whk1w4J2pTZ
k1wFLbUmTQQqT0eckM+zJz3EW18atRDo2rckypRiT05NcE6ptFH79RCWuudo
T7J/Vhof6iSw67ebstGSHZn8qdIu+wmB059GroqO2pGiB3dGcT2n9t8Tp7HY
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
3Rxz/6j6mrjOzj9wOBA9fNFTKmMENqRPF3cWBaI5U03Na4TAqGTb+bOXA3FK
96AG7yABriztT8erA8Fovyn67Suq/qYq5HPqA/HzQZPOmX4C2W25V5LuUs8b
uRn28wkB9QCfBudngVCIWv1rieoXHg97561eBeKGZ9gPH6qfZBBmhsZDgdCV
GSispvrNcwalVqWxQDiWpv5Tv0Mg6cLcg1VLgciMvzeYd4MA+bFgqF46CIPT
+RWviqh61VBVOyofBIfRxT1Jxwjo7uxKi1EJQsTQxs9sRwhU8f2WUNYNgp4+
bxxHNlXPCA4otQlCIFOhxs5UAgGl68ayY4LQe7Tcg9OHgNi3J+u204OwqrlT
eHwzlZ91EQctUoKQ3J/Xf9uVgG1vqeJKZhAUr4kH6NgRIJZZIuhFQbi0slJy
Rp8Ag8+bSd+WIDA+2TGqz0+guSJxg9G9INwVOKfpyUUgcZq7QOR+EEwvey9H
sBIYz7bQevEkCDUXh3YPL2vi6e1rdNtPQajO1x8YfaGJ80J7FrXZg1H/sjT/
zm5N4JksI6tXMIzMK2I072kgXujCXyffYLTzMjSW12ugzFtyqSgoGNv7NP6t
qtTA6o8iP2Wjg6EjWvM3MUcD92e43m/YGwyeYnka3DTgILjYlHwtGBxx9ToH
3qnDw7Mn/gtDCNrsmV5c/6SGyHeJI/cvh+CbWDDTmlsqaP7dXFJfHQKnftPI
l+UqYBVZ5XW+PgQGzP7FmcdVUOmW15d6NwRX6Wda6uJUMPyg4o7asxAUGl8e
3aWigk11r4qOLYbAevW6vvtnlGGcZWDvZ7MNqzOzJ9WSlMCltVw3N7oNf1PN
NMb5FOBTZmZyZH0oHj7s4uptkUbNmaO1PRtC0d+ys1ejShrMRSPy7FahOFog
P1t8XBp1WZncB5xDwTN9Q2FXhDTYo+992BkSChevhqkTItJo1jfbuz0/FFxP
zaqPTUhCrBcPTD6GYq5Ef5kevwZx9wuMdn0Jxc7PgkdS7dfgftvwjcaJUHw8
ZVlbLLsGCXUZJ3UWQpEmm/xT5JU4Hp8gw5U5w6An+TLM2lgcO4PAKaQXhtGH
GbQ8LjEMLWxwnTgUhuEivjV/uoTh9NjrwJP8MKhZ1lz9WS6M9pL4prrjYUgr
NA9avZ86v5pdXJt6Ngx5CiGGmebC2HmYeYZWG4YHsUn6Y+R/EJXqPSY1EAYL
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
1wTsH2HLlttK+TG331VxEwl49P2LpVUAgS3avOX+0wmwvqIcGhhGQGXG6LTJ
nwTcy1yXsjqFmu/jfeGbfxPQruB5sGcXAf7nrkVqDHRs8nX+mb2HwO/a0AJx
Gh3nLdLvDB0k8Cj++MElbjrO9enFjBcSaAmUZIrno+OJ0f1TDicJ1LhezhwX
oOP1c6HvF84QOKnVlvZahI6qx7fHFMsIhE1/S7gpQ8dGq7ojJ6sJMMeb+8fr
0XHP4/o1FspPr3tnWidhSEfYwX3zTx8QCLEzoj02oqM5+URrzmMC7Wt1r8qY
0bGPwan2CeXH9zyXX3jhQEd9Y8CeUsrPV5vK2Gc40bEzuFTk+xCB91ckz6q5
0mEW6bBa6T0B433CFgc86Mg+IdOU8JHAog7bEb1AOuSaG2UdvhFQPE/7+DGY
jjL9uE7RCcrfczKuO7KdjrWbDhwb+EGgYfT3my+RdHRJbr2kME3gk8uCemEM
HQ9/tn2+OUPF7+6vDMTTMdnUZblulkB80YTCqSQ6WEoznJkWCJxf9TXVKpWO
Xcy/5twXCTyNHuuZ3kUHJ8/e6uNLBP4NjkiVptNxSXBbUsdvAhrW7xPsM+l4
/Gfe/v/fm/nWvema30dHsN4t5V/LlB4kX4tcPEjH9keWvL/+Evg2/6T1z2Fq
Pg72ifZ/BESDe/iq8qn4P9V7d4xBC7ZPHoZsOkrHHXmpPrdVWkg26rrNUEiH
i77wXUZGLVReusd+vZiOtOHiqrL/fx8l0OrrfYqO3uuGR7RXa4Epo7mGVkLH
1uHW2DqKdSdura4rpeN0HJudzP+/J/Oq9/C7QI3nlRbb+//vtTpvXGYvp8NY
U/3jM4rbiWvLtyrpoC2mn+ejaWG6pMo5+DIdNz2yNplRLM1WUcZzjY6UhaG/
ARQ777gwd6eaDh5bvZI4itNHztqG1VL6SKFr/p+vO54+I9hAx/TOwtv/fx/3
tql4krxFRx5Tq+4GijkUjptFN9HhlGtwiZvi9ceOFIq2UPG0j+Pp+//7t5XD
X7pa6VA3nIveTfGpiOz1CffoWOTZ1bGG4oev9udJdtKRYDXIe43a76J55vDj
+3R0cnB4qlKseGO3TvIjOvqcNE+cpuLlIb7zoGwPHRdrs58vUfE9kJU0+KSP
ivfh3ex2FDf8SlBLe0bHm7ETyKby8ck/do9SPx1FSQeSblP54u+JfN7/itJf
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
dcn8YDpCw/8AS214lg==
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$673802#1"]& ]}}, {}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag$673855#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
bEn9w0GpvVsJTIzz2Bz/Y0M2ruBhjHOo+S8wdVP+z4YMPX/k7YYEAgISp4di
SmzIHXfapDtjCTSXLt3QkmlDnmvlCxWLJjBf8ynI1MeGvFJ52Xx3GBXv2er4
IAEb0oA36NUtbwKmegJfGr5bk837YuzaqH0z0ZGSMj1qTYbGe3zb70pAr8c+
Y2uHNXn03nEFRXsC94d/5R2MtSbjJ7qz8o0JpPtFCL/xtiZtK8PLuQyo+r0a
3KtuYU3ym+QoROlR+U7+V9YuZ03+vVlbJ6RD7Y85z/pHt63ItZderjumQMBc
qeXqQoYV6cDXT6yaZ+L9sWXmfnJWpJ+G8Iv2X0zsV9/dW8dvRfIcq91k9J2J
V7rBt5mjluS/l9N7lkwxscVK9Jnzfkuyh/POVvUJ9TyJjZnd882CdDvkx9/U
zIRK23Iters5+UIdfSc9qeeLDzfPsaPm5NdTKxr5nZno/DM6YllkTv7MPpPh
ZcOEp2ltwa4wc5K9OXnddQMmcgcUpgRFzcl5ReP2z/JMTL6WOykRZkZe3Sae
XTjGQJPYklUKIqbkxOdTuW4RDGxumeUif4AMYbzR+ejPgJXn8OPg1yBnC86P
b/Zg4GVVaV7dBZB6URl3Es0ZEFddNLEiFGSA69KiLkUG3nGWO21IWE9WK6d0
aLToIPn+YruUbiNy19OTP+SztbHzT03e1gojUulGp1FXgjbKVFbeyE0wIu+V
m2x29tNGR6q+RaWMERmyvi6HsVobNFkfkyssQ1I+P5cj8FYLpWGVBL+yAckR
blQ3MtdC+zdZ2UM79Mn+0LLKRzMaWLBEaeqaBUH+F/fk/ke1VTi7fubnyh+K
pK+iNHf8SWUUciz7zesUyRBesf07SpQRfbaiOshRkTx7ViG9OkMZplbbdmpb
K5BtS8PlR+yVoSiydInIETnSIyFxe/7Ucip/e6NbrktIIbndvk+0l6M9LkJk
d4wA2SaRW3nioiLcVsz3FfItwBrZPMWUx7Lw3T2eXGTBDUajEbdzsyxCPg7K
7M2iYeG4/DHLPFkktR6N2/eHBzWfq4J3rZVFoaWteMknQYQ9ebwgokoGY8Qt
jYFYSRTu6Bi8FSYNeXcp9j13ObB4luWaiy3Bcp78G64zcihUMilX/bAYqhfm
Ze/vW4YE9ee7tW8shpbsRM/92/JQUilWbcpcjJrkAKH3RxXRMiR8jj0jhVPr
GAEflimDK3P+ntvLRbh1c4hrWkINapVNLisfS+Kx3zaRw0FquPdT6VtXuyTG
P6rKuJxWQ7n78yu7DkqCLsnRbbFZhW88mo2lQZJY7yuzMTVTHW0vam+RkxI4
/z6wf35KEyGxR6138Eqgewvf4zMGWuBXvnBp8r047ok2jwXnacGzYvGJbXfF
MU0smO9W1kZAs8DV1ZXiWJVxlLHLVwfB3svWPtIWx12eb7f4KN1KJg+kru8V
xbCTjesrQSb6v9ITBUpF8aL80KOLTCZkjwt764WLYmqV5Vh0JjVHuyf9O2ii
EHQq+9svQz2ngiLGUqxFYFG2lrHPVRePXsv8Nz8qRO3jgrYoji6uOMgsU7wg
BDe1USPTw7qQlHPvO14ghJCO3bYzU7oQWT33fXatELa9eBrqkbcabWoP+LPK
BNGuurV06dU1+C/yWtiBCAGk6k6yTCbXoGBf97SDiQAIeLqEL9TDB+7P23OW
CODUBi2h5kg98K/OEuD086Om4Pl2a3F9yDuuL41dxw+/StvAeAN9HC7gttda
zI+lDa2GJeH6GCCn8pK/8qH4auHsi4v6KFs21Jd9hg87Z4zjUkPW4vseA4dB
LT6Y/jtue2jPWuSLMUyaRPkwL7R4ZXfrWricOTYj/pkXaSumR0UE1+Hr2IKT
Eed5EeNT432sZR0+mfx0dTfnxcoIwTX9I+vwgYRPoBovxpJTJb/wGmA+vmjh
ZxFeBOxxum3kZ4DaxqmCxqc8cLkyb/aQZohXiTU72Zt5INIfo/hbyxA7tD6v
7gjjwa1Hw38VfAyxweO9+W5HHph/aboYe8oQen33jbqW84BrXqaseNgQwTp+
O9RFedApuIt9gcsIe2Kvjsr9pkNPJUib5mmE5oX791c/oOMro19oVaYROlo9
1mp20dFsrD/pdJz6/ljVIYszdKzyFquv+msEUrDQYGEhHXL5V6WJBmNc+338
qoYzHU/KNH54DxpDo9XZU9iUjrKj5Q+3/jaG8n+3r6Tp0iF2OXHvTScTbHXs
yPokTcfAzWdxnzgmEPoeJzknQkfesLWd1FETvDPLfFvCTQf3ZwWekB8mkMr1
OR/xkYarc3te5yqtRzX/z+eH39CwReDn1VP261Ew8d+xiKc0rF0cXn1/03rs
sghRuHCPhu/LBzf/PLwe/U+nAw7cpKFFx8hH/tZ6VL2aYv3toiHBqHGNxbf1
4B7pS5jpoFH7M19gjRgQur0rmH2ehm/q+GmtAoQVvvPa3kTDrVLpd1/0gY2G
WruTj9NwhOvrg4P2wPeooQsj9TSkxg50WQYB69yyPnQdocF++NiZTyygfv1H
DaVqGhRNM6srcwGHtE+ZvytpmD3ps8e8ChBjcD46ltMwsJhI/3gaiMwtTpct
paEuSyiyvAt4xwpSCyuhgTM15mE6BMR0K/xV2U+Dk/cVsw8TwC8x9d/BxTSo
dJczSueAOPKT4hKKf2smy68XN0XNvz/J1hQPltsJTyqbgn3169QXihu4VX7v
1zdF7sXSfYup+2+J/ztuZG+KbXEdvq0HaHB9PDz0LtAUSuoeNnfKaFA1b762
j2WKxQsTPUOo+OdO7z5rkGuKAGXm1oRDNNxfGnZ4rNIUEQZP278fpqFxh1Fh
0WlTfF7RQ/9xlIZt01IZa7tMUd4U6sVqpMFjw6eo1w9NsaDBvCHyNA3qPX1e
BROmuD8r+mG4hQYunToLvTlTGLTlypAXaRiuzCBeiZkhUH/XKuWrNJyieyrm
K5tBX5FPmKuXBu+nfHPP7cygPflm8cohGjQtRyd3BZrBMq9lefJzGribOx4x
WWYYMRvrW/2Ohqac+HM5lWbYN7G5Vu0XDTs/W9XqnDaDm5Vasw+NDl8/xb1P
SDNoTdyU4Balg4f5IEZrwgzLHjVsIVXoeHrwlM+jP2ZIyOTxG2JQ88Kba5Ul
Zo7F7MN6YcZ0+I+sXT6kZ47spvmcSW86CGtJ8Uw7c2yyunFjNIIO/pYPf9UC
zeGkdr/OLYWOc7tqnmzJMYeu2Oe26v10COrSi1UemmP3p5QVww/peFX9fNud
cXMYfm/m2feOjjb+C3GcP+Y4/vF0QddPOkJeRNsMLLeAtNQYfY88Dy7uvvuP
nWyBbetHGs4l8qDoW+PHZTkWcHAb71fN4UF4UPazGxUWEHn1ME78IA/E16y5
IEta4OuE7RarPh5EvqpKuCZqicmtuxavo/bVUi0u/kUqlthhzv9nC7XP+tIj
asPXWeJBTmCyXRAv1BcyHvKEWyKDLSOXVcGLKcvr62zaLZFv5xbmJcGHpJOf
6LfDrFCfd78hXI4fij89apalW+HnzJj+cvDjnkWHfkKRFXJfbv8WHs4P4sXO
GLF2K9T10po4Tfz4Ji4z6CpqjYnRPolBGwFwUi0ODl+0xqIv1QEzpYJQu3Z8
9co71gipeZbztEsQT8TE7qS9sUbJxEkHs2lBGBx/wiUtaoPWuoMae22EMPcs
YaNfmA1GvkSrLaQJY7tpJfOViC0K5hb4Re0VQZ7w9I3JUDu8fHd0ZGmWOLaM
T1cOp9nBJv3gdskacSR1f4q9VmAHg42pHWaXxOHN+SJW3WaHA5vWzVrOikN1
7Ju3i6A9LuyOrh1MkMC1S3/G287a43zW26nL0ZKYjxHg38nlCNeVyVMyOYuQ
clPFRr7GGd8tX2jXmkrjJb+tdN1ZZ6jQvDu9IqVhZxP/fsV1Z0wZDaZoFEpD
8UZrgdaUMxROnnBkPpHGxtCjUfLLXHCg4MXrBpYMFgavPq0V64K8jFU8f07I
Is7PS8+BzxU7rU7fs9aRh7xblc3u9W5oPTCjMNOhhCeba148HvOAzrkFQ5FN
K3HROO9Q+7QHSkSC16b2rEQZF8u36qcHas3bd2U+XQmPXMthP2FPpM+1m2Xz
quFO8dTtF7qe4MvtKTMPVENPo8HlsWxPnCvbYlYsvApNw8MHPyt6gVF0+6J+
mDqyCbEN/AHekLlgZD36SRNO767EdUZ6I59LXUaIRwsyVQnbk1jeaIs5bKgs
o4WWBXf+e7zLG1eKhk8vs9DC68GC2cYW6vtpqwm9ci2YJQoesOX3QboXNtxe
pw3uUzx388/5wHxFo6Jvog7uBLW+Nrnig+e+SR3fs3RQtTBidqbPB5mTaxdt
PqADIqNnmd8LHzAvF4catesg1G5HnIbABqQfOMG5x8VA9wSX4EDgBkjMVQS9
t2Iga8WchYigL5TPKL4PvMlAwpFfKXsX+UIhrntmepABf9kf9RIKvvCXsd+a
/JiBtRIz9MWrfbFxZ/Yjx3EGpufGe+QDfdEyK/QmhM6E78MHFowWXzx9qzsw
aciEjfO9lJZOX6wIeHe4yoyJNbfu1K++4YucBze4jG2ZECdv0teN+GJ7qBTT
y4uJGyev9pjy+mHNo2PXHicysXrHSQt3Xz90VtAfSR5hYvl8Y8pQuB8G7Z6K
Dx9jQiy9od470Q9hxUbc+Scpv5VQS/ff6Qe5/SefXmtjota3vCe8yQ/hgfsl
tw0wIUrssEjl9of+x5V7uSn/NXdqe8pPYX/ERAbe7Kf82eTKbfWbl/hjj3Yw
bw7l33qWpdMzNf2R1G8QfIOPwGaBxJ5dXv5YmCGRmS9NYPyVr0XlCX8s8r61
jpvyi+Ki779uPO+P7Mkr07mUnzQwTD+6+oo/aFuTDP5Sb3sFpeXcg/f8cX2N
7pYr1gQIu4ck7y9/vNDC7/2UX/VLC0t6yB0APrfo1qOUn91ZP6NQJxyAE7Gh
w8d8CTyaF880VgzAsICH7rZgAlvOORqnWAfgZeLy7m2UXz72amTK1DUAeZt/
LZSh/PQdkbhDYn4BSNbNr21IIqAUlf/nREIA7l184l+yiUCv3I320dIABO21
HerYRuCzrVf0mcMBeCVpmfOS8u/SaW+Xbj0egOdpdxy/U/4+7h6Ns/RyAH64
8Up/yyUgkQs957EArDfYzTQpovI9d/et3HQAjm48Y/JhL4HwV4Gl738EYOlB
wmZ3MYE2g63fcoQC4cl0tKg4QOBVpHC9u1QgSnNWMQXKKP9fetBdSSEQ++9N
icaWE/D/1N7SSQRiV9LE/gVVBHLkbEPzjQKxJMF6td5BAk22jyV8rALR0PW0
0+8QgcepkV0rXAJhm7hFnVVNYEH9bNLXDYFg9S3PSK8hoH4vR7ErLBBXE1+d
Sj5MwGN+0WBRfCCO+I9d9j1CoMFHV0c9KxCzR/jT/tUSuJvT/eJHfiCGTi2S
u1RH4GeLa9H1A4EYjTOpijxKYPmrV8YlNYEIO2P2mV5PwF4k6WNwYyC1N37L
lVCcYvDvkHZLIE5/91OQPEagJrLIYe5SILiqObNZFN84sGzu5vVAFElk1r6m
+HPXqZPldwPRqNuhsPr/51WfDP0ingQiwa04KZVic7l+Qd03gfigmVdynOI4
W98Oro+B4P1qkneb4rLUyeg7s4HQsGI5vab46lGO9CGuINxb9+ftOMUTg3w3
owWDQLrfdXpBseR8GUd/URCUC7h2X6fYUENVjUc+CHGOlw9UU+xmm6HVoBYE
+r4QuRCKoyIHCWvdIHR+8ByQpDgzZ8XaCeMg7BmxOtZCxV92dLPxbpsgWK/i
bwTFp7rumqm7B2F49MBQJ1WPay9VbPoDgsAdIKazkuKnf9Md46KC8HdNV2vm
/8/LZO+6ibCDsMtWNraXqjefgYpP09Yg9La0uvyh+iHvkx7gnEfFf8M5Sp7i
1al3Qj/vD0KW1OA5nf+fnx1QjiquDsInP4s1OlR/Q1s48URjEEx3j07LUf3n
DN5mPWgJwopW2puflF4ahDlbpfqCILNEKCeD0tdl9dvZbfeDECgbt3Z5JYGH
NsvzvJ9T92+yZV6g9LggZ2B/5UwQuu8qcJ2i9Lv0qFKFwd8gvM8fGBEqIVAe
fOnOR1owTBUDhX0pvTdtE39YJBqMJScs2F2FBNpFLnm9XBgMY5Oclqd7CPQc
iniiIx2M+KdZHq93E3jW0fFiUDkYnjHM+505lC/9ET4puS4YWRPJ+oe3EFiU
KxYXZhKM6Kf5opqbCShIdUyfMw/Gppuuif+lEdDTFfvm4RSMJxrrx6JZBMIS
2+fLwoIRoesO+UgCCfNhWeNRwVA/uptfMZzaZ4Wi9LUJwfAT/5svHkJg38kw
gSecYJxKvvDkMrVvroyLLJItCkYKd1G4nSOBm6kXy2JLglHh2Hqt25aqD0+Y
dGdFMObeqi9RtyLwQfmifMDRYMzXDnVcN6HqExy66vDFYCgmqI0wdQiwH7eZ
KL8JxiWT1rVvhQkcgnqW9EQwNCR4NQ/zU/uosfqa2MdgvDrDIu3o1PXpO23m
ZoORk/bnY+ofJjql3dyGBEPQYeNmrzLJBK/fx4hdRAiEfC6PPe1iQudacONW
/RBMeykInetkwkfj4Xu2UQjyrUPDt15g4uSfjsRgqxD86f/v0cQpJlwO5aWv
8w1BLvvKS9lyJqqeKxd+yApB/JIV5J8oJq5Zlt8dzQ2h9Lps/k8oE1OnBSUf
7wlBkqi+7Cd/JtZv+1LWUxqC27pBSk0uTIzJXz1SfTwEolc+Ne7TZ0Ir2Pe8
870QXFA95TrDzQT5et+zc4qhcK76Hpq9j4HN2hqaxStCYT++8oPcbgZWb76+
JUE9FLGGBpGnshholPi9bNXqUJzi/5t8gsXAPoQF11iH4j8FH28VDwaCa9a8
zUsIxSK19NuyUgxw+VJGsTMUY88UWQsUdIB7ytz8PmH4/aU0XueBJpKlav86
BYRh25e8PrUrmqjbIP+rNDQMMpeldksc1wTt9dLPyvFhWDPvPXN2myZ6Z0Re
rM8OA7u5NUl3lSbsF/1sTzsVhtxmzXchGRrw8h5IHucKR138yrR2KXXEPk8Z
7T0eji1Ehba41kqIMOdavo9FQHCvkCj9qBLuW62Qdngfgc8+rMGEPUqo8HfK
rPsUAVHbhrRRthKW5x2xd/4dgQrVM5YvLZSg99JirFFsI5K77hwwG1dEcGGh
lL/BRvhvdQ0d0lLE+Ul5TvfejfBp2L1BZdcypP+zfrG0dCNUL/gc7PBdBhOp
ZIvEqo1Y5xAeHq+9DDdxTVzu2EaMzx+WUh+Ww4vyyOObOjbCrn1To+BKOfBZ
NT9Ve7sRwS/3OF++IwPfOlPjvQaRUDnefCpz7VI0Hyw+O7A+EkL2vP6yEkvB
Wzq6QtAyEhuO3Bl5PrkELbuyRHOcI/H42ea6xweXQDC+6+Xm8Ejon5XzbVqw
BB36ptkbiyJBPrhmtHxICjK3ccP4dSTcS9MNvasXIql3n2HGeCRsRuw1ozMW
ovfqqzMXpyJxQObS1ZMbFoLVsr1C90ck0r5wf7q2eCFulZPRq4SjwJrXMrIp
kcTmUAhL6UXBcLy74nmpBJ79WO86tTsKdXau3dK5YnC65ZNztygKXpNn7i1x
F0P3oeT2lpIoPGDuvsRRFMMJ06NK6dVRuBinUh7eKYrNe3hneM5G4f6Z1n3T
P0UgrXB7v8LjKBQOORvK5Aij4MvbXu7nUahxW1SY5CMMrp75329Ho7BCiNtK
R1MYE1GMsFMfotCb7q03/lAIF1tKdNf9i8LB/eJvbTWE4G3l+9BNNRpG22+W
yE8J4NZSNr+eRjTKVT44KvYKwOTDHiNpRjTSx3PX7T0iANV9l+tfrouGnb5D
Z6uXAGafKG6Kc4xGZzPxVrOPH6Xx41K5KdEQd7hwc+4qH+XIuOyi06PRV7Tj
v89H+LBFUnqbw7ZoJCncb/XM5kP4Bbt3knnRKF6qY51ixYfVC5raDh+MRrXD
KkuBh7x4cCDFu707GvSH6WtIOi+uBCXp8fZFQ8EiWnX0PQ8a1eOk3G9H43p9
+rf8ezzYRoY9mHoUjdtqj+ibj/BAbcrNWfFjNP48PHOl34IHkhectONnokE6
L4hep8ODv1l2Ih0/ojFhVbSHKcOD+0vM+t25YzCZuelz1xc6tpgzrXctiUHb
39M/I/+jY6OolupDuRgU+m/Q1C6jw/WJGo/S8hi4te1auT2HDtVExWsdmjFw
GQzn6aP8ubiBXB0fEYOJxn1aV7zo+ENfmuWhH4Mfi9Y1woaOwSqx9dOmMTjk
0yv5QZOOjggheUPrGHySKDRZqEjHMQbf310OMeA9XLK6byEdm3vnO5S8Y1A+
MTb5eI6G8OLflQn+McCyhGerZ2hw9p/lXAqJAU/juT/LJmhQmfmo5xkXg42j
/ylUDNEgenlSqi6Zuv7ye/tVt2n4tevtt+nUGGjPSPy0vk7DmNvoA8MtMcj5
FLzm22Ua7ix73pKXFYNv3G8Xal+g4eLE4+Kh3Bjc0d1U972ZhqPnHiYtL4gB
ubxl2u4kDUXbBp0Ti2MgPMXDo91AA8d2QLuzLAZWwvWfa2ppCF3UJyJwKAaP
rHdfqq6mwfHltSnP2hiIl2YkqFfRsPbE1f66hhjQBAQlLMtpWL7p0olPJ2Mw
0ltw/OMBGkQoJ2x0NgaiMyrGKiU0/BQ8F7W7jeKjnXcniml4PdRkPXwpBj0v
eMMNKb595ISqclcMavZl/pGl+GJsA09SbwycdsWW5VNcp1c31tkfA8OUx7q7
9tNQuKDmmsA9Kv+Ph+5JUL/HGais8xqOwTDLJ069jIq/vDTr6LMYnE9h/xus
oOIPLQ7+/CoGhwMVcngOUfFrFa43fheD7qNeszcOU/H/zJPP/0Dp4c6I3dJ6
GoSv7fw7/DkGR4tN0mcbafhRuH1EeTYGz17cSw1touL32XIp6U8MzOZa9f3P
0zCgzKm6zBUL98MPmt500NA2zU4X5I1FtMDz2z+7aKhtT/TxForFkpVOOQdv
0pDqHLn4i1QsfnvapO9+SsO2rxqtb2RiERfl/on5hoZd5Z/dhxVi4cxoyvOc
oqHiZXrxpVWx2H+p5oUIFx1HdpgwmrRjcWXN3k11gnQ0rqTdPaIbiyaZnLGz
UnS0JxYI5xrH4tUnpe/QoqN7oetJjlksthfdjSbX0XHrgpRdrDV1P7t9/h1W
dDz9V7PLxTUWCjz2PstC6Zjbe5ZbNiIWIutK2g/V0EFfnVorEhML2gctvY9N
dIg8NgBXYiymuzVcL1ylQ16xZ+tbTiwWl64evfCaDjQP/zxTEIvJUN4zG7V5
YONxsLyuOBYqgrUx28144PozSK+0jMrP+N0JSW8ehGKSvflILDb7bpI9ksWD
HYN/pi3Ox2JjXPla3xEeFKSQhfrtsUhFz0Hdbzw4sDRHU/1KLLzvBzN2CvOi
Plg0RqwvFvF8frr5Jrzo/az49smzWIi13vNQaeSFoITVswRaHFS67K+HFfNB
slVwcwh/HIhBkb0VzXyQ3XB3qYcIxbzv1pkO8kGz1sdr3ZI4fLxrhI/i/HBk
xt6jacRBwkbU+Hg5P/a57rtR4RaHx9HNpWkdAlj1JCOF5R0HuQsnJwReCaA7
OFLJwT8OCiKbS/l4BfE90STjX0QcLgVyvzV3F4Rv0ZT2xvQ4iMrzFVycEYRy
v02Z7pE4TOVUzrtYCqPNYkHEnY9xkF3wJlVMXwzOA1MSjTNxeLqcNyotWgwT
7o+vZP2IQ7h8fT4OiUE27MzSNQvicfovJ23zAnFszwoYOLgoHn2BPR/iY8Rh
d6VdN9owHg6S4TtVLSXwXJ/FTd8dj1vJ27Zx5BZi6gJ8rYvicSh255sFJgsx
py/Wkl8SDxde7+edQQsht/ZUiERNPDJP5Mb2Hl0I/7XvSPlz8ZBfPP5SQXsR
nq31zVz3PB7HtY6YnbCXwpN1ZnMJzAQICzIsf/23BEOGkrNPniQgcWHrS70H
cqgz//ZRTDAJ64+uiS67pgwdjolx1Pkk/BsIXxJ4cRX2iQRvG2tLgkn9OYvJ
26swU5d1Nbg9Ce/PpQfHvlmF87d7TDdcSULxxYuX3UXVsVbZ3squLwlVAYv2
NIepw+yOt7PmSBJKNFP2pQprwEMlOeQzLRnNGqGF0p6aaG3fXxfHm4xFQ+bd
utGaWOx8/s0EfzJUDUdfrt+qicfpPyJGRZIhv3fCQOuYJgLubo25vyQZ99Jj
jX2+aWLj5nz2eY1k+CV5Gd3Zq0X5paM5HPdk5Nxqq9Hr0Ebdo8eOE57J4D6Q
9fJ9vzb6X4gs9vFJxpOtfOqFz7Uh/zGtQT8gGe+SezYc5NJBj4DDjdmNyfjh
9bryqaUOxM2/8W/anAyG1Z3OvgEdHG+1KEiuTcags9/36xEM3O9M9xg9mgxz
y9nQ0HgG5q41ybk2JOPTXPHHrykMuNxfeppxMhke5+8oze5gYHZ66van88nY
1fwue1MtA2ZqpWIJfcl4PXvR2eMpA0+r3u6P+ZQM5SijFn1z6n1dvoAhNpOM
Vu/u2de2TNTXEnfOfUuGTOP5PZnU+3tCY6bA31/JCP0dEF8QwMSCNunte+ks
2P923Pk1lQm1e47x56VZmNGmi39oYKLQ45vgBjkW+toOjdZTfmLmUVXjX3kW
HpgkaTq3UH7lxfgbKxUWYjN2z6VcZsJ5Ksv3iTYLiorr19AfMJHK12Y9b85C
kbnDJ1XK3zzL939bZ8XCobfE8Ot/TECUtsPalgVNyZntRZQfEpRyubLPiYVU
0ahf50UIVC9/v1p5Awvvvf6EGCsQ4G7Yd/+GHwsP59LcUpUJbFylnxQXyMKv
T9btNSsJMBg7T7aGsRC1s+/6ZcqP9RjLL7dJYGE0MPet7noCq7p6rk4lsVBe
/2z/uBmBIovYgGI2i3of5mLlU/7Ox/5ixVMOC+0btRuqKT/4wcdNLH4HCyVG
VhK/KL/oMvLzlEQuCz5d9mkrAgmcDzps15bHgpj09Qeg/OW2jVM5/wopFlPx
tKD8qGRK7lxxBQt/6drXt1J+lTdcYrPAQap+X5P/+5ZC4Lf7oR/bq1kgs4x2
+VP+dlS3ZSaxjoVH6iZa/zIo/6lsnDRez8KK743v120j0Lew72Pgfyxk3l5w
IGI7geavzyccT7HgWqNQtXcngfo3URuvN7GQvO7vdGEugYoHX98YnWVhQu+3
wtY8AtvPCbzUaGPhZc5VPu0CAs7sNUMCJAsWH64WPdlPwCyMdMvqZkFEfGl4
IOX/9dztB3/2sBCyzvvPg1IC8roh/eM3WTivVRJeXEHlpzxlEzTAwnCjP/NJ
JZXfwrTe4Tss/Le/oVXiIIHpmYKu6w+o3+M/8MyjmsDr10vWGw+zwOU5xQn6
//933a/rPP+Y0k+59nXfwwRudWsZaD5jIWx46xWrIwQut1y8cPQ5lb+2TJhy
LZVvnfka2VeUXh4Gn/1Mcf3+Oy37X7PgJTPwX1MdlW/2BobgWxauJX+1CDhK
oIA1djprnIXs+D275ijeHpqo8WuSBd7rEQkF/z+/cvvdmDTFQoRX8k/hYwSi
zHJUJ6ZZCFDrUNlGsR8hXh/0hQXluOiZlxQ7LT+o9Ogr1c9t14OJBqpekqqH
nWZZOPyBmbiJYj3us3K9P1nwjtVZ9v/zK/UZwyrjPyz8eecX8//zK/nXvUta
/7JwPI3l9f/zK8n7rqWaXGyYRdqP/v/8ird7RLKem40rjBHB/59f/T4buU+W
hw397foPeiierp0RKeFj4zZRaHCI4tfFW/cICrJh7aVuGk7xcBa/QLYwG9lq
6eNyFN9MLsn9JcrG8cULtHup+DtD5OnJEmwwOjdKBVPc7Ho8a2IhGzWjsTXv
qXrUm67+F7SYDaWMTzcjKK5gXt3yaCkbzxo+Vtz7fz2V7H47ybKx8GSmsPb/
6ykxlNa7jI1F356tyKDqH/XlPat1ORuXWgOdx6n++Y9u+qy5gg3XMztCeSl2
uceVUL+SjbHJRKXFVL/1zy6OLtFkw9vy2XE+Sh/qtbXvBHXY6G40TZuk9CNf
rBmezWTj4S3jn5eqqPokmwUl67Gx04NHXpfS35rnJi3L1lHxu8vxdZQRCLc1
5LllyMZ4cgVdh9Jrt9Lqk8tN2ai7dtzuTTGBL4WM+TvmbASXlFct30dA8bem
a4YVG7tOHBRxKSKQeX/Fjwf2bOTJOsVvyifQZLLcbrsTGyGlJaHx1Py8OCFf
renKxvYdywrcqfky2rHEPMeLjTcHRoveZxH4qSuwVy+EjSPifK/MOQRWHuF5
/TqMjfRmPVrTJgJewtxr9m5kQ8Y0ZScvm9ofY7+fjseysbTx/cXseALJpVOq
lalssC5JVDZS++TIgsl0y3RKH3nvfXOpfTMY/3bgSwYbQ7XxTW5+BLStXrDs
stg4t3PFygseBN7P3r3yZw8bovoXGc3UPpMOG5BoLGKjdLmOC82cgM3dvnCP
YqofQ3UmltQ+bPivS/B0GRtlLfQTpfoEwnzOeQXWUv0YajwdTe3TkfayabKN
DaEF5Vve0QgIqZaYxrezYbv35w11an8b7N97QLqTDU29femBv5mojMkzYHWx
of3T0eDAZya8ZDfnKg+w4cefu9FghIm7WwLkc0fZINdey8loZqLXN/7nijE2
5tju24dPMHFl7db719+x8S6zV2f5MSaavh3K5ZmiPnfKeLGnkomCuJHpnbNs
LBZxeXo8iwkbf7+rO4RScKtF/YysMxOk4YbgrDUpYG4Njlj7koGL0tEGSmtT
IPJKRbXnEQNnfnAWdRmkoGHKIsRskIGacxV9XEjBKuG1uxZ3MbBF4zFju10K
7CzK/BXqGFgn670gMygFK5/lv+wKYaDlt0fdlt0pSGob+Jp/RgdrLW39P+1J
wYZqtU0dNTq4utd4cWhRCjTjD9sNF+pgQEU137okBVxdbkkPYnXwzulHsmR1
Cr6XfVMeV9WBzNFK08bmFCQu+7V7X6U2suxfvHrwKAVW+ueNhpK14HIoUkFD
dRPcKk9aPPuujh6HJz9FBzdh5fdrF34uXoGvihv7TySkwvGFa+oXHQUI917r
Wpqcirs/ot5U8ypANVbpYi47FVE+AaOBz+Xh0zpSH8pJRVjTlqsKe+TRaeu+
TSY7FRMekbbHxpeBerQx80tTQbz+tnrBMTks7ZEpj+5MRZH41jguXRkwozmF
j66kwsnh8dgdYRnYiQ7vsOxKxS+bqCWX3klji09xklIvxWKB1z5WSWN0is/u
yd1U3Fv17cE1ujROSH2fs3mTig/F5ryJL5bAKPJuqJpgGgJ8L3WVnZTCvrwa
7X7hNCxblMR/NVcKb4/H/44XS8NAh4jsolApFE0J7T+3KA3rVXaMWkpL4VWy
TZeJQhr+dNsWDO5ehJ1buhQ8V6fBifFr+Dp7IQaKz41kBaaBiLx+RS9eAorn
shtVQtIg6yfTke8kgU0PXVNuhKVhoS2nYRFDAvJLPguJRKfh+bGpDf1fxZF0
SNOwgp0GHpc11v1bxbHov2OVTXlpGM3OkKtcKwa/znKvZy1p+Gig5zMlIAwT
O3tu19Y06C7bXbfshRCWP54/3XshDVl2x8vbW4Qw8TWCp6UzDZ5nxW8SAUJI
1Vh9Pq83DUqmMUK6FwSxv2pQQu9pGlYvJnY1ZQogVW3n5ZMjacgMOLT8jK8A
NrTpRyu9TIOCv/hKBT0BKN6vIYXHqM9LsM1pmh+nBeIT33xMg6l9++UvYfzo
4wjc3reAg5zf23Kzw/lwivcyh5fOgVnt9XUVVnzYeyBJZQsvB29LVpspreKD
V/OjjEghDpIiZBlFn3jxZvyYuokUB/E+ukFPsih/tmnD8LklHOROPjiyN5IX
J2gi2atkOFDRzRrpcORFkkLKk0UKHJx2VKIny/Ji3sss74MaB4MZo0RIJw9e
j33XDdHgoOe0T3TPMR5cZx1/OazFQYBGCV/NXsovFonrdxMczK86ptQazgOZ
3hdvK4w4MNTcvjJtEQ/m3fcXi67nQG464W/xAh6Mjloa7zTlwJf4m6TyifLT
f08dSLTigN3MuNTcT8eaNRnmVi4cTG9fwIrJp+Nhhpk6jzsH19MP3cpPp4PV
LSDR48mBd0t6smk0Hc3OFS9M/Tj4ntdvyrKjw6ks6DpXIAeK1efOTRnS8XFE
9dTVYA56iR76POXP1WNa0403ctDuL9D7diEdfc1bgueiOGhTP8ju5KMj8oe5
9aVYDowDxDLU52jgNRHS3pzAwUOngz90vtBQv/P+onXJHITpiNNuv6PBrL/y
zw82B7tvPG1d8JyGUYmQ122pHKxaT1t55wEN8oc/nVm9hQNJvrJK7Ws0dL5t
K/u6jYPkU0u6uy/R4Ke5bWtLFnV95oof0+dp+M2yDE/eycHlyts255poqGgX
tmfs4mBB8MXrYsdp0Od6yPy0mwPzYLUMej0Nw1YHlzYVUPUgfqcUH6YhpTD0
X9xeqh9+9ZfbDtKw8OGqdxr7qXqv1Q9MqaChRebLwPsDHBx47R94q5QGl5CL
546Xc/BceUPPxRIaPv2XWRVVRekhXKB0/X4aiqatslZWc+BZO/YgsJgGzTWi
Ue8Oc/Ao5E/2Yor7M4acjtVxINr6o24jxTHdh9aEH6P6rbNM15m6nl8gXE65
kQO1DzbMQer+Dc4atNcnKP3s+1I5Sf2+ZdnM5JHTHFj4row6SMU3NtI+GNTM
wQaVA6VvqfizlbMuyJ/j4A8nQ6aPyk8xxqbmeSsH+Uc7PppR+V9tFss5dJGD
f9f76F5UfQJ/DMf6XeKg5Eub+4IzNMwZ17jJXOHgvRnjtkUrDVU7I9Y9ITnw
WbA5VLGThnX9mooV16h6dLFpB6j+PJb4xuvdy8GhPeU1h/tpSPW59FHqJgev
ab8VzR/SIHU4++HDfg6myu1St1H9Pv/W9lLJHQ5enX6Q5zpOwxfW4zyJh9T8
CHTtukLpZ1/74cTBYQ6ePeg29eGnQ5sr0mvvEw78a9Z67F5ER1zhd2WRl1R9
yxJEz2rTIfiwU3BglJpXpdOc/4zoOC6z80v+GKWPX/7kans63v0neZX/PQe2
FwYCFsbQsXP6ybEbU5SeX3yLCd9Mh/Ka2oLcTxxIZAX12O+hI7hbx5f+nYN3
m6oujTTRMc//A9d+cKBReYMnt4uOaucrK7N/c3Ck+su3nod0GJXliJr+pfLx
H/arnKDj6YjD93//qPnXfShE+0vH/wBs7dUx
               "]]}, 
             Annotation[#, "Charting`Private`Tag$673855#1"]& ]}}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Coinc. per 4 min\"", TraditionalForm], None}, {
            FormBox["\"Measurement Angle\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           Thickness[0.006], FontSize -> 12], FrameTicks -> {{{{-15, 
              FormBox["\"-15\"", TraditionalForm], 0.024}, {0, 
              FormBox["\"0\"", TraditionalForm], 0.024}, {15, 
              FormBox["\"15\"", TraditionalForm], 0.024}, {30, 
              FormBox["\"30\"", TraditionalForm], 0.024}, {45, 
              FormBox["\"45\"", TraditionalForm], 0.024}}, {{-15, "", 
              0.024}, {0, "", 0.024}, {15, "", 0.024}, {30, "", 0.024}, {
             45, "", 0.024}}}, {{{-45, "", 0.024}, {-30, "", 0.012}, {-15, "",
               0.012}, {0, 
              FormBox[
               RowBox[{"\"0\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {15, "", 0.012}, {30, "", 0.012}, {45, "", 0.024}, {
             60, "", 0.012}, {75, "", 0.012}, {90, 
              FormBox[
               RowBox[{"\"90\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {105, "", 0.012}, {120, "", 0.012}, {135, "", 0.024}, {
             150, "", 0.012}, {165, "", 0.012}, {180, 
              FormBox[
               RowBox[{"\"180\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {195, "", 0.012}, {210, "", 0.012}, {225, "", 0.024}, {
             240, "", 0.012}, {255, "", 0.012}, {270, 
              FormBox[
               RowBox[{"\"270\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {285, "", 0.012}, {300, "", 0.012}, {315, "", 0.024}, {
             330, "", 0.012}, {345, "", 0.012}, {360, 
              FormBox[
               RowBox[{"\"360\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}, {{-45, "", 0.024}, {-30, "", 0.012}, {-15, "", 
              0.012}, {0, "", 0.024}, {15, "", 0.012}, {30, "", 0.012}, {
             45, "", 0.024}, {60, "", 0.012}, {75, "", 0.012}, {
             90, "", 0.024}, {105, "", 0.012}, {120, "", 0.012}, {
             135, "", 0.024}, {150, "", 0.012}, {165, "", 0.012}, {
             180, "", 0.024}, {195, "", 0.012}, {210, "", 0.012}, {
             225, "", 0.024}, {240, "", 0.012}, {255, "", 0.012}, {
             270, "", 0.024}, {285, "", 0.012}, {300, "", 0.012}, {
             315, "", 0.024}, {330, "", 0.012}, {345, "", 0.012}, {
             360, "", 0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 260, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"After Cyc: 0-0\"", TraditionalForm], 
         PlotRange -> {{-14.4, 374.4}, {-6., 36.}}, PlotRangeClipping -> True,
          PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox["\"\"", TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
     TagBox[
      GridBox[{{
         TemplateBox[{"\"HV Basis\""}, "SwatchLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    InsetBox[
                    Graphics3DBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    Specularity[
                    RGBColor[0, 0, 1], 30], 
                    SphereBox[{0, 0, 0}]}, Boxed -> False, Lighting -> 
                    "Neutral", PlotRange -> {{-1, 1}, {-1, 1}, {-1, 1}}, 
                    ViewPoint -> {0, 
                    DirectedInfinity[-1], 0}, BoxRatios -> {1, 1, 1}], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}], {0.5, 0.5}, {1, 1}]}, 
                    AspectRatio -> Full, PlotRangePadding -> None, 
                    ImagePadding -> 1, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 
                 TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                  "RGBColorSwatchTemplate"], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"SphereBubble\""}]}], 
             "]"}]& ), Editable -> True], 
         TemplateBox[{
           RowBox[{
             RowBox[{"\[PlusMinus]", "45"}], " ", "\[Degree]", " ", 
             "Basis"}]}, "SwatchLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    InsetBox[
                    Graphics3DBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    Specularity[
                    RGBColor[1, 0, 0], 30], 
                    SphereBox[{0, 0, 0}]}, Boxed -> False, Lighting -> 
                    "Neutral", PlotRange -> {{-1, 1}, {-1, 1}, {-1, 1}}, 
                    ViewPoint -> {0, 
                    DirectedInfinity[-1], 0}, BoxRatios -> {1, 1, 1}], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}], {0.5, 0.5}, {1, 1}]}, 
                    AspectRatio -> Full, PlotRangePadding -> None, 
                    ImagePadding -> 1, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 
                 TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                  "RGBColorSwatchTemplate"], "}"}], ",", 
               RowBox[{"{", 
                 TagBox[#, HoldForm], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"SphereBubble\""}]}], 
             "]"}]& ), Editable -> True]}, {
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "11.4`3.", "\"\[PlusMinus]0.9\""}, {
             "v", "0.99`2.", "\"\[PlusMinus]0.04\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False], 
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "9.8`2.", "\"\[PlusMinus]0.9\""}, {
             "v", "0.73`2.", "\"\[PlusMinus]0.10\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}, {
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "11.5`3.", "\"\[PlusMinus]0.9\""}, {
             "v", "0.99`2.", "\"\[PlusMinus]0.04\""}, {
             "\[Theta]", "93", "\"\[PlusMinus]3\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False], 
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "10.5`3.", "\"\[PlusMinus]0.6\""}, {
             "v", "0.77`2.", "\"\[PlusMinus]0.07\""}, {"\[Theta]", 
              RowBox[{"-", "56"}], "\"\[PlusMinus]3\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]}, 
    "RowWithSeparators"], 
   TemplateBox[{"   ", "\"   \"", 
     TemplateBox[{
       GraphicsBox[{{{{{{Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{0., 16.41742430504416}, {0., 21.}}], 
               LineBox[{{0., 21.}, {0., 25.58257569495584}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{117., 2.}, {117., 4.}}], 
               LineBox[{{117., 4.}, {117., 6.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{135., 2.76393202250021}, {135., 5.}}], 
               LineBox[{{135., 5.}, {135., 7.23606797749979}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{162., 6.83772233983162}, {162., 10.}}], 
               LineBox[{{162., 10.}, {162., 13.16227766016838}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{180., 9.39444872453601}, {180., 13.}}], 
               LineBox[{{180., 13.}, {180., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{207., 9.39444872453601}, {207., 13.}}], 
               LineBox[{{207., 13.}, {207., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{225., 3.550510257216822}, {225., 6.}}], 
               LineBox[{{225., 6.}, {225., 8.449489742783179}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{252., 0.5857864376269049}, {252., 2.}}], 
               LineBox[{{252., 2.}, {252., 3.414213562373095}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{270., 0.5857864376269049}, {270., 2.}}], 
               LineBox[{{270., 2.}, {270., 3.414213562373095}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{27., 3.550510257216822}, {27., 6.}}], 
               LineBox[{{27., 6.}, {27., 8.449489742783179}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{297., 2.}, {297., 4.}}], 
               LineBox[{{297., 4.}, {297., 6.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{315., 2.}, {315., 4.}}], 
               LineBox[{{315., 4.}, {315., 6.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{342., 3.550510257216822}, {342., 6.}}], 
               LineBox[{{342., 6.}, {342., 8.449489742783179}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{360., 10.25834261322606}, {360., 14.}}], 
               LineBox[{{360., 14.}, {360., 17.74165738677394}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{45., 6.}, {45., 9.}}], 
               LineBox[{{45., 9.}, {45., 12.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{72., 0.5857864376269049}, {72., 2.}}], 
               LineBox[{{72., 2.}, {72., 3.414213562373095}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{90., 0.5857864376269049}, {90., 2.}}], 
               LineBox[{{90., 2.}, {90., 3.414213562373095}}]}}}, {{
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{0., 4.354248688935409}, {0., 7.}}], 
               LineBox[{{0., 7.}, {0., 9.64575131106459}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{117., 4.354248688935409}, {117., 7.}}], 
               LineBox[{{117., 7.}, {117., 9.64575131106459}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{135., 4.354248688935409}, {135., 7.}}], 
               LineBox[{{135., 7.}, {135., 9.64575131106459}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{162., 4.354248688935409}, {162., 7.}}], 
               LineBox[{{162., 7.}, {162., 9.64575131106459}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{180., 3.550510257216822}, {180., 6.}}], 
               LineBox[{{180., 6.}, {180., 8.449489742783179}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{207., 3.550510257216822}, {207., 6.}}], 
               LineBox[{{207., 6.}, {207., 8.449489742783179}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{225., 6.}, {225., 9.}}], 
               LineBox[{{225., 9.}, {225., 12.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{252., 8.535898384862247}, {252., 12.}}], 
               LineBox[{{252., 12.}, {252., 15.464101615137753`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{270., 7.6833752096446}, {270., 11.}}], 
               LineBox[{{270., 11.}, {270., 14.3166247903554}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{27., 6.83772233983162}, {27., 10.}}], 
               LineBox[{{27., 10.}, {27., 13.16227766016838}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{297., 2.}, {297., 4.}}], 
               LineBox[{{297., 4.}, {297., 6.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{315., 2.}, {315., 4.}}], 
               LineBox[{{315., 4.}, {315., 6.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{342., 2.}, {342., 4.}}], 
               LineBox[{{342., 4.}, {342., 6.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{360., 3.550510257216822}, {360., 6.}}], 
               LineBox[{{360., 6.}, {360., 8.449489742783179}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{45., 7.6833752096446}, {45., 11.}}], 
               LineBox[{{45., 11.}, {45., 14.3166247903554}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{72., 11.127016653792584`}, {72., 15.}}], 
               LineBox[{{72., 15.}, {72., 18.872983346207416`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{90., 9.39444872453601}, {90., 13.}}], 
               LineBox[{{90., 13.}, {90., 16.605551275463988`}}]}}}}, {{{
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 25.58257569495584}, 
                  Offset[{3, 0}, {0., 25.58257569495584}]}, {{0., 
                  25.58257569495584}, 
                  Offset[{-3, 0}, {0., 25.58257569495584}]}, {{0., 
                  16.41742430504416}, 
                  Offset[{3, 0}, {0., 16.41742430504416}]}, {{0., 
                  16.41742430504416}, 
                  Offset[{-3, 0}, {0., 16.41742430504416}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 6.}, 
                  Offset[{3, 0}, {117., 6.}]}, {{117., 6.}, 
                  Offset[{-3, 0}, {117., 6.}]}, {{117., 2.}, 
                  Offset[{3, 0}, {117., 2.}]}, {{117., 2.}, 
                  Offset[{-3, 0}, {117., 2.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 7.23606797749979}, 
                  Offset[{3, 0}, {135., 7.23606797749979}]}, {{135., 
                  7.23606797749979}, 
                  Offset[{-3, 0}, {135., 7.23606797749979}]}, {{135., 
                  2.76393202250021}, 
                  Offset[{3, 0}, {135., 2.76393202250021}]}, {{135., 
                  2.76393202250021}, 
                  Offset[{-3, 0}, {135., 2.76393202250021}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 13.16227766016838}, 
                  Offset[{3, 0}, {162., 13.16227766016838}]}, {{162., 
                  13.16227766016838}, 
                  Offset[{-3, 0}, {162., 13.16227766016838}]}, {{162., 
                  6.83772233983162}, 
                  Offset[{3, 0}, {162., 6.83772233983162}]}, {{162., 
                  6.83772233983162}, 
                  Offset[{-3, 0}, {162., 6.83772233983162}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 16.605551275463988`}, 
                  Offset[{3, 0}, {180., 16.605551275463988`}]}, {{180., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {180., 16.605551275463988`}]}, {{180., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {180., 9.39444872453601}]}, {{180., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {180., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 16.605551275463988`}, 
                  Offset[{3, 0}, {207., 16.605551275463988`}]}, {{207., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {207., 16.605551275463988`}]}, {{207., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {207., 9.39444872453601}]}, {{207., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {207., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 8.449489742783179}, 
                  Offset[{3, 0}, {225., 8.449489742783179}]}, {{225., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {225., 8.449489742783179}]}, {{225., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {225., 3.550510257216822}]}, {{225., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {225., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 3.414213562373095}, 
                  Offset[{3, 0}, {252., 3.414213562373095}]}, {{252., 
                  3.414213562373095}, 
                  Offset[{-3, 0}, {252., 3.414213562373095}]}, {{252., 
                  0.5857864376269049}, 
                  Offset[{3, 0}, {252., 0.5857864376269049}]}, {{252., 
                  0.5857864376269049}, 
                  Offset[{-3, 0}, {252., 0.5857864376269049}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 3.414213562373095}, 
                  Offset[{3, 0}, {270., 3.414213562373095}]}, {{270., 
                  3.414213562373095}, 
                  Offset[{-3, 0}, {270., 3.414213562373095}]}, {{270., 
                  0.5857864376269049}, 
                  Offset[{3, 0}, {270., 0.5857864376269049}]}, {{270., 
                  0.5857864376269049}, 
                  Offset[{-3, 0}, {270., 0.5857864376269049}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 8.449489742783179}, 
                  Offset[{3, 0}, {27., 8.449489742783179}]}, {{27., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {27., 8.449489742783179}]}, {{27., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {27., 3.550510257216822}]}, {{27., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {27., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 6.}, 
                  Offset[{3, 0}, {297., 6.}]}, {{297., 6.}, 
                  Offset[{-3, 0}, {297., 6.}]}, {{297., 2.}, 
                  Offset[{3, 0}, {297., 2.}]}, {{297., 2.}, 
                  Offset[{-3, 0}, {297., 2.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 6.}, 
                  Offset[{3, 0}, {315., 6.}]}, {{315., 6.}, 
                  Offset[{-3, 0}, {315., 6.}]}, {{315., 2.}, 
                  Offset[{3, 0}, {315., 2.}]}, {{315., 2.}, 
                  Offset[{-3, 0}, {315., 2.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 8.449489742783179}, 
                  Offset[{3, 0}, {342., 8.449489742783179}]}, {{342., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {342., 8.449489742783179}]}, {{342., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {342., 3.550510257216822}]}, {{342., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {342., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 17.74165738677394}, 
                  Offset[{3, 0}, {360., 17.74165738677394}]}, {{360., 
                  17.74165738677394}, 
                  Offset[{-3, 0}, {360., 17.74165738677394}]}, {{360., 
                  10.25834261322606}, 
                  Offset[{3, 0}, {360., 10.25834261322606}]}, {{360., 
                  10.25834261322606}, 
                  Offset[{-3, 0}, {360., 10.25834261322606}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 12.}, 
                  Offset[{3, 0}, {45., 12.}]}, {{45., 12.}, 
                  Offset[{-3, 0}, {45., 12.}]}, {{45., 6.}, 
                  Offset[{3, 0}, {45., 6.}]}, {{45., 6.}, 
                  Offset[{-3, 0}, {45., 6.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 3.414213562373095}, 
                  Offset[{3, 0}, {72., 3.414213562373095}]}, {{72., 
                  3.414213562373095}, 
                  Offset[{-3, 0}, {72., 3.414213562373095}]}, {{72., 
                  0.5857864376269049}, 
                  Offset[{3, 0}, {72., 0.5857864376269049}]}, {{72., 
                  0.5857864376269049}, 
                  Offset[{-3, 0}, {72., 0.5857864376269049}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 3.414213562373095}, 
                  Offset[{3, 0}, {90., 3.414213562373095}]}, {{90., 
                  3.414213562373095}, 
                  Offset[{-3, 0}, {90., 3.414213562373095}]}, {{90., 
                  0.5857864376269049}, 
                  Offset[{3, 0}, {90., 0.5857864376269049}]}, {{90., 
                  0.5857864376269049}, 
                  Offset[{-3, 0}, {90., 0.5857864376269049}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}}, {{Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 9.64575131106459}, 
                  Offset[{3, 0}, {0., 9.64575131106459}]}, {{0., 
                  9.64575131106459}, 
                  Offset[{-3, 0}, {0., 9.64575131106459}]}, {{0., 
                  4.354248688935409}, 
                  Offset[{3, 0}, {0., 4.354248688935409}]}, {{0., 
                  4.354248688935409}, 
                  Offset[{-3, 0}, {0., 4.354248688935409}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 9.64575131106459}, 
                  Offset[{3, 0}, {117., 9.64575131106459}]}, {{117., 
                  9.64575131106459}, 
                  Offset[{-3, 0}, {117., 9.64575131106459}]}, {{117., 
                  4.354248688935409}, 
                  Offset[{3, 0}, {117., 4.354248688935409}]}, {{117., 
                  4.354248688935409}, 
                  Offset[{-3, 0}, {117., 4.354248688935409}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 9.64575131106459}, 
                  Offset[{3, 0}, {135., 9.64575131106459}]}, {{135., 
                  9.64575131106459}, 
                  Offset[{-3, 0}, {135., 9.64575131106459}]}, {{135., 
                  4.354248688935409}, 
                  Offset[{3, 0}, {135., 4.354248688935409}]}, {{135., 
                  4.354248688935409}, 
                  Offset[{-3, 0}, {135., 4.354248688935409}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 9.64575131106459}, 
                  Offset[{3, 0}, {162., 9.64575131106459}]}, {{162., 
                  9.64575131106459}, 
                  Offset[{-3, 0}, {162., 9.64575131106459}]}, {{162., 
                  4.354248688935409}, 
                  Offset[{3, 0}, {162., 4.354248688935409}]}, {{162., 
                  4.354248688935409}, 
                  Offset[{-3, 0}, {162., 4.354248688935409}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 8.449489742783179}, 
                  Offset[{3, 0}, {180., 8.449489742783179}]}, {{180., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {180., 8.449489742783179}]}, {{180., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {180., 3.550510257216822}]}, {{180., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {180., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 8.449489742783179}, 
                  Offset[{3, 0}, {207., 8.449489742783179}]}, {{207., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {207., 8.449489742783179}]}, {{207., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {207., 3.550510257216822}]}, {{207., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {207., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 12.}, 
                  Offset[{3, 0}, {225., 12.}]}, {{225., 12.}, 
                  Offset[{-3, 0}, {225., 12.}]}, {{225., 6.}, 
                  Offset[{3, 0}, {225., 6.}]}, {{225., 6.}, 
                  Offset[{-3, 0}, {225., 6.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 15.464101615137753`}, 
                  Offset[{3, 0}, {252., 15.464101615137753`}]}, {{252., 
                  15.464101615137753`}, 
                  Offset[{-3, 0}, {252., 15.464101615137753`}]}, {{252., 
                  8.535898384862247}, 
                  Offset[{3, 0}, {252., 8.535898384862247}]}, {{252., 
                  8.535898384862247}, 
                  Offset[{-3, 0}, {252., 8.535898384862247}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 14.3166247903554}, 
                  Offset[{3, 0}, {270., 14.3166247903554}]}, {{270., 
                  14.3166247903554}, 
                  Offset[{-3, 0}, {270., 14.3166247903554}]}, {{270., 
                  7.6833752096446}, 
                  Offset[{3, 0}, {270., 7.6833752096446}]}, {{270., 
                  7.6833752096446}, 
                  Offset[{-3, 0}, {270., 7.6833752096446}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 13.16227766016838}, 
                  Offset[{3, 0}, {27., 13.16227766016838}]}, {{27., 
                  13.16227766016838}, 
                  Offset[{-3, 0}, {27., 13.16227766016838}]}, {{27., 
                  6.83772233983162}, 
                  Offset[{3, 0}, {27., 6.83772233983162}]}, {{27., 
                  6.83772233983162}, 
                  Offset[{-3, 0}, {27., 6.83772233983162}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 6.}, 
                  Offset[{3, 0}, {297., 6.}]}, {{297., 6.}, 
                  Offset[{-3, 0}, {297., 6.}]}, {{297., 2.}, 
                  Offset[{3, 0}, {297., 2.}]}, {{297., 2.}, 
                  Offset[{-3, 0}, {297., 2.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 6.}, 
                  Offset[{3, 0}, {315., 6.}]}, {{315., 6.}, 
                  Offset[{-3, 0}, {315., 6.}]}, {{315., 2.}, 
                  Offset[{3, 0}, {315., 2.}]}, {{315., 2.}, 
                  Offset[{-3, 0}, {315., 2.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 6.}, 
                  Offset[{3, 0}, {342., 6.}]}, {{342., 6.}, 
                  Offset[{-3, 0}, {342., 6.}]}, {{342., 2.}, 
                  Offset[{3, 0}, {342., 2.}]}, {{342., 2.}, 
                  Offset[{-3, 0}, {342., 2.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 8.449489742783179}, 
                  Offset[{3, 0}, {360., 8.449489742783179}]}, {{360., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {360., 8.449489742783179}]}, {{360., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {360., 3.550510257216822}]}, {{360., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {360., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 14.3166247903554}, 
                  Offset[{3, 0}, {45., 14.3166247903554}]}, {{45., 
                  14.3166247903554}, 
                  Offset[{-3, 0}, {45., 14.3166247903554}]}, {{45., 
                  7.6833752096446}, 
                  Offset[{3, 0}, {45., 7.6833752096446}]}, {{45., 
                  7.6833752096446}, 
                  Offset[{-3, 0}, {45., 7.6833752096446}]}}], {{{1., 0.}, {0.,
                 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 18.872983346207416`}, 
                  Offset[{3, 0}, {72., 18.872983346207416`}]}, {{72., 
                  18.872983346207416`}, 
                  Offset[{-3, 0}, {72., 18.872983346207416`}]}, {{72., 
                  11.127016653792584`}, 
                  Offset[{3, 0}, {72., 11.127016653792584`}]}, {{72., 
                  11.127016653792584`}, 
                  Offset[{-3, 0}, {72., 11.127016653792584`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 16.605551275463988`}, 
                  Offset[{3, 0}, {90., 16.605551275463988`}]}, {{90., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {90., 16.605551275463988`}]}, {{90., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {90., 9.39444872453601}]}, {{90., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {90., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}}}}, {{{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 21.}}, {{117., 4.}}, {{
              135., 5.}}, {{162., 10.}}, {{180., 13.}}, {{207., 13.}}, {{225.,
               6.}}, {{252., 2.}}, {{270., 2.}}, {{27., 6.}}, {{297., 4.}}, {{
              315., 4.}}, {{342., 6.}}, {{360., 14.}}, {{45., 9.}}, {{72., 
              2.}}, {{90., 2.}}}]}, {
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 7.}}, {{117., 7.}}, {{
              135., 7.}}, {{162., 7.}}, {{180., 6.}}, {{207., 6.}}, {{225., 
              9.}}, {{252., 12.}}, {{270., 11.}}, {{27., 10.}}, {{297., 
              4.}}, {{315., 4.}}, {{342., 4.}}, {{360., 6.}}, {{45., 11.}}, {{
              72., 15.}}, {{90., 13.}}}]}}}, {{}, {}}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1: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
R3IbcArbdeTaREOHHF2iLGQbFMv/0lZwi4b9D7+XiWxjh25DaflDkdGwfa/I
pNxhDhCITV2/cDUa+i3v6h5e3w5s/vwJHNeioZ2jaOQnwgWrjkX/ThVHw+jv
WMW7tlwwvqdhMaosGi79SUq8W84F9X+/TFvXRkNib59tkjU32MbofODAokHy
BGMPdzUPZEVP1p3+EQ0eYZLxLg/5gI1s7E3WjQFZHeMHZ+8LQn+il3TqeAxE
eIvSP52SgF73CBoyGQPXxwfFK65JQMfeEwM9UzEg2JHSEdwsAXeWilJZZ2Ng
bFtV3bcZCcgK/zx/ZiUG/Fl9RwqIO+CQp0dnyvZYOO6n6/1BWRIwAzef0zqx
4HvkLGXtpRQ0rDqVJWbEglDlpe3zFFnYa2rhuXAuFojv3G6JnZaFzvOGIr45
sYCdWHYxyJKFl4SdmeaXYqHiJvVycJksTNn8IwsUx8LNa2Rzn9eyIFFecKC6
PhZ+pgjebSDIwWmr0a/vhmLhnCe5xeW5HLDnDRSafYqFd45x9l7v5SDna6/T
g8+xIKnEk+w6KgeFlLt9JeOxkCt/xFN9UQ4ar5+qD5mJhYHUqQVPcXmY/it/
amszFvzCO27eDJAHu6IgGZWdFKgaFrc/tSwPAn6v7gwoUsCAv2b49aY8vFfa
Y5SgQoGn249d5GHHv9dbNj2faVDA+UuZ1VEJBTgycKUwyIACyfUs5fZGChDB
3i1cYUcB09pbzw+nKIBav1KllSMFQpND9SrPKcDvK+e1/zpTINbq0425SwoQ
q+DhaOxBAUFnUTmbCgVINFrM/RpAAXMOhgmrbgXIjJXlkjpOAZ3G8D0qjAQ4
bJB6rfsEBVwSPmgcZycAD9OscvgpCsxYZ4i18RLgwvkWi4dnKXAi9GAQizQB
rtbYpLnlUqDhoY/1s30EuPk1kSmvkgK2Qg+EtkUSIPjmxAXDagpIsAtcMorF
65/IQ3Lfayiws32Yxz+BAHfWBEG7ngJ8qy/74lMJ0Cxy+8RAGwU2rnz48LSY
AN2HP9J43lDAot/L6U8fAYRPKQRnDFCg22daou4VAQLvRwwxf6AAmpKe4jpA
gG0STM20jxSwsfYRTRohgOUP5ZiJbxTYzn6PyDxHgGsSlAnPKQo8I9jpG/wh
wKx1p/3QNAUOCP047rtMgOxGR42Xc/j+og/Rkzbw+u504lzTPwqIhsyyLnAh
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
6IXmzeYd8B/WtQjF
               "]]}, Annotation[#, "Charting`Private`Tag$675153#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1: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
4c3yAwvU+Bxciit1mGCLyjBMW4wAS1LVfgvF3KstB6KXRaL+Wb5hEcVrrnKn
+nNGIoi49OcxxWJbu4Q380Yi2pyZO0cx82/hNcs1kagyOjEppMuE4il3Vz2h
SATbvRVSoVjTQuKHgngk6CrXif+fXxlOjBRKykSiRGr10P/Pt8wP1qivlo2E
8KPRRB2KHdQiepYpRGKfg8nQWopdX6jEzqlEwsTcmsZNsU/KLN+EZiSGm5VF
Rqn5gyWaLw7oRaJLxehzA8XRd3fad26IRNuxroIUihO3mX4izSJBC9nCrkXx
Lq4VOQ3WkeiJcrb+QMUj++ITuRqHSAz93ep9kOIC54IHJS7UeC+EzeUpXt+/
IyHeLRKJ5b5Gd6j43vMLkbH3isTNLztibCn2+ujSudY/EmoC5gNPqPz8iNmw
49+2SPBYnMwwozhvfr1cf3gkdp3OCaz7/3nXLoEX9TGRmDHmzxSg2CNvSjk4
JRI3/sSmkJQ+vgu8GjBOj8THu3c2r6A4t7w1W2RPJCy4c+PMKT3dvlD2riM3
EqZ0i+2nKP25ae7LrzkUidASdd+7lD6/3ogz3F0cCdv+ioI+Sr+MJ9bFGicj
cc2yufuDPBM3XTTNeKsj4d469+7teiq+r6W+fjgbCbeqHrMuqh6yJ+Zsyhoi
MTVmslBA1c/Uiuq/Sx5E4k6/ZPRJqv725hece/0kElmbBlXspan6FEpza+yO
RMPcY+dpql6dZTfVhbyOxOpWe1JAnIkm86XbOj9HQjk84fA3qv4dO6ZW185E
QjG05YQTjdLrple3M+Yj8X29AqOG6hdigZeFtZZGIUH4VYkmPxO7M7w7jtGi
EPR5Q+lbqv+IcNmkbBeJwrHzxnUzHEzUF2jKOkpG4Ux2+9Y/VL8aO7FyN5tc
FHapDYV/p/qb7e1mjTCDKOScxVzsPAPvLaqHTRGFtRHsv3V/UM+LpwUHxS2i
oOD899L8DAOX34SMd22MAvtnBa2t0wzQfgsc0w6IwsS9PeoXRxkY1IlnYz8Q
BcnKsY/HuxiYugYPq7woNL6iNR7pYOCPDn99TmEU/i4ReZtB9W9x3Qv+qyui
YLHfIsawlQEv3Q+kZEMUsngadTSaGBjQ9dilNxiF16M+l5XKGJi8LteX9i4K
bN/129OLGfilO69MjkfhvjlZ13aYAVG9I0OWM1HgyVqxTus/Bjz0Oo02r4gG
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
A17X/cE=
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$675153#1"]& ]}}, {}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwVmnk8VN8bx+1JSEplX2ZuIbKmUtwnKvvO2PdlEJqxjLFLWRLSQnaVJUTJ
Gi0uIkLKt9AmJEnakBn77/7+mtf7deae5fN5nnPOc19X2uOspTcbCwsLlZ2F
5f+/PiFqbzc37bBEcoZUMe8mqqg77ay0ZIeJzsj1kD5voIuCudMuc3bYoJbA
qfS6DfR83Qbjyagdtm51mJ/usIHe/NsrEv3ADtO6Ov3WpHYdfX/WzY3pYYft
ieub1A5dQ2+hO7/vt7fDWEp7jm81W0N9t3dTbc3sMPs/Ucdt5ddQxr0D55uO
4ePr30PjJlfRXb+WykJ32WGPlG/c4rJfRU0D0n/86bLF3uVUscm7rqBCxyFU
6rEt9uhp/hdjnRX047aFNbM6WyxZoliXgaygZ+7a8d8vssWutD2w/vJrGU2Z
JagEhtti0pZbTCWSl1Gz1uGWgkBbTLwppj0haBndnXpRp9/TFqvSbT1BIS2j
ZXK/rQ6Y22Lbgq3Fvu1fRjt8W2nfZfH/D+nM6b9mohePBG7ulbTFmuv2x608
ZqLm3FIp+kK2mFCAaoBGJRP9fCcx9w6rLZa9pjBjcp6JlocfkRlhkDCWA8ZP
5ahMNEjvRxXXLxIm6/g7OtOVia5Nmz/2fk/C+r7PaWxqMdFnTeynsl6RsI8z
ZtQtB5nopaSmgWfdJCy6QU8wX4KJiuwT+0yoJ2Gh23pXvFiZ6MS/l2SrShL2
WUQxIn+BgVZ0nfuTUEzCeHLe9zlPM9DD3t9YJy+RsJq5OPOkAQYqcPKNuvY5
EqbIY2W0jDHQWZl2ch6NhCkY+PPtaGSgz1jv5S2dIWH/yfE9GKhkoEXjeQOW
7iSMorfHTKmYgdLbklnuk0hYkjRz41AWA7UsClXbZkzCJGbqhicuMVAuJ9Pc
Tg0SZm9SaioXxUDHNY/1SyqQsH3CHTu7Qhhoq7DsZpQ0CXN9n2zIFchArzN3
qY7uJmGvc0dZf/ow0KARVm91XhJGF5PXi3BnoPpNv25ksuLtXRf23XVioDJZ
H17MLdlgJ2LOVyXYMdC1kJ51/Tkb7HG21cdNawY6bNmoXDZhg4U9beiUsWSg
tSq3PVlHbLD+b0yfH2YMNFXgcrZzvw3minL02ZsyUK/fUb0t7TbYESmThUAT
Bqr90ndNqNkGE+P9OLEf5701NkrB1TbY0TtGN5Jxnr+k4/Hylg2W19QjmI4/
3++vlCV/wwaTkhG0PGLOQMsMxHqS0mywM8t0i4v4+LGyW1cnz9lgHNHj2+Jt
GKjdliVFNNwGyyE+jRSzZ6Cq05Nu+QE2WESzcLaLMwPl7Rq8xnC3wfZZp1uf
9mCg0yWPu61sbbDdqafu/kdmoFhC5fJ9YxsshcKawRXEQPPcsxV4dWyw++2C
v8dCGWgonHf1PWyDtTGd25yiGaipJOXqMwUbzDHE4VfcBQYqu+HUJSVjgwlm
C/rrpzNQtk8GzOg9NtjSAkGyKZuBfnykceAdrw1Gj2hj9txkoE15BJdDbLg+
eZXj8XcZaGaEwJUrDGtMOUGz7VMTA9U9PLtkMGmNFShmrSQOMlCx3SNy5SPW
mHzPgtTrjwx0abHTiW3AGlMwJ7zGZhloVV1hR2uzNfYtO8EynZuJCh60yDiQ
jjPHoMyIEROd49VuT06wxmg+qj90XJho9w/5xS/h1hjHqWZJSzx/Iis5HAo8
rLE5UhTBIZeJThIfInxHrLHVxosl2/4y0cfsZXZ+itbYvpqwqXTuZTR78sql
LhlrLOl6tXCd1DJqePPM3xg+a+yLcHjqZ8tl9IGo5JNfk1aYove0fc/TZdRc
P5KyOWqFmcanjfu/W0Z/hb4lCAxaYXc5a7hzF5dR+ZeXUlUeWWELd8XP3FBY
QW/HM21Dr1lhgU99YneXrKDXv76eX9a1wq4MkG7NVq6iqoKK5TyaVthXrcch
CgOr6CvtFHtRZSusLmIVWfqzivLlaGPHxaww+ekMISnNNTTJ8G563KIlNirQ
Y9c9tIaG378gy1lmiWmfwz6KiG+guz9+/iCUb4lN55scfKi/gTZwH7u874ol
tr/3Rc5o6Ab6x/3vP70YS2ygl+F56+UG6rvLpTPVxhKbk/pmZJCyiTpEHHYR
4LLEhsiMqNcXWUBLd/aaKNkCi74vvG9Glw1aKxjyLs4W2Ak5HXuGGxto8HN2
3LSywJy+p2WisWyg/E7yDwIW2PqHeNXIFjaQOWtjrCxsgb3/3KF1VZUduPJx
q/rMMQPduJ+iShzwaj47LEjJHLv3nefrohkXGNuV8j5AzLGDsrH/6kO4oPfJ
g5IFUXNMgSvnXOkNLuhI6X9N5zbHCOyJbMLjXOCnxeHE1WmGzb94b6QfsgVU
s973K+03wz4pKa+fv80NXSeT7yX8NsGUD2udjJXZBlOKu1Xc35tgbybH8v3M
tgHbnrJ6tMsES2n9mnchehtof+94uJZngvHy7uXSH9kGD9M3OminTbCPx6mP
ljN4oXo4bMS/0Bjj2i95v5aLH677erFYGRlhKg3av41TBcAj7YQl4Y4+dqZ8
l6F9704gNskocrToYp1T7PcvqojAHzs2zrISXYwlc7g52EQEHq9OfDyVoYut
+GUybf1EwObErbRkT11MadNJbvctEUjql5zj4dfFcqem4hwEROH7pNjdHZ46
WG/Ph4n+n6Jwb/seOUm+E5iVSXps1W1xoA7tNgztOI5x9UUaXA6RggurRSkx
Ocex49o+hybipCCbuP95UtBxLAeyJOXTpKCVdvhkrshxzP+Ke+LNUilgF7XT
fhp8DFu4E9ci9lYKsjxzVbkJmlgq4ih+XF0aWhZFRQvOH8YmY2Gvz6w09IuX
2pfZH8YiuZOtfP5Jw9hphZx7Socx4Z6CMw4sMsCWe1yo/YMG9tfL5I34bhkw
0nLePq2mgSl9UlrjPyEDnxKL2JWn1DFZ7v23k67LAOse6bnOk6qYIPnYvLIK
AYjhHgrF4qpY/M9/lyaOEkB/pCQgckkFe3nb+kiiDgEybuz7qVyhgq3SrqaU
WRFAbK/Cr8JtKti/sLMG+mEECFINGv9dqoSlkEZquZsI0Dj/x62cpIRxCyqL
fnlCgLW6kAknbiVs5EvLrftdBLioFjHZe+YgJiql1SvxlgCl6hemSlQVMQES
9sdqgQDvNfJmbDF57HR3ahCfIhGkGWJ+/MHymH/DGTZ2dSL4Nhd/f0aQxzKR
f2+/axLh3+GyWZVkOezRu6vcl/SJIHC0dm6bqSx28xi7pognEU4f6/7T9gHB
OPsXhd2ziJC+qk+lpSOYxE344JVPhDeP+v4qoAhm76kqan+LCO7HX8/n3iZi
nLM1s4I1RIjW+rgY4kfAtlJ+3XjRSYQH6DxzP0MKo3JrbDvxC++PfqpP97YU
1vqu7XL9AhH8HuQUuppIYaVWMnt2LhPhxOnYCwf1JDHSrYDNHHYEpPj27uG7
KYYNvJVceroHgdHYp49OLoliXkxr8xwxBDL/eLlFG4ti7ZRCKxdpBFjePKj8
wRTGdqdUHKiVR+BzntHxFxZ7MNe2R1z+xxHI5p0fZ63YjYm4h6ffAQRMY3MS
j24IYRbl4kGvTyLw1P3ry4qqXZjdr669s8YIFMnGuSezC2JUZ5A46IQAKQ/h
arPfgRlcGYsZcEWAn7e/aum+AObSzbVg54nAypjKTN9DfkyihmVTzR+BlgBv
vov+WzGCd8LLZRoCsuZ1JOZubmyYuY9nOQKBHLXNYnInF5YRPyk9FY0AfSVH
9bQYBzaTJN8fk4DAzKevUY09bNho3xlLhUQEbNtVu4hhrJh7tWJBdzICAQK5
97kK1ttihRM9n6YhYDyiqvN1caVNYUB1WPQyAgeK+t90mjDbchKuLHldQWD2
AMtK/OZ82+fyaIXWLAR653PTXO3+tFWIJR3pvoHvlCFk7WiPH21/mjQ/P8lF
4GXGy5SlrvG2H7cv/ThbiIDwUQ4n8u/htlC5bQbyxQgoVg4bd5b1tDHM1pRf
3URgbCbtolV/O6rW+O3KWAkC83aukfcT/kNzQxQ49MoQCNViKh2SHEO3jIcv
5JUjoMWeZSJV/R3FPpdrcVYiEBvmLuu58gtVkNO6JlqFwPhCNqsVcR5NzUEd
xe/i/iquB4X2LaIKhvRrPNUISPt4fswKxu8xMWNHv+CsU9xr0Cy8gqrmZRvf
qUHAY1SpeRRbQz+qzveS7iFwfkc2cYW8iUrwUGr/4myJbPSkb2GFo0KPN8Lv
I+Bw8Rs14yQbaPru6Z3E2f3nK5HL59iB+mWg6FgtAr4WrZ2Xn3JA8pVDcQk4
UxpLAjJXOaFhtNuvGedw4XShK0e2wOMoMZf3OMfG0J5eCeOGprwFxx84J024
kq/WbYW0+gOeszinnzIQuPabB1Rvd4eM4Hy9UrXlmgIv3Ls5k16HcwGfmMd1
Pz7oPT36IArnEirntqxyfrh0ceOzKs5Vb3/VZ33ZDmGt03tH8fmOigUcNMoU
gOAkbeczOH98OZ7Qd3AHZCy+rZnD1zsebzNiNLADyF7F25xwnlJ9caD/jCA4
pt0Pb8H1mpnSjjfm2Qkx4VoLHDj/yK5/01+xEw6fvx2njev7S19WzkRvF3Q6
OUj44H7MrxTEDHzdBQYbbK+jcL+WqncMmVwQgv67TrlxuJ8rLkn7XsrshqHf
BhHUCgRYO88OvnTdA0K1u1Ikcf85wqYIZht7gBDv8ehDKQLc++3pgwV7YTiR
uD0Jjx+BSzrSr94JQ7SEi0wZHl+7tJrDzOkiwHHN9pswHn97fh948Wq3KPz3
r2ckGo9PCSuhkNdWYkCvydDjy0NAhjP1ucW8GOzsDRvQzEFgX/OG6FCmOPy0
WrlEysbjV3Tm2dCABPjkh7fbXcXzneq8bbZECvw+L0SlXETg5osbh+QXpICN
/6KaLJ5vtwlDrv460rAz2vtk0wUEyt6ebpgdl4ZP//ouFMYhUH1U2fmHOAGM
i7K25YYicO+qf/KBQALo2T/dU01FoPZH6YMzjwnwWNSgvCYIgYZCYa45ByJU
Zlx2j/ZF4BEr+/05PA/1pCKW9R0ReNH7luXXDlmo6kp3K9XC/XWM5St2lYWg
aqcvTUcR+PZzn4h5jSycahhff3gI11OQrlanLwfXFs/tSVNEAHUQ8aHFyUMI
uqMuCN8vG2Zd+jbmFODd2dp0BQYROqK3jN7XVISvWtu0j88T4TV/7ZRbiiKo
q6ZsPf6TCL9UWTc6CAfhm/zAbt4vRJCLKlFOdlCCiRapnb8HiDDIufhiy5Qy
vCy8ptF7kwjDpvoW4zwqwJv1aP/nPCKM3SgYeaiiAgeS77z5ep0Ic3Knpvzi
VEB6Yzi9K4UIPKbZ630iqhBRxfJw8CwRTmYfUc60UANxyQJh4WNEaNkXk7W3
7RAoP04QHOkmAE3te7D290Owk8C5FPyUAKpgY+61UwO6ZluebDQSoNpecVst
WQNKo7frTpcSoCjtU7yewGGI/Wd0kHGOABfmtQJo7kfAebNfSwU/v82fbui8
YT8GhaLfHl8tkIFFeWDqEQHuu66YvzkmDS+yhKf/HgY4x9E8PKIsDTdZFv7L
NwLoaP4PGUKkwWi47P7vYADjVeuQu9ul4fa5beQb7QCTa3pCC5NSYDE6/Hba
5QRkdgwuzyRLwb3EwPrEXB3gTwjU4suRBPJ4XlAn/ykw5sn2nTgvBim8v55/
9zCE7q3FUSZXhSD626/c4XBD+IqdOKIdLgSUjt9nOtMM4S8reueQkxDY0v9u
L2wyhCrpjYSj+4Rg39SirTmPEZQ3HojJb8Xz9NHqt6YHRmAUu+f2ytRO2PDf
yn2BxQQUYytf1Z0QhNBeor5EkRlIl1jwgCk/fOY2EL79wAzOBMVVisjwg6F+
4CzShfO0Su3eJT6Qet6YpjhnBlp1RZrxRXzg41HiKyFuDnGOhjJcf3lhp5t6
jeIZc2jrHzVXK9wGAY4kDeMtFnC24cOi+q6tIBM1I8G/wwL491dThX5yw0he
5JZXIhYwb3CChdDNDTrvi0atDloA/MoI6aZzw177b5GONhbw4C5nksb4Fugi
0dv8Syzgc3j0O2YzF0hY5ulfRC1Bt+zR+89pHNDuMZ8kYWgJI8ntLlJ+HOAV
YthVb20Jd5WoncWnOKDq+sqJMT9LeC9s6+W0yQ4aIw7H1K5bgqlztdPbMHYw
cRI9+GnGEjpmPMS3nGWDPwEhAcELlpDMNjtoZ8YGV2P6qrZsWIKePmn5pxIb
jBZF7VfdaQVMrtqOL39ZwWvig1SylhW0Pq+8xBHBCtE+BTtVrlpBz4mSH1bX
WUAyfNGiu8AKJiKG51bpLNCRbJzpeMcKDE4ukX84swB35Rpv0mMrOKyENd+S
ZYFrP5y4PkxbQdQXdtGphE20iiK+fOGYNfwTfyNYyrqBmpwLOyxy2hq6mFWc
e9+so3+uDITdN7eG3X/jWqXvrKMa9THz77ytoS8q4y/DdB3t+Pfpx8FMazA8
eYK1tWwNfRdZNDY6ZQ3EDzY9X86uog+1UgpaflnD1t8n08F0Fc1mCXbIY1rD
K+ugbKLiKmqddGrYkdcGmlUdKefnVtCXV+YGxtRs4PFK+vRt6gpaYz18qU3L
BtiunqaD9QqatgczuKlnAz6neuTIh1dQg8JrXe6ONpD6o6TbfHMZfVah+WQq
wQbIkbN38rKW0dtniFFdaTaQdfXoZlL0MnruIP/R8mwbWIIagQ3PZVS7YaKB
XGUDdI1K0XT1ZbSlLaV69rUNaBiX3FX7yERzEoL9+z7YwPLGakPkcyZKO+Uk
W/3VBjKtxl6Z1DNR9T6l0sBlG5Bwfjiak8ZE7w0P5/+RIgHzTalw9ykmmpaL
2b+WJ8GthdD71ENM9IxT1Z46dRLsycwNrEKYqOxkzLUQfRJ8npx417mFiW4p
I1tYW5Kg1GEaK11moNNki+2HnPD+fFh0ds4x0JKfxEtLZ0mQcKSMnjvEQBNq
+Q1GIkhw40eZy4NuBuoWwuR6eJ4Eb+vuoLaPGKjEcl9CxA0S1New6JuUM9C1
R43gcIsE7UecbxQWMNAPscUbmndJUK3ZpRJ9jYHmcIRErj0lwb4v0mlTCQyU
9tzpyKceEhSnlJ8JimKgNqmnl54MkWDUh/Q2KZSBqpsoNxR9JEHJqNWwYhAD
FRQQCY6bJsHJ1QeRnr4M9O8Qu7LbHxK43Qgd2O/JQF9l/fwJKyTYxps5GunC
QO/ZjdyV5rCFz8e+lzo5MNB00XY/Nn5bEIy20RwgMdCAsar9X/bYQmJiXnG/
FQM1vHX9a6e0LfwkB713sGCgcl6xJaUHbOF3bPjvcDMGyr3f1z3xkC2Y+hlP
Ekxx/b5bSPqgtiDEFtroYsJAu6qPfTptYAtPHL39ZXEuPYvk77eyhegnyazn
cE5Q3W7P7WwL/rdVI33x502nnwY8JttCSvLjaxzmDFQkLyieEmwLmRKh/vqW
eP8mEteJMbbwwcFwWc2Ggdaxvrwzmoy332g5+tyOgcY2xjxKu2oLHOVdBDZn
fP5+ioNQaAutn1drptwZ6G7xT5OLd2zB6ljIQBCZgU6+SluqqLMFEe/+sJuB
uD4XjvM4P7GF8+9VciNwvSOPzInv6LGFPVvtZFdwP07P5at0DdlCLSVGUOYC
rv9No1MRn2xhsMf/1N80BjpmtWqnOGML9nIhNeRsBlq15W7AxLwtxGiEHkq8
yUB1zvJcN+C2g/jONIPGJgbKT2i9sy5oB5Fsu0ufdzDQ98N+jx6I28HC+6hH
8YMMNFi7d1JYzQ5i+5/WTM8yUO15+tKAlh3Ix/kbXcPjladclidB3w5OJGce
mOZmorf5UlRmne2gmDgvGyvHRIPaD58q8rWDxofu6x2aTFQz7JudZYgduOk0
JNQYM9Ghj6fjW1PsgKBwbiM4mImyVXMOptbbQWc2ebO1i4m+dG2c1H5qB84J
Typl8fzM2+m9NN9jByFvows0F5ioatQzcccxOyi3vHfJkLCMehieDziw1R6O
/ua5vuvSMnpwQzX+8057wOjTGUXly+jKg8lr1yTsgV9pla+vYxm9KqzzaFXN
HngM6/J51pfRjhkWnn4XewgGl1axiBU0o6BWPN7PHs77rJbV566gDuZuKuqh
9oDofluabV1B55vb7Aou2sO0eFLR0c0VVCY59k5Agz0EhfdeNr28ip5D1k7y
8TiA24veLv6BNTTo5nLo5V0OENjcO/l0aQ11EmWU7pB0gEv6Xy9wSK+jR3bM
c+xWd4DvT/b/MA1fR3+tfXsm4eIAwaKv197Kb6AOb/47qVznAP9dfLjVtmYT
1Td7HVr32AEsz8/sVh3fRA+9eFmq/twBsv8dUH25lQUEsF6Oox8d4PWhzXP8
2izw/G7bsxNcjhBnPMgYr2QB9fN3T1o5OMK57j33czNYQWajIvStlyP8LHNZ
9q5mhe0R5aW2Zx3B1QzdT3vBCrNBtzicLjjC6U47efctbHDL4cYzr3uOECuy
luVwgQ34Vc+fpLE5QX5hUGBxKjt8G3c4mVvlBN7I94Hwbk4Q4J9d8GlwAlE+
bsK975ygeSyiRP2pE2RyWhfs4eOCtKwbbK9eO0G3cM3fBGsuUDV8g3EtOwEb
i+bL+q9cEF1vohWq5wxpSoFWOju4YUcSaJhNOcN+K+ujUpd44NiBfbKcEq6A
Tk381VzeDpYGUYrlsjh3Wn3wExIAX/IrVT01Vwjd3cpqcFAAsksitS7qu8K3
WwZt2m4C8Ed00JIvxBWOaFb+Y+0SgHJeeoxQjyt8YqZdabqyA7gZXt8Fj7qB
ucv4MSONnRAy2qRN+OIG1ZxtdFLxbsAmMz/US3nA35ku6dRd4hB58IDCFcQD
+ggP+I0VxUE9sis6SN4DvpG1L3GeFoeKHSvicuoeoKUyGO0SLg6Z4OlWpOcB
BlV6+iXvxMGt6NDXlCAPQLPVfpoXSACLw/tfzo89QPmowdQ5XiloLQtFj7V7
gOzed5bKe6Ug9C9/5t5uD5gef94+QpCCmRRdlf8GPeBhTa/hjmNS8Kq5OkT/
iwfUq4XXKfhJwU2hOKYqjyeo7dU1ne+UAnhNYOO284SSRSPy/hBpoArdWjd1
9oSbxiJIQyx+P7WXWM7y8IQbOi35h1KlgX1y7x9CoCfkm2eY7b4lDd3zfGNo
gickavKJGb/E77e7mC3h1Z6QcXHnn5B9MkCy7ad+Y/GCKJci3e0DMpCUbxB4
kMsLdhxEazhGZKD5c7dv2DYvuGn/48uPcRnY69vuyr7bC15pxnhcXpSBD/Qm
E8kDXvAlZ8NCVpQAbnk35WxtvEBjMuTlZW8CnPkUOtFd6QU9a065Vb8I0LrS
WlB/zwviRN/lyC0RgHsvq93Nei/Q43wimrdOwPeN9JcRT7zg87PLIWa8RBh/
XvZI4bUXJJSpzWyVI4J13XDWVaYXWNDu7a9zJcLtQTGLuHW8f2kRNl0fIvyd
8+ANYPMGVefZS88CiJCx/3fCKV5vuBFVGJ0bQYSegi0UpqQ3KOr8jb94lQjH
k48Yuuh5w7HMxdnwdiKklsZyGhl7g+vO04f5nxPhXfsz7LCFN0R7/Yi63k8E
2pr54R2O3qBWfuEZZYQItVQ/4rMgbxiiTR4izxGB6JS3IZftDaEd14R0dyIQ
HDHesjvfGyKvk06+2YNAe/a+MPab3mD5p2LIGq/fXF7X/fhY6Q0WsbxzBASB
nNN9o5efeAM1RPbAMl7/8ams1f2b8obH3M18EdYIDJ1GhI1nvaEwZHWvnh3+
fyfTuNu/veHlA00+Vie8Pk65aWS24g0Pd7dcPuKJgMbnk1MV232A9d2cZCMF
gdXFQMPNXT6QfWRL1kQIAhjPjVobER/o8O9t/P/7LCON79FsiA8QDBfG5qIR
cEtPF3LS9IGlviSRMbxeRkqaoupQH4A+Ew1yKgKzDz9PcJ/ygdL8+r4PaQiE
TancazTzgYSQZpPkKwhorjjs4rXxgZnEf0pPryHAInAh0sPBB0yyBcPHsxBI
PTZ8eru3D6RslZb+louAmcVmtbe/D1jcl4rqy0dgF1l25+OzPjA+JyqbX4hA
8dXIz76RPiDyUOTM2k0EvCpKTrXF+cDdjfzl9NsIyD/tvyuU6AMxrrv6eUrx
+vi7BL3jsg88dhlX6i5HIGJTb2xvlg/Macg84qhAQFuIevJsng9YVx2OPViJ
19sH8qq6in3gxaFLNN0qBHqhU0CszAePk8ZbuncRyCDN0YKrfGD7+Zj1g9UI
WAcIfeq57wN8BqPJnDUICCdo60o2+sDske/az3Eeu0GuDGv1AcoSq3ToPQRK
ajK397f5gGrgbQXe+wj4draEyXT5wPf/6G6XcVZ8N/mB/sIHHO+7P1rHef7X
Np3BQbz9Dfm4bS0CzRyHKpC3PlAT8GwyH+doERf+6Pc+oLYwVtOHs45ycujQ
Zx8Y0DQpnMZ5y+na97JfcT0C/qudw7nf8R3EzeLM7TXzCeerVLY7b3/7gPO0
5MlWnG2TD/Ap/POBenXSs3M4ixVahySs+ACdfsFPHeeJuph3o5s+MHmJpD6E
z6+8pxxV4iTDUkE54ojzmbHBskQeMlw7EKM9iK9XeZG57eN2Mqhv2RF/EOd/
W2WCVYXIcNj4+Q86rk+rpNFoiggZnrmpnb+H6xl/KFT7syQZTP/u1h/E9T5l
VFh6CCFD1Zz78Q+4Hzzu3Txp8mToilP1GML9ekX7TZlUIsOcwNtHDbifDrdP
aF3WJAOlu2LXMdzv2vwrD/pRMhy6rVPyFY8HrqwJhOcUGXpujipHlyBQl3yO
P9GMDMkFx2wC8XjiPvc6ocOaDHu/XJ9/XoTnZ6Q0Y9OeDMdfsxXw4/HHE9j+
OdKLDJ/ctsm44fHq5rPD+qEfGcZ2pnCduYFAk6t7z78gfP3xn7g88Pj2sGR9
QIkgQ7H/3YBdeD60Hj6R4JNBBpNqU4tLeD4JqFxZKrlGBv4vEzcYFxDwkZ/w
n8ghw5E3g9LmCQgIip+zciohQ/rdW7u78Xz0Z2snWj4kw0BvkWI3ns/YqkDu
5Sdk2NRwP5wViMDuf258Ax1k+FWS2WTuj0DHN5YlvQEylH9xUknH9wORAXiu
NUmGfJPRaTEbBNcp81jUN1zvezx+5hYIdLeN3384h6+/X6WQYoLvX3XxOWoM
MsQcajoefgqBFzcwPzleXyinsBkVqSMQ6QG8Qhq+kHjV46njdtwPx8x4y2O+
4Jm2t9CFB4F9NuOLl8EXBLiru0w58f1LL/4Tj5EvmFv9kmSsEEFeEbvH4uYL
rQaKqn5fifCBgVrMXfSF1PV3wp+aiGD6wi5xMMMXzo/knCI+IEJHAbWl7ho+
Hqb/yvEuEapOlEhHFPpCz/ZaxYJiIkRe4prnfOALy65uWp7JRBCWHLgqOeoL
ObwZDbusiWB72uGN5T4/sA/8PeswSYAXe0O4NQ74wdLMl5Vn7wmg/ePScWFl
PzjnI7ks9R8B9mU+Kf181A9eHwldvtdJgKV3UmEBJn7AtZRQRCwlQFbgN6Gk
UD+wknkbdt6DAP9dD7Vt6cCfJxfZRL+VgaeuFA2uHj9wur8zO6JPBirkA4Ss
Bvxgr4tYoW+7DMRinv/NjfhB6eBxW7EaGZCdszST+ukHif+ez308LwPRuip6
yXv8QZ83JGX4oAwQ539q2AT4g53w537zKGmgmZF3/xU6Axxe9i+efZOETIvM
5zmWAWBKyTbDCoXh0+FgNo6LgZAxnJ5Mt94Jc83goJcRCH4PdVFWzZ2wdnh7
Xeq1QKhvCL+eJbkTxI5Uu+8oCoR31SmrE7OC4HRkGpOoDwTrlMmF7QmC8OGI
Q9zRT4GgoXD999+6HfDuqM5akEoQuM23T1hKCcBMi4B1nUYQLHptVD7aIgDM
o5/v/jsWBDWtCb8Cx7bDXs1ox+jTQXBUc/f3vujtYKfZ1HrRMQhMnojQSI/4
YURTPqI0MQg4575/YwE+eHtMcOnduyA4HTwXTvHnAbasSr7OsSC4wSjecuME
Dyj/AqT6SxCkX7vTNrOXB9JunrWO/RkEAetO7/l7toIO50CdDOtZOP+KiyNI
divUvkw+e0b2LJxp6nRv+bsF0tzXZ9ZoZ+GP4dF90RWc0Np6nWU66iyYZfhH
ZiVywsxOhb2D8WeB/9jqp0kPTtDtdtC7lXoWxFL/GxGR4IQV+Ydlp4rOAnf+
z5tcNzjAdzHYI6PrLHw5++caxzV2uK27+HM7DwWobfcPajWyQmiAilkLLwWE
WCNHmNmscDorqNZjOwV29be4rNBZ4cf0THDjLgqQzkrseKXFCuqpnxgOkhQI
VxGSHHjBAl2vulnL1SnwfajV/OLUJpqzzO5pdpgCy5px04zaTdRf5sQz5lEK
OPyI+LUcs4nyhz5KMkIpYNieuLtVeBMl7and9teAAnL6Qb0adhvojHOu0HFX
CnA1bWbG/F1DW5OGaV/dKXBtb7ShzfM1NO3+ztEMLwoImk1+7S5cQ1VYM/Im
/CiQIeivHGG8hkaWJkgmh1Jg0K0Qv1KvosYDbfHK4RTw2jNt/ebSKiqxtDbx
LoICtxKNIqTJq2inXnipQhwFftwMHb4quYry/jgjN3SRAlJm4Wfe31hBx3ZW
pkalUeCUqZkbPXwFrT0+/YN4mQLvLi5ZNtquoDYZbvfCr1NgqEjQgE9kBS1S
sVETL8bn18s2eByvJykOV69336JA/9tAwfepy6jO+cF/Z0sp4L+Q4rKXsoxO
vzF42FFJga7euVX68WVUia6t5dtAgdvjsmde4fVsJp9b7FQTBS4NS1f8fc5E
52+fa3NrocCWzP+6btYz0YaBZyfsn1LgcdcX7co0JirkOZ3wFsP93Wb7lS2S
idKYW55ZdFJAY0812w8yEz1CMDpt2EOB0/GOCuRTTDT3YUBy9wsK+DZoRK2q
M9EVk4wenQHcn4+LXRIIE31Cf214bIgCYlOnewS3MFEJ/oVLzW8ooFne1vKF
yUDjS3YNqI1Q4E7tlMjJHwxU56WtmcJHCrxvl7he/5qBlnhGZFaMUQB5Evap
o4uBciznvSZOUIDj0hrTvZWBdhPGrMSnKeB4QWPdrIyB7m/ZvJ47QwH3ngT+
4nwGmmIqPSz0gwKv25V1Y68yUKMILzv+PxSI3L7k+PMcA63mT8pNnadAw2Om
a0wkA+UvvfOe6x+u5zW154UhDPTs0V7R8wx8/UtTRaaBDPTVy1mnzWUKkBnq
C5fJDFTFi7coao0CHqcODbp7MNCry4qfGRsUMNs5cfyZMwNdyDCTCmWlgieX
+KlmewZqTaS6/2GnQgmx+bcmiYE2tly9HcBFhdkuH10zKwa626zhyww3FeaS
+k8tmjPQ8Km3RO9tVPDWDl6VM2OgoxEM7wk+KrgvviD/MWGgR7cL33EWoELC
B9V0PZzzSjVn3glSId34d4ASzmtHneRIQlQY7zy4pQJn58EY/6E9VDg4we34
wJSBPvUqvmsqQgVVv1gfI3w8qRVs7oUYFeINIvbRLBnoucuTinqSVEgt6s9W
sWGgk0SOs53S+PwfqdfF2DFQ3VakFiVSQfqQbbCDEwMtNdP7+2gf3j7XMfjc
jYFyfvVVPSJHBQfJP+1d3gzUJzI1pOEAFS7QALU+w0Cfb69uUD5IhQXhzeMh
VAYqWzbwr1qZCnefud2XoTPQi5q/NeTUqFD84fxFjzgGOjsoQC87RIXYJMoT
1WTcT2/VFukjVCh8sff4tcu4nytWK4WaVNhSYffvfA7uH3IjOhulQuurW6+F
qnH/Wh8+EdShQgth6WVTEwNVNX+/kXGSCvy+9Eff2hnoYqT4uWQDKnyTfMCz
/I6B2gigHezGVDjKwo2+m2agTWVu7PGmVOjjeMlpsMhA6a9KEulWVAjcyTE5
LMBEb4+MmszYUMG/fvP8HUkm2jfGt9vOjgp7tZ0esyrh8f8zvPywMxU242Jj
LM2Y6LOtxs+XfPD5f7037Z7NRH8JnLvs44f3R5v/FlXJRPfsbbIdPkMFpUjr
eIknTNR/n9RMI4UKOrpsU2tfmaiA7iJ3WCQVhLofaItoL6OahnKvp6Kp8PRJ
wvNQm2XU08Il1zqOCmsuixWkwGW0ybVHTv0CFXa//K/zftEy6hRdYLiQToUb
0qmn6rasoJWNJ9Oot6iA7Leu6J9fQYceR1hPlFBB45//WKLgKrrWeU/MopwK
yhWf1TtVV1Hzob01ynepkL8obNUbuoou/Zob+N1Ahcqsjcy1jVVURzZre1AP
FTq/V492HVhHA5RejHx6QYXm/NscJVbraJbGZrHJABWOJe0jskSvozMn/ZQV
h6iQsev7jqMv19EMdy2LuQ94e67yiUL6Bvo+7+tV/9/4+Fhs4wx+XqASacrb
56ngKvRG3o6XBUpvqb6sX6QCRZHr+IV9LBBUEbd1fZkKxnVbtBocWYC1STj+
MkcwaBnLkwJ7WUD2tUlgg3AwcLDse8lfxwq0LU16G7rBMDMlz6PXxA4fUp2+
3j4dDKQkp28PR9kB+NnP6xkEwxrPh6f+q+zAI2T+NNM0GK4+GlBMP8EBhTKz
6gT7YGgxfFz67BUHPNOSkNEPCobtQzvYWlY4QTA0ae1KTjDcHHk7GBrJDVxe
OyK35geDlWdXfMwtblixKmDEFwbDhlTmSEMPN0yo1c2fvR0MmwW3je/twc/7
hU8zJtXB0GWyTfRZ81YwCzn0disWDFVW/h5HWLZBWvBUzblvweD6VveqaC0f
cFF1XKkaIYBo1ub0Pd4Bg9HOEkkTITCoq5hIytoLdSvWt6MvhoIWxPzZay4J
R04ZOP2+FAoK3Ztv+Hwloe2y1m6PjFCYle1mXYqThH7ivlS9a6EgmnD2XPF9
SZg2ZVAFC0NhZ/2EuNwWKRApyT1RURsKnO6abCleUnDOaGz8v5FQ+Pnz0hcX
YWngzh7KO/0+FOw+fE33JEpDxni3dcvHUFj99/CAq5I05IXd7ymaCAWSUetv
zVPS0FAcX+v3IxS4nkS6JFCkYWZBJn5zIxS8h1KOoV3SYF5AljywLwy+nM+b
+eYjA4KeA/eGZMOgXV5Kg0aVgTdyatqRB8LgT846OyNKBmybN5x6lcNgOS/x
2WCmDLgMZeWRj4XBo4vd9h9aZCCQ+5lQqXkYRCjePKG3lQAHB+XKjKzC4KHD
Vs4FQQL8ybqsvmATBqmfhr9eFiNAKMHRSscxDCKrjt0tUCJAtPZ85rh3GNgf
q1vftCZAaqgUr3hUGFDWZxY+FBDA+FhS/rOYMBgrJv2+XEYAfrY5+YD4MGD7
Nd2ldo8AVy43GzxKDAOhsoKHhm0EyKkyTbbPDANtamBl/TgB7oxHs2WXhYE4
N2nUXYoIz4zfMflfhcF+45+8D68SQSie4HtxKAyeJ0rlDOcQwac+cIT9bRjY
+vKiX4uIsEWErYn5LgwSB9ofDFURwfCbfMjklzD4q4L+nGsnwqtz0T8bGWGQ
Ff1YQ+gnEaQbu52UV8LgggjJXHmeCMEzAv1Va2HAeSDqvSaDCDvNyqqKWWng
/ParsAQrAiSxl+SL22hgal+pLbYLgY9NkpNOkjR49Pi69W8NBBRn/SxGpGlQ
f5JNY10TgVjxBsyCSAPhqYS1ZW0EJC/oF5+Wo8HIuJkIdhqvNy2oTspqNEhI
NuqLweu7+guP+qoO4f3Ri7nY7BHgeMh5DDlCg8NcF36GOiFQJpEnLKJFgxTv
upJ9eH0486NjmF2PBhd+vWFpOYvAUUm+07EGNNjisTT9IBiBVEvbRqYRDS6H
BuvlhiFwoOXHtZ/meH80R3e1KASCknZZjDjQ4L1VqPf1RASetrhgFs40qAlg
T2VJQWD7zwqlflcaCGqIsjim4vW5lRZ/uxcNplg3Xr7PQGBByqevKogGJw7V
nOPE62ne7s72vVQa/Isajn///+89zkg/TAqhwROXVo+iPATsGj+WetBp4BDx
un0er8+pDpr5ryJp4GHy5cj5Yny+mzeuaMfQgMAamMR2C4HHBlaxIgk0qH3A
kjeA1/9vf9WGpuCHa8CuaQfhMgR+XeM/s5REgyMKK9+syhHgPhrg7nWRBquv
l7Vj7iAgPdZrO3SJBrsutztnVSCgeX6/KWTQwPKWiU5BJQLWsokn72XSoGKj
ZfZKFQJJwaCSmkWDbkmdeINqBIr3FO1n3qCBXZK6/7YaBB4+XhX3yaMB+XzD
jsc4v3a33/WmAF//2+gwx3sIzHI18+gU02CQ3ff6d5zZq3ex1t6iQbUHJdDn
PgJiFsEM8VJcz521m69x1lga/HmpnAYhnO6GCrUImOUrTi1X0GBx5aNx2P+/
d4JL78l3aXAtqZCrBueErzOv3tbQQJb/ePh/OOennn6uW0sDsT5q0QzODUql
Tx7U0eDniz3R/39/NPCGtUGykQa03/sEPuM8HeFald6M6/Or2QHDeVPiyc3V
FhpsWLE7ZeK895nIDb/HNHgT7b7LDGcVP3r6yFMacOQbXljD52vIP3z+VDsN
/OtI1Tk4e9arRdZ30kAiRyudgHO03RWKdDfOf4f3F+Lrz1r/5XO5hwYvlUVi
OHG+d9vYef0FDSRvSGQ44fr16FVZnRmgQc5BUafbuN4Tc1sM3w3SQOiFz8zw
XQRWrniD3hANbNjo6iu4P7sOd2o0vsEvV2pfT/DirPhRSpEwQgPWCC9BPtzP
0+diCVfe0WC8uu/OGu6/676PwpsfaPDRXYDjAx4f9L6jAoFjuP4TenIVePxU
Cf1b0/9Cg5V3CSP8eHx1tlouNH2lwVtzM+8KPP4+utZ+J87QIPD8zS7lmwjw
V50ZZvlJg7/ibdz/f7+036y3P+g3DZaSLP965CMAi/s6P/6lgU7JUnN5LgIh
2pP3Hy7R4ICY3dxKFgJpX9Dyfcs0aP1vxG3bdQTKUwoLrq/SYO3bHMZzFYHR
IbuLFJZw8PzXaDmcjsBx8qCHLE84+Bq3HLh1AYHMlKKDfbzhwLTLY86fQ+Br
ZeBK4PZwyLL78lo5DoGMuW1X63eFQyexo50SgcA4Vb9dWzIceswa9dkCEVC/
tid9QjocXh6tlGv0Q+Biw7TdBWI41P/MMLL2QUCVceFPr1w4JBFKz9q6InAh
ul3SRj0cll0jBYLN8fkVZv5gaIRDu5TNYLIxrn+ba3Pe0XAoWHPmT9VHYJh1
w3RcOxzurT9RsgYEZJM1Y88YhIPMYYO1zYMI9F+p/3jOJRz+vaLLP+VGQKo+
oYLoHg7FH//Z3GRHIOyNRehzz3CQtLldfHaDCBJ7/mzj8wvH7xkPWt8uEIFS
oHAsJyQc7t4vs27/RIRdd8py76WEw4ey8GdS94jg2xPqbXEpHK57eVLf3yHC
k++6Kovp4RA14sWecAs/LxQme45eCwdt+hBf/nUiPHwgwXxWGA6rRzn0liKI
4Pj4BulDXTgERbyRcDlBBG1DIzaLRnx90UudUZpEkBndqOluDge56qchqWpE
/Lz25qx7HA6qbV37oxAi0A6oN6R0h0PFl0Dbu9xEuJr3aofG+3DgKREYs+wn
QA9960AmKx0cC1FnogEBqrme0Lk46MCQMemPBQJcvk4hRnPR4aREp3j/YQKQ
akeiyNvosKRaWYnuI8CXb2Xy2kJ06Ava1EhjI8AGSSflhywdYkw32V88lIFD
h6J0T5vToUlbeoe1GH4/iNKR57Siw/XIWPt1ARkI7ti645kNHRRbcnfmcspA
rVnO2AlHOihQLPQrfkmDvH9jhJYPHTgKsyplMWmQKP59Xz2aDiuhBi69bvj9
ZquXGKGCDn89QoUtcqWg3OwA+2QVHYwOsnfEpknBqez57zdr6LD1v6nA23FS
kEA41yxRT4ffbbX6/d5SsKZVZCnylA4avZ9dalSk4G/waMqON3QQa92xEHdZ
EjJbis++Gsbn/8Df/2GoJBxkIZMuv6PDK53mZ+P2khCQ/o/A95kOH14OSLAR
8fvZHcE27lk6qPecsc9olsDPwXdlz+fo8MZ3cMS4QAIIh26lJf2mw4yDkMZ6
vAS4dSg5cPzD14uZXlM3lIANbgZ0MujwKWT3zscHJaDQ7On+hBU68PeRQzV2
SsDx7ET+E+t0/PxbZZQwxOH9R+N/m5t06PS5M8bxURz+B6edbSA=
               "]]}, Annotation[#, "Charting`Private`Tag$675206#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
Rhb+B+HswGc=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$675206#1"]& ]}}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Coinc. per 5 min\"", TraditionalForm], None}, {
            FormBox["\"Measurement Angle\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           Thickness[0.006], FontSize -> 12], FrameTicks -> {{{{-10, 
              FormBox["\"-10\"", TraditionalForm], 0.024}, {0, 
              FormBox["\"0\"", TraditionalForm], 0.024}, {10, 
              FormBox["\"10\"", TraditionalForm], 0.024}, {20, 
              FormBox["\"20\"", TraditionalForm], 0.024}, {30, 
              FormBox["\"30\"", TraditionalForm], 0.024}}, {{-10, "", 
              0.024}, {0, "", 0.024}, {10, "", 0.024}, {20, "", 0.024}, {
             30, "", 0.024}}}, {{{-45, "", 0.024}, {-30, "", 0.012}, {-15, "",
               0.012}, {0, 
              FormBox[
               RowBox[{"\"0\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {15, "", 0.012}, {30, "", 0.012}, {45, "", 0.024}, {
             60, "", 0.012}, {75, "", 0.012}, {90, 
              FormBox[
               RowBox[{"\"90\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {105, "", 0.012}, {120, "", 0.012}, {135, "", 0.024}, {
             150, "", 0.012}, {165, "", 0.012}, {180, 
              FormBox[
               RowBox[{"\"180\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {195, "", 0.012}, {210, "", 0.012}, {225, "", 0.024}, {
             240, "", 0.012}, {255, "", 0.012}, {270, 
              FormBox[
               RowBox[{"\"270\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {285, "", 0.012}, {300, "", 0.012}, {315, "", 0.024}, {
             330, "", 0.012}, {345, "", 0.012}, {360, 
              FormBox[
               RowBox[{"\"360\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}, {{-45, "", 0.024}, {-30, "", 0.012}, {-15, "", 
              0.012}, {0, "", 0.024}, {15, "", 0.012}, {30, "", 0.012}, {
             45, "", 0.024}, {60, "", 0.012}, {75, "", 0.012}, {
             90, "", 0.024}, {105, "", 0.012}, {120, "", 0.012}, {
             135, "", 0.024}, {150, "", 0.012}, {165, "", 0.012}, {
             180, "", 0.024}, {195, "", 0.012}, {210, "", 0.012}, {
             225, "", 0.024}, {240, "", 0.012}, {255, "", 0.012}, {
             270, "", 0.024}, {285, "", 0.012}, {300, "", 0.012}, {
             315, "", 0.024}, {330, "", 0.012}, {345, "", 0.012}, {
             360, "", 0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 260, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"After Cyc: 0-1\"", TraditionalForm], 
         PlotRange -> {{-14.4, 374.4}, {-4., 24.}}, PlotRangeClipping -> True,
          PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox["\"\"", TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
     TagBox[
      GridBox[{{
         TemplateBox[{"\"HV Basis\""}, "SwatchLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    InsetBox[
                    Graphics3DBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    Specularity[
                    RGBColor[0, 0, 1], 30], 
                    SphereBox[{0, 0, 0}]}, Boxed -> False, Lighting -> 
                    "Neutral", PlotRange -> {{-1, 1}, {-1, 1}, {-1, 1}}, 
                    ViewPoint -> {0, 
                    DirectedInfinity[-1], 0}, BoxRatios -> {1, 1, 1}], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}], {0.5, 0.5}, {1, 1}]}, 
                    AspectRatio -> Full, PlotRangePadding -> None, 
                    ImagePadding -> 1, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 
                 TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                  "RGBColorSwatchTemplate"], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"SphereBubble\""}]}], 
             "]"}]& ), Editable -> True], 
         TemplateBox[{
           RowBox[{
             RowBox[{"\[PlusMinus]", "45"}], " ", "\[Degree]", " ", 
             "Basis"}]}, "SwatchLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    InsetBox[
                    Graphics3DBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    Specularity[
                    RGBColor[1, 0, 0], 30], 
                    SphereBox[{0, 0, 0}]}, Boxed -> False, Lighting -> 
                    "Neutral", PlotRange -> {{-1, 1}, {-1, 1}, {-1, 1}}, 
                    ViewPoint -> {0, 
                    DirectedInfinity[-1], 0}, BoxRatios -> {1, 1, 1}], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}], {0.5, 0.5}, {1, 1}]}, 
                    AspectRatio -> Full, PlotRangePadding -> None, 
                    ImagePadding -> 1, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 
                 TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                  "RGBColorSwatchTemplate"], "}"}], ",", 
               RowBox[{"{", 
                 TagBox[#, HoldForm], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"SphereBubble\""}]}], 
             "]"}]& ), Editable -> True]}, {
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "6.1`2.", "\"\[PlusMinus]0.6\""}, {
             "v", "0.75`2.", "\"\[PlusMinus]0.11\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, 
            GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False], 
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "7.4`2.", "\"\[PlusMinus]0.7\""}, {
             "v", "0.36`2.", "\"\[PlusMinus]0.12\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}, {
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "6.2`2.", "\"\[PlusMinus]0.6\""}, {
             "v", "0.76`2.", "\"\[PlusMinus]0.11\""}, {
             "\[Theta]", "3", "\"\[PlusMinus]5\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False], 
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "7.8`2.", "\"\[PlusMinus]0.6\""}, {
             "v", "0.46`2.", "\"\[PlusMinus]0.09\""}, {
             "\[Theta]", "63", "\"\[PlusMinus]6\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]}, 
    "RowWithSeparators"], 
   TemplateBox[{"   ", "\"   \"", 
     TemplateBox[{
       GraphicsBox[{{{{{{Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{0., -0.6324555320336759}, {0., 0.}}], 
               LineBox[{{0., 0.}, {0., 0.6324555320336759}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{117., 9.39444872453601}, {117., 13.}}], 
               LineBox[{{117., 13.}, {117., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{135., 4.354248688935409}, {135., 7.}}], 
               LineBox[{{135., 7.}, {135., 9.64575131106459}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{162., 0.}, {162., 1.}}], 
               LineBox[{{162., 1.}, {162., 2.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{180., 0.}, {180., 1.}}], 
               LineBox[{{180., 1.}, {180., 2.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{207., 5.17157287525381}, {207., 8.}}], 
               LineBox[{{207., 8.}, {207., 10.82842712474619}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{225., 4.354248688935409}, {225., 7.}}], 
               LineBox[{{225., 7.}, {225., 9.64575131106459}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{252., 20.900980486407214`}, {252., 26.}}], 
               LineBox[{{252., 26.}, {252., 31.099019513592786`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{270., 15.52786404500042}, {270., 20.}}], 
               LineBox[{{270., 20.}, {270., 24.47213595499958}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{27., 2.76393202250021}, {27., 5.}}], 
               LineBox[{{27., 5.}, {27., 7.23606797749979}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{297., 7.6833752096446}, {297., 11.}}], 
               LineBox[{{297., 11.}, {297., 14.3166247903554}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{315., 6.83772233983162}, {315., 10.}}], 
               LineBox[{{315., 10.}, {315., 13.16227766016838}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{342., 1.2679491924311228`}, {342., 3.}}], 
               LineBox[{{342., 3.}, {342., 4.732050807568877}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{360., -0.6324555320336759}, {360., 0.}}], 
               LineBox[{{360., 0.}, {360., 0.6324555320336759}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{45., 5.17157287525381}, {45., 8.}}], 
               LineBox[{{45., 8.}, {45., 10.82842712474619}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{72., 14.641101056459327`}, {72., 19.}}], 
               LineBox[{{72., 19.}, {72., 23.358898943540673`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{90., 12.876894374382339`}, {90., 17.}}], 
               LineBox[{{90., 17.}, {90., 21.12310562561766}}]}}}, {{
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{0., 12.876894374382339`}, {0., 17.}}], 
               LineBox[{{0., 17.}, {0., 21.12310562561766}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{117., 11.127016653792584`}, {117., 15.}}], 
               LineBox[{{117., 15.}, {117., 18.872983346207416`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{135., 14.641101056459327`}, {135., 19.}}], 
               LineBox[{{135., 19.}, {135., 23.358898943540673`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{162., 12.876894374382339`}, {162., 17.}}], 
               LineBox[{{162., 17.}, {162., 21.12310562561766}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{180., 9.39444872453601}, {180., 13.}}], 
               LineBox[{{180., 13.}, {180., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{207., 2.76393202250021}, {207., 5.}}], 
               LineBox[{{207., 5.}, {207., 7.23606797749979}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{225., 0.5857864376269049}, {225., 2.}}], 
               LineBox[{{225., 2.}, {225., 3.414213562373095}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{252., 6.}, {252., 9.}}], 
               LineBox[{{252., 9.}, {252., 12.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{270., 9.39444872453601}, {270., 13.}}], 
               LineBox[{{270., 13.}, {270., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{27., 3.550510257216822}, {27., 6.}}], 
               LineBox[{{27., 6.}, {27., 8.449489742783179}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{297., 13.757359312880714`}, {297., 18.}}], 
               LineBox[{{297., 18.}, {297., 22.242640687119284`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{315., 19.101020514433642`}, {315., 24.}}], 
               LineBox[{{315., 24.}, {315., 28.898979485566358`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{342., 10.25834261322606}, {342., 14.}}], 
               LineBox[{{342., 14.}, {342., 17.74165738677394}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{360., 9.39444872453601}, {360., 13.}}], 
               LineBox[{{360., 13.}, {360., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{45., 3.550510257216822}, {45., 6.}}], 
               LineBox[{{45., 6.}, {45., 8.449489742783179}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{72., 2.76393202250021}, {72., 5.}}], 
               LineBox[{{72., 5.}, {72., 7.23606797749979}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{90., 7.6833752096446}, {90., 11.}}], 
               LineBox[{{90., 11.}, {90., 14.3166247903554}}]}}}}, {{{
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 0.6324555320336759}, 
                  Offset[{3, 0}, {0., 0.6324555320336759}]}, {{0., 
                  0.6324555320336759}, 
                  Offset[{-3, 0}, {0., 0.6324555320336759}]}, {{
                  0., -0.6324555320336759}, 
                  Offset[{3, 0}, {0., -0.6324555320336759}]}, {{
                  0., -0.6324555320336759}, 
                  Offset[{-3, 0}, {0., -0.6324555320336759}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 16.605551275463988`}, 
                  Offset[{3, 0}, {117., 16.605551275463988`}]}, {{117., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {117., 16.605551275463988`}]}, {{117., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {117., 9.39444872453601}]}, {{117., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {117., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 9.64575131106459}, 
                  Offset[{3, 0}, {135., 9.64575131106459}]}, {{135., 
                  9.64575131106459}, 
                  Offset[{-3, 0}, {135., 9.64575131106459}]}, {{135., 
                  4.354248688935409}, 
                  Offset[{3, 0}, {135., 4.354248688935409}]}, {{135., 
                  4.354248688935409}, 
                  Offset[{-3, 0}, {135., 4.354248688935409}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 2.}, 
                  Offset[{3, 0}, {162., 2.}]}, {{162., 2.}, 
                  Offset[{-3, 0}, {162., 2.}]}, {{162., 0.}, 
                  Offset[{3, 0}, {162., 0.}]}, {{162., 0.}, 
                  Offset[{-3, 0}, {162., 0.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 2.}, 
                  Offset[{3, 0}, {180., 2.}]}, {{180., 2.}, 
                  Offset[{-3, 0}, {180., 2.}]}, {{180., 0.}, 
                  Offset[{3, 0}, {180., 0.}]}, {{180., 0.}, 
                  Offset[{-3, 0}, {180., 0.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 10.82842712474619}, 
                  Offset[{3, 0}, {207., 10.82842712474619}]}, {{207., 
                  10.82842712474619}, 
                  Offset[{-3, 0}, {207., 10.82842712474619}]}, {{207., 
                  5.17157287525381}, 
                  Offset[{3, 0}, {207., 5.17157287525381}]}, {{207., 
                  5.17157287525381}, 
                  Offset[{-3, 0}, {207., 5.17157287525381}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 9.64575131106459}, 
                  Offset[{3, 0}, {225., 9.64575131106459}]}, {{225., 
                  9.64575131106459}, 
                  Offset[{-3, 0}, {225., 9.64575131106459}]}, {{225., 
                  4.354248688935409}, 
                  Offset[{3, 0}, {225., 4.354248688935409}]}, {{225., 
                  4.354248688935409}, 
                  Offset[{-3, 0}, {225., 4.354248688935409}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 31.099019513592786`}, 
                  Offset[{3, 0}, {252., 31.099019513592786`}]}, {{252., 
                  31.099019513592786`}, 
                  Offset[{-3, 0}, {252., 31.099019513592786`}]}, {{252., 
                  20.900980486407214`}, 
                  Offset[{3, 0}, {252., 20.900980486407214`}]}, {{252., 
                  20.900980486407214`}, 
                  Offset[{-3, 0}, {252., 20.900980486407214`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 24.47213595499958}, 
                  Offset[{3, 0}, {270., 24.47213595499958}]}, {{270., 
                  24.47213595499958}, 
                  Offset[{-3, 0}, {270., 24.47213595499958}]}, {{270., 
                  15.52786404500042}, 
                  Offset[{3, 0}, {270., 15.52786404500042}]}, {{270., 
                  15.52786404500042}, 
                  Offset[{-3, 0}, {270., 15.52786404500042}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 7.23606797749979}, 
                  Offset[{3, 0}, {27., 7.23606797749979}]}, {{27., 
                  7.23606797749979}, 
                  Offset[{-3, 0}, {27., 7.23606797749979}]}, {{27., 
                  2.76393202250021}, 
                  Offset[{3, 0}, {27., 2.76393202250021}]}, {{27., 
                  2.76393202250021}, 
                  Offset[{-3, 0}, {27., 2.76393202250021}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 14.3166247903554}, 
                  Offset[{3, 0}, {297., 14.3166247903554}]}, {{297., 
                  14.3166247903554}, 
                  Offset[{-3, 0}, {297., 14.3166247903554}]}, {{297., 
                  7.6833752096446}, 
                  Offset[{3, 0}, {297., 7.6833752096446}]}, {{297., 
                  7.6833752096446}, 
                  Offset[{-3, 0}, {297., 7.6833752096446}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 13.16227766016838}, 
                  Offset[{3, 0}, {315., 13.16227766016838}]}, {{315., 
                  13.16227766016838}, 
                  Offset[{-3, 0}, {315., 13.16227766016838}]}, {{315., 
                  6.83772233983162}, 
                  Offset[{3, 0}, {315., 6.83772233983162}]}, {{315., 
                  6.83772233983162}, 
                  Offset[{-3, 0}, {315., 6.83772233983162}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 4.732050807568877}, 
                  Offset[{3, 0}, {342., 4.732050807568877}]}, {{342., 
                  4.732050807568877}, 
                  Offset[{-3, 0}, {342., 4.732050807568877}]}, {{342., 
                  1.2679491924311228`}, 
                  Offset[{3, 0}, {342., 1.2679491924311228`}]}, {{342., 
                  1.2679491924311228`}, 
                  Offset[{-3, 0}, {342., 1.2679491924311228`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 0.6324555320336759}, 
                  Offset[{3, 0}, {360., 0.6324555320336759}]}, {{360., 
                  0.6324555320336759}, 
                  Offset[{-3, 0}, {360., 0.6324555320336759}]}, {{
                  360., -0.6324555320336759}, 
                  Offset[{3, 0}, {360., -0.6324555320336759}]}, {{
                  360., -0.6324555320336759}, 
                  Offset[{-3, 0}, {360., -0.6324555320336759}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 10.82842712474619}, 
                  Offset[{3, 0}, {45., 10.82842712474619}]}, {{45., 
                  10.82842712474619}, 
                  Offset[{-3, 0}, {45., 10.82842712474619}]}, {{45., 
                  5.17157287525381}, 
                  Offset[{3, 0}, {45., 5.17157287525381}]}, {{45., 
                  5.17157287525381}, 
                  Offset[{-3, 0}, {45., 5.17157287525381}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 23.358898943540673`}, 
                  Offset[{3, 0}, {72., 23.358898943540673`}]}, {{72., 
                  23.358898943540673`}, 
                  Offset[{-3, 0}, {72., 23.358898943540673`}]}, {{72., 
                  14.641101056459327`}, 
                  Offset[{3, 0}, {72., 14.641101056459327`}]}, {{72., 
                  14.641101056459327`}, 
                  Offset[{-3, 0}, {72., 14.641101056459327`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 21.12310562561766}, 
                  Offset[{3, 0}, {90., 21.12310562561766}]}, {{90., 
                  21.12310562561766}, 
                  Offset[{-3, 0}, {90., 21.12310562561766}]}, {{90., 
                  12.876894374382339`}, 
                  Offset[{3, 0}, {90., 12.876894374382339`}]}, {{90., 
                  12.876894374382339`}, 
                  Offset[{-3, 0}, {90., 12.876894374382339`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}}, {{Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 21.12310562561766}, 
                  Offset[{3, 0}, {0., 21.12310562561766}]}, {{0., 
                  21.12310562561766}, 
                  Offset[{-3, 0}, {0., 21.12310562561766}]}, {{0., 
                  12.876894374382339`}, 
                  Offset[{3, 0}, {0., 12.876894374382339`}]}, {{0., 
                  12.876894374382339`}, 
                  Offset[{-3, 0}, {0., 12.876894374382339`}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 18.872983346207416`}, 
                  Offset[{3, 0}, {117., 18.872983346207416`}]}, {{117., 
                  18.872983346207416`}, 
                  Offset[{-3, 0}, {117., 18.872983346207416`}]}, {{117., 
                  11.127016653792584`}, 
                  Offset[{3, 0}, {117., 11.127016653792584`}]}, {{117., 
                  11.127016653792584`}, 
                  Offset[{-3, 0}, {117., 11.127016653792584`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 23.358898943540673`}, 
                  Offset[{3, 0}, {135., 23.358898943540673`}]}, {{135., 
                  23.358898943540673`}, 
                  Offset[{-3, 0}, {135., 23.358898943540673`}]}, {{135., 
                  14.641101056459327`}, 
                  Offset[{3, 0}, {135., 14.641101056459327`}]}, {{135., 
                  14.641101056459327`}, 
                  Offset[{-3, 0}, {135., 14.641101056459327`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 21.12310562561766}, 
                  Offset[{3, 0}, {162., 21.12310562561766}]}, {{162., 
                  21.12310562561766}, 
                  Offset[{-3, 0}, {162., 21.12310562561766}]}, {{162., 
                  12.876894374382339`}, 
                  Offset[{3, 0}, {162., 12.876894374382339`}]}, {{162., 
                  12.876894374382339`}, 
                  Offset[{-3, 0}, {162., 12.876894374382339`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 16.605551275463988`}, 
                  Offset[{3, 0}, {180., 16.605551275463988`}]}, {{180., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {180., 16.605551275463988`}]}, {{180., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {180., 9.39444872453601}]}, {{180., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {180., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 7.23606797749979}, 
                  Offset[{3, 0}, {207., 7.23606797749979}]}, {{207., 
                  7.23606797749979}, 
                  Offset[{-3, 0}, {207., 7.23606797749979}]}, {{207., 
                  2.76393202250021}, 
                  Offset[{3, 0}, {207., 2.76393202250021}]}, {{207., 
                  2.76393202250021}, 
                  Offset[{-3, 0}, {207., 2.76393202250021}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 3.414213562373095}, 
                  Offset[{3, 0}, {225., 3.414213562373095}]}, {{225., 
                  3.414213562373095}, 
                  Offset[{-3, 0}, {225., 3.414213562373095}]}, {{225., 
                  0.5857864376269049}, 
                  Offset[{3, 0}, {225., 0.5857864376269049}]}, {{225., 
                  0.5857864376269049}, 
                  Offset[{-3, 0}, {225., 0.5857864376269049}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 12.}, 
                  Offset[{3, 0}, {252., 12.}]}, {{252., 12.}, 
                  Offset[{-3, 0}, {252., 12.}]}, {{252., 6.}, 
                  Offset[{3, 0}, {252., 6.}]}, {{252., 6.}, 
                  Offset[{-3, 0}, {252., 6.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 16.605551275463988`}, 
                  Offset[{3, 0}, {270., 16.605551275463988`}]}, {{270., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {270., 16.605551275463988`}]}, {{270., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {270., 9.39444872453601}]}, {{270., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {270., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 8.449489742783179}, 
                  Offset[{3, 0}, {27., 8.449489742783179}]}, {{27., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {27., 8.449489742783179}]}, {{27., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {27., 3.550510257216822}]}, {{27., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {27., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 22.242640687119284`}, 
                  Offset[{3, 0}, {297., 22.242640687119284`}]}, {{297., 
                  22.242640687119284`}, 
                  Offset[{-3, 0}, {297., 22.242640687119284`}]}, {{297., 
                  13.757359312880714`}, 
                  Offset[{3, 0}, {297., 13.757359312880714`}]}, {{297., 
                  13.757359312880714`}, 
                  Offset[{-3, 0}, {297., 13.757359312880714`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 28.898979485566358`}, 
                  Offset[{3, 0}, {315., 28.898979485566358`}]}, {{315., 
                  28.898979485566358`}, 
                  Offset[{-3, 0}, {315., 28.898979485566358`}]}, {{315., 
                  19.101020514433642`}, 
                  Offset[{3, 0}, {315., 19.101020514433642`}]}, {{315., 
                  19.101020514433642`}, 
                  Offset[{-3, 0}, {315., 19.101020514433642`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 17.74165738677394}, 
                  Offset[{3, 0}, {342., 17.74165738677394}]}, {{342., 
                  17.74165738677394}, 
                  Offset[{-3, 0}, {342., 17.74165738677394}]}, {{342., 
                  10.25834261322606}, 
                  Offset[{3, 0}, {342., 10.25834261322606}]}, {{342., 
                  10.25834261322606}, 
                  Offset[{-3, 0}, {342., 10.25834261322606}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 16.605551275463988`}, 
                  Offset[{3, 0}, {360., 16.605551275463988`}]}, {{360., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {360., 16.605551275463988`}]}, {{360., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {360., 9.39444872453601}]}, {{360., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {360., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 8.449489742783179}, 
                  Offset[{3, 0}, {45., 8.449489742783179}]}, {{45., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {45., 8.449489742783179}]}, {{45., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {45., 3.550510257216822}]}, {{45., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {45., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 7.23606797749979}, 
                  Offset[{3, 0}, {72., 7.23606797749979}]}, {{72., 
                  7.23606797749979}, 
                  Offset[{-3, 0}, {72., 7.23606797749979}]}, {{72., 
                  2.76393202250021}, 
                  Offset[{3, 0}, {72., 2.76393202250021}]}, {{72., 
                  2.76393202250021}, 
                  Offset[{-3, 0}, {72., 2.76393202250021}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 14.3166247903554}, 
                  Offset[{3, 0}, {90., 14.3166247903554}]}, {{90., 
                  14.3166247903554}, 
                  Offset[{-3, 0}, {90., 14.3166247903554}]}, {{90., 
                  7.6833752096446}, 
                  Offset[{3, 0}, {90., 7.6833752096446}]}, {{90., 
                  7.6833752096446}, 
                  Offset[{-3, 0}, {90., 7.6833752096446}]}}], {{{1., 0.}, {0.,
                 1.}}, {0., 0.}}]}}}}, {{{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 0.}}, {{117., 13.}}, {{
              135., 7.}}, {{162., 1.}}, {{180., 1.}}, {{207., 8.}}, {{225., 
              7.}}, {{252., 26.}}, {{270., 20.}}, {{27., 5.}}, {{297., 
              11.}}, {{315., 10.}}, {{342., 3.}}, {{360., 0.}}, {{45., 
              8.}}, {{72., 19.}}, {{90., 17.}}}]}, {
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 17.}}, {{117., 15.}}, {{
              135., 19.}}, {{162., 17.}}, {{180., 13.}}, {{207., 5.}}, {{225.,
               2.}}, {{252., 9.}}, {{270., 13.}}, {{27., 6.}}, {{297., 
              18.}}, {{315., 24.}}, {{342., 14.}}, {{360., 13.}}, {{45., 
              6.}}, {{72., 5.}}, {{90., 11.}}}]}}}, {{}, {}}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1: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
w/8AzOTE4g==
               "]]}, Annotation[#, "Charting`Private`Tag$676504#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1: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
bPu1uBiPTCnnQNp6fvwP4zp9tA==
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$676504#1"]& ]}}, {}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
QeB1N5zeXUIM/gf0naTB
               "]]}, Annotation[#, "Charting`Private`Tag$676557#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwVmnk8VF8YxonE2Pd9yZbs5g4lqce+pdBCZFd2YgYjLSgl0SaSIinatKBE
CzdUClHJWqJESSoKSfrd31/z+X7mzJlz3vd533Of87mLA6Ldti7g4ODQ5eLg
+P9zG5N4/e+fBxmqsOBNpK4K9KyGvQ2mPMjSP/vDllqo4KfYqWGfMQ8yKOQf
a2KjCvZWzE8/6PYgg/mO+5ftUUHRj6dyO8s9yPthtmvvvVJBb7Sf30yAB3kw
k6NddfdirI3I+vL9kTvZ6dL3cL5XFcu2jnC+P7SJnD/PcXvgqgbK5ZUfjL9f
Tz6piv92oksHLvY7tv/rXk8aXAk+wzGug3HWazWRtvVkbUH0+UBuXWg/P5Rh
dG89qSV6QFzYSBfFyTPurOz1ZJfE+NOpg7o48fHFxG8ravzx/SuHTPWQcGOf
1sISN/LEiYtPRY7pQ+rNuz7J027k/iTNGslSfdziNTuiecyNrKjc9ETgnj6+
+//4ZbfLjSyQOVjYPqSPEAmfhoyNbiSnrf/rK8sM4Jm4zEeEx418Pcp5dX+v
AcytRrPlg13JvZv7lw4fNMTdS9PaPt6upGP0pzlGtiFMhBbWF613JenbDTp2
nDGEYY/ydw24knotXxy/XDeEavTGNYayrqS/h/gu71eG4DlNcts0u5AcglvX
sOWM0D6RGxdl4EJmrPrBJ3XOCGs8LgiUa7iQ5VT0NS4b4emD8vOT8i7k1v7T
00vLjVCf3vKCzetCHi96UyH60Aih5txbeBrWkQIPGu97DhiBntPbYrBkHck5
dvXYYwU6HlkfuJ76zZnMTB+zLsmkY0hPysi/15mMjIuRaMqmY4F0SeXqR87k
HXvPqb58OlZ9rq+ey3cmr33qq+y8REd11nx9vK0zyfd6W5RUIx1lnXFdYQVr
SLWrxRIV03Q8q+P2dEhfQ0YEbZR795eOz5ey3yxhriG1Mw45zXER0EwqHxyy
X0MKk+F/eEQIFCl//eLz04nsVfilvmUJgRMhQRzrnZxI+uxA+awbgQrXyVQj
Eycycyx5j7oHgRcrUheKLHYimxsNb5l7ExASLKK1TjmSfQWpmquCCaSX90nY
FTuSMn5GnPE7CJTmh53UyHIkc27ldsvuIfBo729ZbrYjOX/Eqr5sL4EFm6SV
Hzo7knwCTRfOZhJImnVbavbbgYx+N5hXXUAg/8PgVdkhB/JGz8jkq3MEqlu2
6888dyBrfIsl+0sI/Cw8TNy+4EDmZhlm1F4jEGX1zNzAxYEcMWl1vHGfQECm
hZvaRXvypbXCaocuAnyi116HZduTtLRTFnK9BG7myGyu2GNP/mn71933hsB8
4TdfCw970kaqrtzwPfX/5QWRvnz2ZJLR1B6VMQIWJnw/Sn/ZkXnmbwvixgl8
ustijQ/akQU+0tr3vhMwaXRK2nXXjtxLD90p/YvAy87f6afD7ci0PaYnJf4S
SPTaKvDB3Y48oXfu9tg8AZWB9iPa1naktK+m2m0OBqI+X8ytUbAjj+xS7Zfi
ZkAySlyOk8+OnGAaatxcyMD9id0F9r9syWcCGddNFzFAm9t4oavVlqy0yt2p
SGOgPPnhEuW7tuTK08/vJfAz4LFQ7+q2UlvykJgPvV6AgVIh7opfu23JRU87
7y0RZsA5O9rYPNyW7JA2fmYpwsBP6b7qfe62pPX1Dp61ogxYLa6oEze0JQ9n
8HMZizMwWqJo5aVgS/6sW1QnIsHAce2Dj4t5bckvqsLFbyg2vfHTYfSnDbnP
/OyVPEkGBgi/VqNBGzKpdH2XtRQDB6qbXRJbbcgRrmHNQYr1zZd1kDU2ZI6g
fl6kNAOvHxa785bakHZHFmuPUrzTVqhv3XEbsjSso2+TDANqzYk+J3fbkFyn
2GWVFD9b93GwP8yG7NX1Oc0hy0BMh8tWTXcbUmv95EVzimU23/8UaWVDJmxo
fBFGcd3bJRG3DWzI2pwkmXSKtwVkf5uTtyH/5Q0m5VAsODIfa81rQ975++bP
cYpvhYdNHfppTfKmxOYlU+z1/XXiqwFr8ubfRlcfihfEWfyVa7UmW8MltXQp
vvy7LDmgxpr0GqiXH6XW57JbhvtKiTW5L9NRL4/i6QX7Dvw4Zk2W37fzNqG4
8MA3muluazKwi1nWSO3XRsDrcHKYNdnlVSpvRfHY0ceiTZusyZCBjqvlVLyy
Jek5wlbWZKOIuI8IxSvyC2TcDazJ3qvHCV8q3oNKfGcK5a3JwpTzeoVUPtLP
s5SHF1mT6dsrnVup/BloDRTr/bQi3wWszRkTY6CzzEkzbsCKbHZS4pmj8q1e
parHXWNFWo/kh32h9PHdY8HCkvNWJIuPyKoQovT3Z/CNzWErsqmBTzlYkIGN
FucyDwRakRGH1M7kUfpTHUoO0lprRX6WLc2S5GNgfL/fyqfLrchZxvDsHkqv
+1uUx2hCVuStyg+bFCl9u0X/a7g6Y0kqe2o7uyxgQFns3ek1HyzJfk6L59up
eqh2L3Q6XG1JOkncTtkxR+Dze4WrooGWpNf6o7rlkwSq0uZSK5wtyVhV4WmX
HwRStd54rl9uSaYWMmL7qfqUizpNyxG0JO3pwUfrPxNY81s2TKbagrzO9Vvo
Zj8BmTO/LWqKLUiLOkWO2j4CQ6t6ZD2zLMhPi76/qOkmsGtf3tPTARYkP+sc
PeklgevC0kuVBSkuW3xd4xGBHRVTHOQ0yL/DKaHnHxKw3djZ7fcepDOtbLVw
LYF3+TnpxXdALugI3FJeRUBEU+KTRgBIAU5TqFwkMMxWXbs5ajUpJn8z8eY+
AntqB//mW60m5+x0foonU+vjPnftjQzF5wPktyURcDiiLOjXsIq0LOs81RlD
oKxEoWWbzCoycnh872eqH8e8lHJk1a8krU5dmRigE9j3pzB9V95KUoXrneg6
PQK56kue7I9aSe45dcvgGtXv78Yvsz4lt5JUeHn/pKkCAS55j1W1sWakch8/
6wQ3gZzAU3RetRXkXueBYu+XdNT8lJc/s3cZya2X31oYQEeL4oXNJZuXkY99
t1VqetHRb6ubd91gGemmVu9ZtJ46z06tlHzYZ0ISkm/0Q63pcDL3Fh4mTMiS
KbVqNw063qYVchkOMUiRWWvBE0NG4JRePNZgTSe/d/aed9psBPWEAN2zinQy
7UlM6jMXI9h3nY/YMWVETn3I/LrK3giHT2p+NbxkRBbtIS7zLjOCgozueAG/
Ebnyx63ExRJGiKJHDXy7YEDWty/uiW8xRK9J/id3Upt8McSQXmJiiPLVEzNL
plXIvKIBB5EPenDTmG/KWsSJdvbod/meJXj29DXHuKgWJjr8OovUVdHttVvw
rK8W7E4ltYsLq2Lkq6acyzUtfLBefe3o78XgFmMTFfZL8fXzx7JLzxdjtafc
tvg92tg8mSu+KXExbo36NM+P6WJLhs3tpnYVtC38+WzRkCEI+b8rjMWU0bnW
3nWARu27rJRbe1QJ/SfPdFUbGWFffpX6ynoljC21GQrdY4Rw311ZNbFKoK3N
/dssR0f44ad/VF4rwjp3ueFRVwJaRQcCBs8qoEZzV45MnTGcwg1bJNbJIZ74
HLvqszFyjj2SZGjJgY6NLkHiJnANpRsnc8qhbLMe/81gEwiFOFgX3ZJFYebb
ZDuRZfBL7b/FqyiLfRPmEfH+y6G44aVK/ZQ0XGrnLTu4zFA5u+3KnzZJCDaH
qczqmWGHq+pylxuSeNbV+VfZwwyrwvsd+g5LwurH9erwMjNkbhkWzV0rCRN1
X32ujSsxqMr5uKRdAgoZdbL0UnMsenmqLuSdOH5qY8ZOHRjpmUs0WyqGZzmy
wz+WAX4S7M4jomIo4ph8ddoJ8Dq3cYfcrCicOktufIsF6qtK7V81i6I4hT/4
5ENAMUTjfleMKFy7O18P+1jAj3kpy6VJBJpWNxuOxlqga2++ieItEcxdO1i+
Yr8FRi121qgWieDS3pVZh69ZwCfC/EM3WwQcBsXWJnMWYEZGPfulK4LraZGV
aacskWbsZLkYwtj33facwTVLHFm4z3paSRieXipHekhLHFM75mA1L4SFRq/C
9D5ZQlStzXVVrRC2vFmu+trECrXZxwYfWwmBbicmssfRCpdlTA6s1xQCb8WX
v1o+VtgxaMHtwSeEygOFPTvTrPDsmabP03ZB0AjuY+odVuB4X+W2fqsgBgre
7n4+YoW0NpekC06CqOK9E8H+YwXfL9ulo+mC8O8PtW9Rtcb7iK3BMZyCqD7Y
9o8ZY42W7le+BiUCOPzz0lfFNGsQO7LVXY8IIMg3te9JnjV0eOrrviYKQMTY
+I48aY2ld2pl81wEEDyQH9UgZIPl8lWHbnMJQEaPg1dC3QZBpxjXGd/50ZS4
9VyQqQ02en5Is3nLD21xw46FQTYI5rD6o1DDj17fnMhNiTaoq+L+/OEiPw6V
zfJcPGyDiSJpXfOT/BizeWRqX2ODlroQ64sJ/DhzXPtV3nMb9J496Vsdwg/n
d0ciPn+wQWX0jNcWT35cZ3uezRCyBfOCabz3an74PKpb3qdmC+3Bgba7dH4I
i2m81DG1xdfldqlXNfmx/eo37tZAWzhd7vO0E+GHysyGQsVEW/glF1ZMLOTH
C+u7y6IO26I8xeGx0RwNqceUX9Set4XIubir3JM00Pv3hQnX2OJiCis+fJSG
99qjXH7PbfHN3mXFtvc0ZCesK7j5wRYHWc28v3ppsG68ZcL52xZ/K/wmpDto
+Cki1+4qZAelOkuetlYaLnjvCS1Ws8OOVVvc5Jpo2HhlaMHkcjukFq/78Lue
Bp5phzNWa+2QKZDQGFlLQ5XVDeMTgXa4yxj6F3eXhm1HJdqG2Ha4sN6vUOwO
DdJvE0OMD9thWCjiotUtGpqWvuPcf94O+0NWL+aroIEdb326s9oO9PKnIoE3
adBquMxY8twOtrvKE11v0NAjLPw84YMd6s9s8Om4TkPGFlZw04wd+KWa6r5Q
vOJyD4eskD32qHUXnKTGj/5alR+qZo9fBO90FzXfacsLxN3l9pj8erypjPq/
NUf4Wmlr7fHJOExI6jYNc31R27wC7SG6bFmDeDUNZVod/66y7eEb7TlQco8G
7zjTU3NZ9pCs/eLdUkeDUH0h3fm8PRzj7tIPNNJQK8TdUlBtD+co5w2dT2mI
8grdOt5qj0aVD1U1bTQoX3o+v+qDPVrvxzgbddKQbHHKaEDQAYvuf+57M0SD
4eH5Z4ZqDtil414p8pWGwd7AoJTlDpgferSr+xcNliz9k6qBDtDPzT+jxseP
CTLbkMl2gH2H3eNScX6cF/z9tCHLAa/s0rIeKPGD+2LDXFC1A3bE0Y+VmPDj
1qRW7u1WBxSfqsiLt+LHVhw24PnggJyVQ696XfjxuMcj4KKgIyZuJEZuieRH
usD4k88BjijIETyLa/zYOTJ+qjPBEbcXx05vqKX0Wv8tvCHTERZDDUum2vjh
zv4hXFDliNZFaez+n/zQHPrp7kJzwttqM6aljQDk6n4tNVd2QvOeBbo1ngIQ
zJ/6s5ThhKxTU1H3tgvg57qZs1w+TnDp8u70LxRAw70/I1XlTpg+MlFryEH1
j9y5mvOPnZBzWXLrvKwgrsT8PXS0zwlBUsv+bmQI4viSfwZhC9dgeiRmcXGY
IPyyF7AVN69BjXpq88W3gpgP4+Pdx+EMRdHN8UZvhTBhQ+vdLumMpFbpwJR/
QhhW4S/z1nYG1707xu6qwmjtFHBZtsEZw1qLA7JDhXHGUiRv9KIzhEt4t9vM
C8NUTlrLdd1axCXvqlen+rPuL+lZ86C1cFk6ahN6WwQq7TIt2olrMXggdsn4
MxHw7pfbzn1+LR4uPbOmekoEnT8Uq+9MrUWWXu+0vasoWE/V7ZUK18G8ybTX
UEwM73gdZIvL10H3n2f3Deq8cbSPHNV4tA6XtyQpB1mIQeXJ7Uy9sXVYJL65
OzxGjPIP50OUFF3gsGubwOQrMYj7Ma7phbtAZKD+751icUR4bTJZs8gV2XUP
0xq3SkI16ZOSkKgr8pZLKh3dK4mu/B2L2uVccWNO4knGOUlY9hZ2r9d3hcCc
XoRAvyTlX0Z2eG10hQKCu1ZslsKjTey6sPOu+GXnWSfqIQ0lt3z7g6vdwLq7
yoUrXhYPAyb2Kzm64c9JvQdmZ2QRxHR8VLnBDS4mC3OL62Vx5cSsRX+oG7rV
L5jNCsvBpMvTjDjhBp+FZmJNZXJw3iKv//aTG0L2+R08Pi6PndvOiBsdX49y
yfRY1lEl9Owo7O8e2gBly7IzLAVVpNKFN/N6u2N6ePzaypYlSNGYsxakeSKm
8cS3Yep5KqroN+uIhCdoqWansmf1sEV++oKosifGX+3TpYvqY7noBLcUwxP+
4RucrVfpY3xupFHJxxNa4gK6d07qw7PjlbVhhScYVQmh1+wMwNh71Xq9pxd6
ZW1vOzgbQnX+Eut1kBfe6e5+cNTdEMKJpRfco73wq53vRau/IUajznFv2eeF
GB6e+qXxhjjnebIx6LoXsu7UBm8rNIQQfa91/IIt4Mrg//puzBAjA57Wp65s
weusqEWWKUYQERqd3HZrC95Kqu86eNAIK8wSzzNqt6CPP5L/8TEjZOacXND+
YgtS3okxlIqNQHfsIHl+bwF0SmkO9UbYWelszrLzRs/g6ZokDjpKBt6MWbh6
Q/6m5xVBXjqeC0acEfbyxjXLosfZwnQsDsn4cyXKGxvCYh12KtHxWOFJzWCO
Nx7tnp24b0aH6H6YrBvyxleZtVPfmXSsqGz7qDDuDeGzK43rdtARNOCTMzrt
jQNLWpqSU+ioWrHrZxq/D0R2WN17e5iOLd9qKu7TfeAfyhXz9xIdpR6EgXaK
DzY03ct42ktHW1p9/3SGD5ZLxm5+MkDHTIXr4UcnfDD7/cyDO8PU87vg9q9+
l3wwUz0su32Cju8Py66ebPNBDO/37+Z8BMx0NLUWKvmC/eDNoDWDgJtDkl6p
li8k8oMFX5sSCAlup9sRvuAJ33Fjw2rKj5zfYX7Q3he+S75oqjoS+C7f5ibI
9EXX1Pu8nz4EFq1Q97i+yxcdcqf0/gUSUPJI9F6X7otp4d99MyEEnE6ohRwr
8AXHCR7PmlgCpQLsXZJNvnD8dqc8Mo3AA+3W1KqXvriaK/P520ECHfaq6e5v
ffG44viw32ECnGktx09N+GLz1m4B4ZOUv9st0nFYyA/hiWrz+ZQ/450O+ixm
6ocJtW3XQim/J7FfOCJwlR92vbbg7mgioCx5d7zSyg9qgRW5ui0ETAjhnxvW
+mFP97zLJcovBkbXzOcG+qF/7sSmp5TfjJoPTBkJ8cPVzo2NFwYp/5glxL08
iprvONeyqCECR68G8vWwqfHddWLNlF+tHRGUkD/sh2VrijnLKL/7NL46Nzzb
Dx2/T09O/aL2szBQ9n6eHzxukg8MZgh8UatW8j7vB1e6ypMwyi9PVQScu3bJ
D+w8vr8R8wQWWAqqz1/zQ6xr0swWyl/L+AUsPVvth+XOQgY8lB9X/yZQ9u2B
H0Q8lAPqFjJgsPuOPhr8kO2e57iN8u+2ZwQYg61+4CvforeL8vuuOneqjF75
IU2hV+UrPwNb7vqbpnb7ofq62n1HQQaY3VWr1D74QeaKWf9zYQbOQDtF9pMf
Km78DH4vwsDjSwUNwl/9IKXqMfpRlIFvIqI8PBN+4CCZgT1i1PoS99nPTfkB
YqwX98UZsBiczpj44wfL6Av0oxIMhDmEt37i8IfLfFTaekkGssv7hd8t9EfR
3S1NPFIM3Jd1c3tN84dqvOTsZYo/pjw60SzsD/E3vrLm0gwIjS7veijhT/mB
xRokxcvdymSrZf1xp8hHgZBhwP+u8pbrSv6IvbRiPofiDNXswgtq/sDN6aef
KL6VwTOYr+WPTHJqt44sA28nEtWO6fmj8tEdhf/vh3i8vm49QPfH9NGe4v/v
jwwa/C7tWuYP8x5Z0WyKPXQ6Rpkr/bHPbGPw//dPqdl2emEW/jAxO1BygOKr
f+5G+9n6Q8PyWXMoxR2B+hWbnPzhU+Tea0bxfPO5n2tc/HH30IEXf6n1LGFI
LrPa6A+G8ovyG//fP51JTzT19Ae357MkV4oTuefuGfj6I0VJy/ADtd/iiOh5
jSB/NBrWtgVR3NLxHgqh/tRz/h6vTipev1Zu2isWRf3++s6OZRQrlTx9xMv0
R9bssNlBKt72gua8/xL8kbdeMPsZlY/8t2pZX1L8cc9iq5Qila8Gm5Ntg/v9
wcFss9Gn8jl2jSbWfcgf399vCzeg8r1694/cxhx/8B8cLOKk9BEyHNRzN98f
YpWTt15S+jm+tlu+/Kw/4v4cfZItwMCQUl1RwWV/XJpSmPjIx4DgAfqH7Ov+
SGUZCifwMmDyrUQjo9IfY2dkjGd4GEivy7wS/8Afbt2cF59xMaDn53lr3Qtq
vamaSTep+tjU1Dpl00nlW27auH6WQLKhhenKPn9sd/kq3kjV00sOrVqtjxQ/
r7LP+0kg/tyvJ5y//WH2ZTPv3i8EzvKF0mb++mN1t+JaKapem2LerBlfEIAu
s1/dp4YJyFs2vOgVCMDedIkXMVS9k++P9lWqBGDIc0n31k6q/vV1dI9pUN/f
zTyb8YoAY8ejnVHaARiPCthe1E7gkuis4lJGAAqN563OPqP6AwL9Cu0C0HvT
w2X0AQG/QuOP6VEBEOTKsrx3joDcaJvxNmYAEpZFB0wWUP3BOGy/FTsA7ktL
xxXyCdi3Fi6ZTwnAlcHkEOvjBAznFoUxcwJAS2y5/jGFAIdn77j3/QBsvqxv
zab6790S1mqzhwE49mr/7WebCbB+CB2VeRyAfM1ZEeGNBD6lWxm9agtAwU2z
y5FOBNrvlDHtPwRAs0zCc+8yAkWSe2botEDcYJ/9JCNIAC/UFvB6BCJKMNqC
uE5HjOS5v2u9A5Hz+PdPx4t0FG9W+p0TEAiX7wF564vo4Hov810tMhAP3eO+
LDtOnYcTgv2rUwORZWEcuzaOOo8kZmoSygJRkyz2iVxOxyb3lpgRjiD03j/B
Z3TbCPtPO0Tq8wSh651N5P4yI9x59zgkjj8IUVYxg8/PG0Em5KEvl1QQ3q8T
sDM9boQ+dpWzsk4Q7qw0V4mPMoJfftFS941BqBxbpXNO3Qjhb1mDjy8H4Y3Q
MK9TuiHuzt49U3k9CHIs7meduw3BK8PpUVRJza/Vl7I5zhClblnPEx8EYWdQ
pqJ1gCEGnpTc030RhJWFl/7dMDPEhorOnOMzQfg31jo51GOAlQeWO/rYbUVG
lulZp2x9CBrNVfwa2opG0RFp5QEdeBZbmB9ZEYxPdpftYm9o4ObpY+Utq4Nx
s3rnVqGTGuDJGdSg2QTDeFlz/PXdGqg4kCKUti4YG1blWP9x1gAt8uG7HUHB
EJ7+tbp1TB13l1mkbjscjLX0nTrJOuqQa8UT8/fBqErgqs+4roq+6dWuYwdD
QA9iPEssU8baZx5pbYdD8GIOqx7sVaZ8YUxNRXYICpztnBW9lHHF4vzixIIQ
rP1UF8agKWPHIZ6JheUhqFSefPM4VAmyyq3HlbtDUP7yUcUDfUW423p2uGmG
wvXC55xvL+TwTIbJa6ITisjZO5c3XJPDqi+HVsoahkJuJsLrXbocNI8+uPDO
NBScpl8vboMcpnpU4iKcQ3G1ItzCulwWOZEjkvtZofgrZhkaly+DVydY7jX1
oeiQwYXoTCnU+m434WkKha3dVJh/mBQuaUdIrm8NheDWpsZ0eynsJgNfjXWF
os/v/ebEhVLQGnNbp/I1FG/PjfCOpkhip5WR3QHpMBycth62S5PANiE9zQ6F
MLj/nDt1a5sEXHu0Fi5WDUNVxn5HL3sJaEarNNzVDYOwQMpVdwEJtOcLrx63
CMN8jU62+ElxqE98NdkYEYYitbo9bXfEIPTgs2RxTBiMnd4Kz54Rw+8DH3+O
x4eBuH70QECqGJ4rvq1ITwlDrqax1LizGNgOLfr3c8PwfYB7/NeIKFqLrmiq
PQxDY+HE9ZkloqgOL124/XEYKjaP9ciLiqLYpHjofnMYNl6rWZc8KwJ2y6ni
TZ1hEDnrNSj4XASqM+lKGV+o/czIDYEtgvh1wVI/JMOxuXlZpneFMHZP6tz+
IBeOfefrLsccEcaBk9/XdyqH44Kwd9JchDDy3iUeu7c0HGv1JCwSlgqjJjpT
YL95ON78dnLhvSSEenHXq2zLcHgtSBfqSRfCszuSjuF24TA9rhGvGiaE3n+F
B1xcw6GxRUNHRV8Ic0fKF8hvDYdBGrd36z1BcDPizwmGhePKhsCC0CJBCHav
AEd0OIo/9lkmpwlCSaVx10d2OAy33zio6CpIndOdMzcyw1HrcC1ccVwA9htO
nyw+Fo6YWF4c7xSA64yvSU5uOERUn8+m1gkgAJ+ZO4rC0XDl4cvu4wLY2/5n
3PpWOMQ69xZ7rhZAJovMWlYTjtyNH2wrdQRwQiZNV7s2HClt/dIHZQRwwU8o
TLgpHG2qYi/KJvlRxv2Kd0FrOG69ufhvdpAfty+dvPjzRTj2Np8YedxO+f/v
Kh97+sJB3h/c2n2DH89PfNzbMhCOJaeVzZSK+NG1/Ipq3cdw7BqPtnt/lB+f
kgm/C9/C4f32Cvsjkx80Udu+KK4IHD0bY9i3mh9it2k7/HkjsM2ZvCPJ4If8
5jaZDYIRCG72tm7T4ofuOY9NptIR4Dx0tb5OnB8MG8VfOgoRUCKOvpni48fK
z4PZSosjUKCju+YaBz+cjcJfcOlEgPkjJTbvGw2bXhtsnzKIgOyBLofWERp8
En8KfWZE4GydfHXKAA3bFGuu9ZlGoKvFrPl2Dw1RD3eteb4qAt4Mo6Ohr2iI
32r5hbSKQEcVp3hBKw17+BZlVNpHYHZ5nY9LEw3p15q1Sp0jEH39wK69DTQc
dT36JM8tArt40tgmdTQs7UlixbpHwK9n3ibpHg31fsGL12yJgKrVG06zahq2
fHJ7ruEfgdOyEhVxt2n4Fb0q6d/WCBSfu+elU0nD4emlWj1hEbifxsO1pZwG
rT2SryuiI+D/3Pbqops0POThTM1kReBX39gm/Rs0eB4e09+WGAFGwIFF7ddp
mJTs7lu9OwLbtzY8GKM4s6AhXXZvBOxMIxL3UeM1NG4YTx6IAE9KuOlJar7a
svz3LZkRKDF6+ke9ggZ3xv4jpceo/ORcfaB3i4bv92JWJudGQMrVPam8ioYM
K+/Pm09HoDfMwPBmDQ1qzfa5RFEErrrd7lz6gIb7bgwrwRIqPmPpIUoPqXz0
Kn8fvkzNfzqkP+sRDd/8+QvI6xG46WJkyH5GxfPzlEN+JRXvk/0b3rbRsDjm
/RSzOgKVlzMsH7ym4e5M63nnBxFI2hU1Lv2GhrFFJX85nkTgANvL1XyUhrQj
R6/0NkdggCNmfNEEDUrSO91vtUdgcmWXpPMsDa6a68uDe6n5OBY+thXgx+i1
VT4W7yIQtuel3h9Jfuwz1uaXH4pA7Ju5t0tV+FFlzbn1+dcIHMlua/5lzI91
LWOilyYicMgyafC4BaXv9d21KdMREG3I+HbZmdJv4A0ZY85IOCaYn7YJ5set
0fxHQjyR2DH5ke8Zix9rY/fHfqJFYo3WX7GmVH4kp3i3nJaIRLvCl0xDqn5k
+RwS42QjkZD0/Ek+VV8VRxma65QicZ5YYbS7jh8fz/InL9CKhL64sdzNAX44
1tYQoWaRGM+efntfSwAfbEoGLBGJ0zdidb+aCWBn69EsBZtIfL7IeylnnQBu
vAkeaVsbidljwTlr2QKQ+CN52iQgEk/pCxdvaRPA22WxC7gPRuJq07mvD7MF
MXYHnnaHI2HhfufJ1ZuCmFsmXJGRHYmtgs/nlJ8LQmF5mb9oYSRorZvYpTQh
bFk+TCpVRuLyDtl49Qwh9C333GP6NhKCo/HNpcXCGK3W6tr5PhJLqjfPSjYJ
U3U0rU+ORMKnrPIfbVwYcqYn+m0nIhG7zKu4XlEEnqbPzTcsisKGb7fue0SJ
oMfUci7KKArLLnqxW+VF8alGZEOFSRTkPpuuP0sXxYzpu6u/zKLAbjttW+4g
CpkVO7122kYh3Yj/xgm2KDxWVN096BUFAf7AH+t7RNG1QjvxQloUrgT6vUor
FcNrM7Gpnp4oRJ4TjNaKksCCnMuCDf1RmDxla3MgQwKG49Ao+xAFKYfZAumL
Esgsit6w+2sU4l6f+dc8IAHLha0VqpzR4H6vnbVrkyRuPj8QHa4VDdLj6o+X
jlLI9P/7aS4+Gk9WLievbZRBsdXPr8K07Yg9W+TvOKwAVoTRuhqB7Th0+J9d
rIgibHOibgYIb0fw9yMHHq5QxJfhT7G3JbbDbP/k6Y4jimBkvJ32VN6O+fMD
z+rNlPCo/TFnKWM7PNc8uBuer4xP3qckV/pux8GpufeLly+GAXuVecit7bDd
a7zoE6EOdvv5NPb6GEjZnX4R/3cpiru6nT9tjEFioMdDDgltNPcLSnl4xIB+
VKolTVsbSl8TSpd5x6DUoOVQsrs2GvnWPJnaFoPzSbc0GeXaELH6yRu3IwYH
F8qlRgfq4PJt68yYczGo7DorL12vi978j8fDvsVAbprLyN/XAKuVMg2FJ2Lw
x5l+Sz3OABfO0Z9X/owB6ehxvzPDAFGX9vD9/R0DRnle4cIqA3BWySYf4Y7F
8mdbGxsXGkLrhXPkLdlYXBoMrEzebIj4RVV281axuNx7rnXFb0P0ZWz5WGwb
ixvQP9+9wAgQ4tpr5xCLjKfD38IEjECTdKk9ujYW+ffST0coG6FAdZShtjkW
qbd6fw9aG6HRXEnVPioWO16myO3NMqJs/f65Y3mxSL7yqlpKkg6eINEdfKdj
ofqVseOEAh2z689MJxfEIvJKrQyPOh2DRMVEdHEsiof6bzXS6bg5+faTc1ks
zmhGf7i2jo51TOPXfGQs1t4VWK5+gA7LQNItpT4Wg4l9vj1ZdJisd2qfaYzF
QfrrrJQTdOrc828eeRqLsJddT6+co2N8IvPho1exWOkYvs33Hh2ZsUPXUkZi
4bG7utR2jI7kgGid359jway8k6Q5QQfLbfbS9rFYmO1OyZuZpsOLLnLB90cs
Tt7z3sXkIqA9YZZv/icWw/vcHtXLEngak73/txATymLP9GqtCNz3V+KOEWWi
YSDg0AN7AjddL6d8Emfiu1JE5nVnAnlGdTu7ZJiIlApev9WdQMiP0djbqkys
ClT+pR5GgCfG0jfGhImyUOMPQ5kEjN+uqlA0ZSL2wxcZ12MEghzMFj4zY+Kq
om/b1RwC9YsZV1UtmLgX0X5St5DAnpca06+cmGD/qzvqeZ3A9VWqjslrmTA9
qvfItIJA/xWlAl1XJqI7/xouqiKwcq+0VdomJlTiFmVFUP5zhuA7YuLPpPy0
KdOvmcCSooXv3wcyYW2luvvmc8pfCywwPrKNCSnZueTxFwRuDc32joQz0SPf
4MroJhCTM6Z5Kp4JzUZD3+EPlF/k/Jxok8iEYLJ8SAnln9sjP7b8SGJiNesY
4Ub5a33b/ljHFCaC7aJmWeMERqfaav8cYuL5K46r/dMEZANbRC8dZuKx1Spt
fsrP27c1BW04xsSx48+gQfn90osPaddymSgJN1usysHAa/Fa782nmHDbvfI9
9wIGuJPv3lx4honwE4+0XnMxEOhRucnnHBN/L0aarFrEwPHGG5dpF5gYuzLx
q5OXgXrDsrmqUib0W5t1vGkMqPCVFAuXMXHzkcBXI0EG1sWd+3XvOhM5ehqx
yUIM7B4ssA8pZ2Lx8ITffWEG3tTkjpNVTMhMd27///0bfs1si8gaJjat/ZzJ
Ic7AiuNHTsjeZ0Ly3yXeCYrD5g+NPKplQu/pn8F2CQZOhaWviH3IRNiv71IF
kgw0de7LUmpk4uPmhyWbpBiYsUwZePaYiSnvtsy/FC+5sYtIeErF62/ps2PS
DGyS37FfrYWJu61/vcVlGEg7EN/T9pyJubkKm9T/77cmY3V3vmBivUdbcj/F
H3yj92h1MKG2Jk1IS5YBsZbwlx2dlF6GDcf/v++yWB6ikdLDhEWXu/Jeirdf
CGLrvWGijXn53AmKi0T8m3v6mZC7Pc/6//6rbae30v5BJhxNPU/tofixZ+SM
xhATrvS0r5sprl2+6+WjYSa0BX6uVqW4SiqrbOtnJnK3Kh3rptZz/eeZ/QvH
qPwcKh7cSXHpyzK/knEmNHbY0IUpLrh5f4XNDyZSOif2HqH2e+Jwi8THSSbM
f9zv+j8emRFvxvdNMTH+8I2+J8X7HMea1H8zMTlUnnGBimeS1lxx4x8mkvPq
x/5/vy2WR2BX0DwTHjX3NnH9f/84JO/OzckCo277M2kqPwH1OkYXuFjoru5z
kBNjYHORGb81Dwsv7RS7aFR+7bd41e3lZ8EwKli9itIDVoSfUhNi4f2fmM/b
Kb0sk0liNoiw8IjD/bGsAAOaHflLuKRYSLvl9cqYjwGliiuc52VY8Fcs57tM
6VHy6N0+S3kWxIPWBNF4KP2u6T2SqsKC44ptJ05Sep5bOhqqqsYCf6xzTAOl
98lFs1b1GixoNzmlvJ0n8L5BdoZTh2Iebqc3VL2QZpv9UoxZaP4xzbFwgkC1
bOiKxctZkLBb/KP4G4Eb02yJhytYEEjVMzX4SqCwMq+JAyzUzWoOi30isFOn
2zDZkYUTrGiXRW8JsPg+0VScWVA9nHBappdA+Mj0UN06FlZUXI6Q6SLgeV76
1L8NLFxenHTvQzsBU3l3zj2+LPQsz2y63EDA8Pe2PqUAFuY4T3IakgS0uuJv
1waxML8rbubCfQIy2bmh86EsfPSxWeV1m8AUrfPFLhYVj9MRvLMlBCpmNxTv
PMiC0EpzTt59BJbbOGz5doiFmLMimS17CNQdMZcKOMxC1NSljNQkAi3qmhl2
2SzUntrE1RBLYHjtdIxYAQtJbzqe5voRkDt/yuLSTRbufuc3P2ZK9auvWX/k
Kllgvt3IGcOg+t/y1NtZt1ngOmf72NKAAKM1bCnzLgt/wn+y76sTWDttJrqq
kdJDncxJPmECKU79A6+6WMjRf39HfJAO3tyX+ba9LKyPC3KQ6aPj8MDjDTVv
WLA9mJsq/JqO/LgbTYWDLCiMWsp2NtFx62zyzdAvLCQrV8k+ukHHp0nV5H/z
LHTx4QkjiQ6XM8HKOppxsGSXkhW8dIgFtl5/qRUH7pOtG5I56OhYSqzaoROH
3YmdMpgxgvud+S1PDeNAZpsk5o4YwedlTn6wWRxeSwYUFj0yQiRvo+QFlzjI
cr3/uWKPETJYKgKKSXEInz68R/SzIRrX9MwItcdhNvxY/6tlBpBMVgs5+DIO
sabDIqvVDLCtMrKL63UcpJQup5wWMsAiuQVVMz1xaB18cF/roz4cR7SZ7z/E
YYW22GTeMX20p+z8ens6DrqHDx6YHNHDmyrl91uU47H6ueC5G4d0MamyrflK
VDzUY1N4k6qXYmVwW4AWLQGl5jkbvUTUcTS9UL9ZIAGTdgdGjGbU8PFy5Gyk
cALiooLmhAfUcHiM/3ilRAL8RrmTP9xQw0CM/cNVygmQDlA+/3WdGvbtfKi8
kZGAtzzPH9w7poqWY5VvUnwSYLRppUip4mKoVKZeUven5nMfedXOsxhxHa6s
J4EJeFbikMT3XYXyS9/5BUMT0Fh1eEVJvQq2n9E1y2Mm4DFfe8+hEBVIXCw5
dT09AV4Cc87JUcrwun9yU19FAnL3FkerNyhglaPTAtfbCUgrSm6MOaMA1e75
a4/vJCA1K//wYJwCle+tCyvuJ2D0ikfJ0qUKiNdh3Ep/nIAb60LqA4/J43h+
u6hJbwICp+4sqg2RQxObr/UoJ5vy3c654wwZlPE8YPNws6E+UewmJi6DIye2
q+/kYUPs+Btx/x/S2HSzKymYn40/f+aKk69L48NIifYqSTYcJGgdz7WlMb/J
Mv2LFhvrpVui3+pIwdg4ycrWhQ3ngidO/q4S6Eiy1F64ng33xBem8nQJxNbz
iTZuZIPR5fFeXFwCN9fl9Vt4scE5u3R//WtxaIfdTjTfxkZirdM3BR9xKJ39
doOxk40ktQUCXEliuP+xKndyNxs9LouznvqKwUt3966KFDbEuzeKvrIWQ16N
gJPhATYqNDhUbgqLQbxj6bDOcTayjl1SOnVJFLx8QQpql9hI1/nT4TkigtJ1
Olzvr7ARaaf0PrJdBDa5E5+LrrHhm5FQ8KRGBKlqKXeUKtl4vpc+uS5LBHPm
hW5ytWxoiCx4VLNMBPn7tpr2kGwE7MmdWKQmAtNmXZW8Bjbe09W3FQqJIN7j
3lfJp2xcm+J+4NAqjB+x3emiHWx8sj29YQVDGEdrzka3d7IRtOaC9VZhYehz
BG860sPG2BmD02pfhBCR9UtN8B0bKmk727wuCGH4olgd7yi1/33H3BoUhbBv
vKfkyRgVT//GXcf/CkLN+Fzm/m9snAnZSjlYQfjVG3hy/2Jjx0Rvyb4iQczz
TqNhmg3JZYbEtVRBFKyrXZI6y8byrsnmiK2CWJmbJmTxl42Y1G+3GuwF0ftm
za9//6j9SRw0qtAVxH/Ps0Tr
               "]]}, 
             Annotation[#, "Charting`Private`Tag$676557#1"]& ]}}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Coinc. per 6 min\"", TraditionalForm], None}, {
            FormBox["\"Measurement Angle\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           Thickness[0.006], FontSize -> 12], FrameTicks -> {{{{-15, 
              FormBox["\"-15\"", TraditionalForm], 0.024}, {0, 
              FormBox["\"0\"", TraditionalForm], 0.024}, {15, 
              FormBox["\"15\"", TraditionalForm], 0.024}, {30, 
              FormBox["\"30\"", TraditionalForm], 0.024}, {45, 
              FormBox["\"45\"", TraditionalForm], 0.024}}, {{-15, "", 
              0.024}, {0, "", 0.024}, {15, "", 0.024}, {30, "", 0.024}, {
             45, "", 0.024}}}, {{{-45, "", 0.024}, {-30, "", 0.012}, {-15, "",
               0.012}, {0, 
              FormBox[
               RowBox[{"\"0\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {15, "", 0.012}, {30, "", 0.012}, {45, "", 0.024}, {
             60, "", 0.012}, {75, "", 0.012}, {90, 
              FormBox[
               RowBox[{"\"90\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {105, "", 0.012}, {120, "", 0.012}, {135, "", 0.024}, {
             150, "", 0.012}, {165, "", 0.012}, {180, 
              FormBox[
               RowBox[{"\"180\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {195, "", 0.012}, {210, "", 0.012}, {225, "", 0.024}, {
             240, "", 0.012}, {255, "", 0.012}, {270, 
              FormBox[
               RowBox[{"\"270\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {285, "", 0.012}, {300, "", 0.012}, {315, "", 0.024}, {
             330, "", 0.012}, {345, "", 0.012}, {360, 
              FormBox[
               RowBox[{"\"360\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}, {{-45, "", 0.024}, {-30, "", 0.012}, {-15, "", 
              0.012}, {0, "", 0.024}, {15, "", 0.012}, {30, "", 0.012}, {
             45, "", 0.024}, {60, "", 0.012}, {75, "", 0.012}, {
             90, "", 0.024}, {105, "", 0.012}, {120, "", 0.012}, {
             135, "", 0.024}, {150, "", 0.012}, {165, "", 0.012}, {
             180, "", 0.024}, {195, "", 0.012}, {210, "", 0.012}, {
             225, "", 0.024}, {240, "", 0.012}, {255, "", 0.012}, {
             270, "", 0.024}, {285, "", 0.012}, {300, "", 0.012}, {
             315, "", 0.024}, {330, "", 0.012}, {345, "", 0.012}, {
             360, "", 0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 260, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"After Cyc: 1-1\"", TraditionalForm], 
         PlotRange -> {{-14.4, 374.4}, {-6., 36.}}, PlotRangeClipping -> True,
          PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox["\"\"", TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
     TagBox[
      GridBox[{{
         TemplateBox[{"\"HV Basis\""}, "SwatchLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    InsetBox[
                    Graphics3DBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    Specularity[
                    RGBColor[0, 0, 1], 30], 
                    SphereBox[{0, 0, 0}]}, Boxed -> False, Lighting -> 
                    "Neutral", PlotRange -> {{-1, 1}, {-1, 1}, {-1, 1}}, 
                    ViewPoint -> {0, 
                    DirectedInfinity[-1], 0}, BoxRatios -> {1, 1, 1}], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}], {0.5, 0.5}, {1, 1}]}, 
                    AspectRatio -> Full, PlotRangePadding -> None, 
                    ImagePadding -> 1, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 
                 TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                  "RGBColorSwatchTemplate"], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"SphereBubble\""}]}], 
             "]"}]& ), Editable -> True], 
         TemplateBox[{
           RowBox[{
             RowBox[{"\[PlusMinus]", "45"}], " ", "\[Degree]", " ", 
             "Basis"}]}, "SwatchLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    InsetBox[
                    Graphics3DBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    Specularity[
                    RGBColor[1, 0, 0], 30], 
                    SphereBox[{0, 0, 0}]}, Boxed -> False, Lighting -> 
                    "Neutral", PlotRange -> {{-1, 1}, {-1, 1}, {-1, 1}}, 
                    ViewPoint -> {0, 
                    DirectedInfinity[-1], 0}, BoxRatios -> {1, 1, 1}], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}], {0.5, 0.5}, {1, 1}]}, 
                    AspectRatio -> Full, PlotRangePadding -> None, 
                    ImagePadding -> 1, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 
                 TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                  "RGBColorSwatchTemplate"], "}"}], ",", 
               RowBox[{"{", 
                 TagBox[#, HoldForm], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"SphereBubble\""}]}], 
             "]"}]& ), Editable -> True]}, {
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "9.1`2.", "\"\[PlusMinus]0.7\""}, {
             "v", "0.98`2.", "\"\[PlusMinus]0.04\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False], 
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "11.7`3.", "\"\[PlusMinus]0.6\""}, {
             "v", "0.71`2.", "\"\[PlusMinus]0.06\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}, {
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "9.1`2.", "\"\[PlusMinus]0.7\""}, {
             "v", "0.98`2.", "\"\[PlusMinus]0.04\""}, {
             "\[Theta]", "87", "\"\[PlusMinus]3\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False], 
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "11.7`3.", "\"\[PlusMinus]0.6\""}, {
             "v", "0.72`2.", "\"\[PlusMinus]0.06\""}, {"\[Theta]", 
              RowBox[{"-", "42"}], "\"\[PlusMinus]3\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]}, 
    "RowWithSeparators"], 
   TemplateBox[{"   ", "\"   \"", 
     TemplateBox[{
       GraphicsBox[{{{{{{Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{0., 0.5857864376269049}, {0., 2.}}], 
               LineBox[{{0., 2.}, {0., 3.414213562373095}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{117., 13.757359312880714`}, {117., 18.}}], 
               LineBox[{{117., 18.}, {117., 22.242640687119284`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{135., 6.}, {135., 9.}}], 
               LineBox[{{135., 9.}, {135., 12.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{162., 2.}, {162., 4.}}], 
               LineBox[{{162., 4.}, {162., 6.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{180., 0.}, {180., 1.}}], 
               LineBox[{{180., 1.}, {180., 2.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{207., 6.}, {207., 9.}}], 
               LineBox[{{207., 9.}, {207., 12.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{225., 5.17157287525381}, {225., 8.}}], 
               LineBox[{{225., 8.}, {225., 10.82842712474619}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{252., 9.39444872453601}, {252., 13.}}], 
               LineBox[{{252., 13.}, {252., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{270., 15.52786404500042}, {270., 20.}}], 
               LineBox[{{270., 20.}, {270., 24.47213595499958}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{27., 0.}, {27., 1.}}], 
               LineBox[{{27., 1.}, {27., 2.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{297., 10.25834261322606}, {297., 14.}}], 
               LineBox[{{297., 14.}, {297., 17.74165738677394}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{315., 10.25834261322606}, {315., 14.}}], 
               LineBox[{{315., 14.}, {315., 17.74165738677394}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{342., 0.}, {342., 1.}}], 
               LineBox[{{342., 1.}, {342., 2.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{360., 0.}, {360., 1.}}], 
               LineBox[{{360., 1.}, {360., 2.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{45., 8.535898384862247}, {45., 12.}}], 
               LineBox[{{45., 12.}, {45., 15.464101615137753`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{72., 6.83772233983162}, {72., 10.}}], 
               LineBox[{{72., 10.}, {72., 13.16227766016838}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], {}, {
               LineBox[{{90., 10.25834261322606}, {90., 14.}}], 
               LineBox[{{90., 14.}, {90., 17.74165738677394}}]}}}, {{
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{0., 8.535898384862247}, {0., 12.}}], 
               LineBox[{{0., 12.}, {0., 15.464101615137753`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{117., 6.}, {117., 9.}}], 
               LineBox[{{117., 9.}, {117., 12.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{135., 6.}, {135., 9.}}], 
               LineBox[{{135., 9.}, {135., 12.}}]}}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{162., 11.127016653792584`}, {162., 15.}}], 
               LineBox[{{162., 15.}, {162., 18.872983346207416`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{180., 11.127016653792584`}, {180., 15.}}], 
               LineBox[{{180., 15.}, {180., 18.872983346207416`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{207., 0.5857864376269049}, {207., 2.}}], 
               LineBox[{{207., 2.}, {207., 3.414213562373095}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{225., 0.5857864376269049}, {225., 2.}}], 
               LineBox[{{225., 2.}, {225., 3.414213562373095}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{252., 1.2679491924311228`}, {252., 3.}}], 
               LineBox[{{252., 3.}, {252., 4.732050807568877}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{270., 5.17157287525381}, {270., 8.}}], 
               LineBox[{{270., 8.}, {270., 10.82842712474619}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{27., 1.2679491924311228`}, {27., 3.}}], 
               LineBox[{{27., 3.}, {27., 4.732050807568877}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{297., 9.39444872453601}, {297., 13.}}], 
               LineBox[{{297., 13.}, {297., 16.605551275463988`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{315., 10.25834261322606}, {315., 14.}}], 
               LineBox[{{315., 14.}, {315., 17.74165738677394}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{342., 6.83772233983162}, {342., 10.}}], 
               LineBox[{{342., 10.}, {342., 13.16227766016838}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{360., 8.535898384862247}, {360., 12.}}], 
               LineBox[{{360., 12.}, {360., 15.464101615137753`}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{45., 0.5857864376269049}, {45., 2.}}], 
               LineBox[{{45., 2.}, {45., 3.414213562373095}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{72., 5.17157287525381}, {72., 8.}}], 
               LineBox[{{72., 8.}, {72., 10.82842712474619}}]}}, {
             Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], {}, {
               LineBox[{{90., 3.550510257216822}, {90., 6.}}], 
               LineBox[{{90., 6.}, {90., 8.449489742783179}}]}}}}, {{{
             Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 3.414213562373095}, 
                  Offset[{3, 0}, {0., 3.414213562373095}]}, {{0., 
                  3.414213562373095}, 
                  Offset[{-3, 0}, {0., 3.414213562373095}]}, {{0., 
                  0.5857864376269049}, 
                  Offset[{3, 0}, {0., 0.5857864376269049}]}, {{0., 
                  0.5857864376269049}, 
                  Offset[{-3, 0}, {0., 0.5857864376269049}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 22.242640687119284`}, 
                  Offset[{3, 0}, {117., 22.242640687119284`}]}, {{117., 
                  22.242640687119284`}, 
                  Offset[{-3, 0}, {117., 22.242640687119284`}]}, {{117., 
                  13.757359312880714`}, 
                  Offset[{3, 0}, {117., 13.757359312880714`}]}, {{117., 
                  13.757359312880714`}, 
                  Offset[{-3, 0}, {117., 13.757359312880714`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 12.}, 
                  Offset[{3, 0}, {135., 12.}]}, {{135., 12.}, 
                  Offset[{-3, 0}, {135., 12.}]}, {{135., 6.}, 
                  Offset[{3, 0}, {135., 6.}]}, {{135., 6.}, 
                  Offset[{-3, 0}, {135., 6.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 6.}, 
                  Offset[{3, 0}, {162., 6.}]}, {{162., 6.}, 
                  Offset[{-3, 0}, {162., 6.}]}, {{162., 2.}, 
                  Offset[{3, 0}, {162., 2.}]}, {{162., 2.}, 
                  Offset[{-3, 0}, {162., 2.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 2.}, 
                  Offset[{3, 0}, {180., 2.}]}, {{180., 2.}, 
                  Offset[{-3, 0}, {180., 2.}]}, {{180., 0.}, 
                  Offset[{3, 0}, {180., 0.}]}, {{180., 0.}, 
                  Offset[{-3, 0}, {180., 0.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 12.}, 
                  Offset[{3, 0}, {207., 12.}]}, {{207., 12.}, 
                  Offset[{-3, 0}, {207., 12.}]}, {{207., 6.}, 
                  Offset[{3, 0}, {207., 6.}]}, {{207., 6.}, 
                  Offset[{-3, 0}, {207., 6.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 10.82842712474619}, 
                  Offset[{3, 0}, {225., 10.82842712474619}]}, {{225., 
                  10.82842712474619}, 
                  Offset[{-3, 0}, {225., 10.82842712474619}]}, {{225., 
                  5.17157287525381}, 
                  Offset[{3, 0}, {225., 5.17157287525381}]}, {{225., 
                  5.17157287525381}, 
                  Offset[{-3, 0}, {225., 5.17157287525381}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 16.605551275463988`}, 
                  Offset[{3, 0}, {252., 16.605551275463988`}]}, {{252., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {252., 16.605551275463988`}]}, {{252., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {252., 9.39444872453601}]}, {{252., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {252., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 24.47213595499958}, 
                  Offset[{3, 0}, {270., 24.47213595499958}]}, {{270., 
                  24.47213595499958}, 
                  Offset[{-3, 0}, {270., 24.47213595499958}]}, {{270., 
                  15.52786404500042}, 
                  Offset[{3, 0}, {270., 15.52786404500042}]}, {{270., 
                  15.52786404500042}, 
                  Offset[{-3, 0}, {270., 15.52786404500042}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 2.}, 
                  Offset[{3, 0}, {27., 2.}]}, {{27., 2.}, 
                  Offset[{-3, 0}, {27., 2.}]}, {{27., 0.}, 
                  Offset[{3, 0}, {27., 0.}]}, {{27., 0.}, 
                  Offset[{-3, 0}, {27., 0.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 17.74165738677394}, 
                  Offset[{3, 0}, {297., 17.74165738677394}]}, {{297., 
                  17.74165738677394}, 
                  Offset[{-3, 0}, {297., 17.74165738677394}]}, {{297., 
                  10.25834261322606}, 
                  Offset[{3, 0}, {297., 10.25834261322606}]}, {{297., 
                  10.25834261322606}, 
                  Offset[{-3, 0}, {297., 10.25834261322606}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 17.74165738677394}, 
                  Offset[{3, 0}, {315., 17.74165738677394}]}, {{315., 
                  17.74165738677394}, 
                  Offset[{-3, 0}, {315., 17.74165738677394}]}, {{315., 
                  10.25834261322606}, 
                  Offset[{3, 0}, {315., 10.25834261322606}]}, {{315., 
                  10.25834261322606}, 
                  Offset[{-3, 0}, {315., 10.25834261322606}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 2.}, 
                  Offset[{3, 0}, {342., 2.}]}, {{342., 2.}, 
                  Offset[{-3, 0}, {342., 2.}]}, {{342., 0.}, 
                  Offset[{3, 0}, {342., 0.}]}, {{342., 0.}, 
                  Offset[{-3, 0}, {342., 0.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 2.}, 
                  Offset[{3, 0}, {360., 2.}]}, {{360., 2.}, 
                  Offset[{-3, 0}, {360., 2.}]}, {{360., 0.}, 
                  Offset[{3, 0}, {360., 0.}]}, {{360., 0.}, 
                  Offset[{-3, 0}, {360., 0.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 15.464101615137753`}, 
                  Offset[{3, 0}, {45., 15.464101615137753`}]}, {{45., 
                  15.464101615137753`}, 
                  Offset[{-3, 0}, {45., 15.464101615137753`}]}, {{45., 
                  8.535898384862247}, 
                  Offset[{3, 0}, {45., 8.535898384862247}]}, {{45., 
                  8.535898384862247}, 
                  Offset[{-3, 0}, {45., 8.535898384862247}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 13.16227766016838}, 
                  Offset[{3, 0}, {72., 13.16227766016838}]}, {{72., 
                  13.16227766016838}, 
                  Offset[{-3, 0}, {72., 13.16227766016838}]}, {{72., 
                  6.83772233983162}, 
                  Offset[{3, 0}, {72., 6.83772233983162}]}, {{72., 
                  6.83772233983162}, 
                  Offset[{-3, 0}, {72., 6.83772233983162}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[0, 0, 1]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 17.74165738677394}, 
                  Offset[{3, 0}, {90., 17.74165738677394}]}, {{90., 
                  17.74165738677394}, 
                  Offset[{-3, 0}, {90., 17.74165738677394}]}, {{90., 
                  10.25834261322606}, 
                  Offset[{3, 0}, {90., 10.25834261322606}]}, {{90., 
                  10.25834261322606}, 
                  Offset[{-3, 0}, {90., 10.25834261322606}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}}, {{Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{0., 15.464101615137753`}, 
                  Offset[{3, 0}, {0., 15.464101615137753`}]}, {{0., 
                  15.464101615137753`}, 
                  Offset[{-3, 0}, {0., 15.464101615137753`}]}, {{0., 
                  8.535898384862247}, 
                  Offset[{3, 0}, {0., 8.535898384862247}]}, {{0., 
                  8.535898384862247}, 
                  Offset[{-3, 0}, {0., 8.535898384862247}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{117., 12.}, 
                  Offset[{3, 0}, {117., 12.}]}, {{117., 12.}, 
                  Offset[{-3, 0}, {117., 12.}]}, {{117., 6.}, 
                  Offset[{3, 0}, {117., 6.}]}, {{117., 6.}, 
                  Offset[{-3, 0}, {117., 6.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{135., 12.}, 
                  Offset[{3, 0}, {135., 12.}]}, {{135., 12.}, 
                  Offset[{-3, 0}, {135., 12.}]}, {{135., 6.}, 
                  Offset[{3, 0}, {135., 6.}]}, {{135., 6.}, 
                  Offset[{-3, 0}, {135., 6.}]}}], {{{1., 0.}, {0., 1.}}, {0., 
                0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{162., 18.872983346207416`}, 
                  Offset[{3, 0}, {162., 18.872983346207416`}]}, {{162., 
                  18.872983346207416`}, 
                  Offset[{-3, 0}, {162., 18.872983346207416`}]}, {{162., 
                  11.127016653792584`}, 
                  Offset[{3, 0}, {162., 11.127016653792584`}]}, {{162., 
                  11.127016653792584`}, 
                  Offset[{-3, 0}, {162., 11.127016653792584`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{180., 18.872983346207416`}, 
                  Offset[{3, 0}, {180., 18.872983346207416`}]}, {{180., 
                  18.872983346207416`}, 
                  Offset[{-3, 0}, {180., 18.872983346207416`}]}, {{180., 
                  11.127016653792584`}, 
                  Offset[{3, 0}, {180., 11.127016653792584`}]}, {{180., 
                  11.127016653792584`}, 
                  Offset[{-3, 0}, {180., 11.127016653792584`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{207., 3.414213562373095}, 
                  Offset[{3, 0}, {207., 3.414213562373095}]}, {{207., 
                  3.414213562373095}, 
                  Offset[{-3, 0}, {207., 3.414213562373095}]}, {{207., 
                  0.5857864376269049}, 
                  Offset[{3, 0}, {207., 0.5857864376269049}]}, {{207., 
                  0.5857864376269049}, 
                  Offset[{-3, 0}, {207., 0.5857864376269049}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{225., 3.414213562373095}, 
                  Offset[{3, 0}, {225., 3.414213562373095}]}, {{225., 
                  3.414213562373095}, 
                  Offset[{-3, 0}, {225., 3.414213562373095}]}, {{225., 
                  0.5857864376269049}, 
                  Offset[{3, 0}, {225., 0.5857864376269049}]}, {{225., 
                  0.5857864376269049}, 
                  Offset[{-3, 0}, {225., 0.5857864376269049}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{252., 4.732050807568877}, 
                  Offset[{3, 0}, {252., 4.732050807568877}]}, {{252., 
                  4.732050807568877}, 
                  Offset[{-3, 0}, {252., 4.732050807568877}]}, {{252., 
                  1.2679491924311228`}, 
                  Offset[{3, 0}, {252., 1.2679491924311228`}]}, {{252., 
                  1.2679491924311228`}, 
                  Offset[{-3, 0}, {252., 1.2679491924311228`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{270., 10.82842712474619}, 
                  Offset[{3, 0}, {270., 10.82842712474619}]}, {{270., 
                  10.82842712474619}, 
                  Offset[{-3, 0}, {270., 10.82842712474619}]}, {{270., 
                  5.17157287525381}, 
                  Offset[{3, 0}, {270., 5.17157287525381}]}, {{270., 
                  5.17157287525381}, 
                  Offset[{-3, 0}, {270., 5.17157287525381}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{27., 4.732050807568877}, 
                  Offset[{3, 0}, {27., 4.732050807568877}]}, {{27., 
                  4.732050807568877}, 
                  Offset[{-3, 0}, {27., 4.732050807568877}]}, {{27., 
                  1.2679491924311228`}, 
                  Offset[{3, 0}, {27., 1.2679491924311228`}]}, {{27., 
                  1.2679491924311228`}, 
                  Offset[{-3, 0}, {27., 1.2679491924311228`}]}}], {{{1., 
                0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{297., 16.605551275463988`}, 
                  Offset[{3, 0}, {297., 16.605551275463988`}]}, {{297., 
                  16.605551275463988`}, 
                  Offset[{-3, 0}, {297., 16.605551275463988`}]}, {{297., 
                  9.39444872453601}, 
                  Offset[{3, 0}, {297., 9.39444872453601}]}, {{297., 
                  9.39444872453601}, 
                  Offset[{-3, 0}, {297., 9.39444872453601}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{315., 17.74165738677394}, 
                  Offset[{3, 0}, {315., 17.74165738677394}]}, {{315., 
                  17.74165738677394}, 
                  Offset[{-3, 0}, {315., 17.74165738677394}]}, {{315., 
                  10.25834261322606}, 
                  Offset[{3, 0}, {315., 10.25834261322606}]}, {{315., 
                  10.25834261322606}, 
                  Offset[{-3, 0}, {315., 10.25834261322606}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{342., 13.16227766016838}, 
                  Offset[{3, 0}, {342., 13.16227766016838}]}, {{342., 
                  13.16227766016838}, 
                  Offset[{-3, 0}, {342., 13.16227766016838}]}, {{342., 
                  6.83772233983162}, 
                  Offset[{3, 0}, {342., 6.83772233983162}]}, {{342., 
                  6.83772233983162}, 
                  Offset[{-3, 0}, {342., 6.83772233983162}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{360., 15.464101615137753`}, 
                  Offset[{3, 0}, {360., 15.464101615137753`}]}, {{360., 
                  15.464101615137753`}, 
                  Offset[{-3, 0}, {360., 15.464101615137753`}]}, {{360., 
                  8.535898384862247}, 
                  Offset[{3, 0}, {360., 8.535898384862247}]}, {{360., 
                  8.535898384862247}, 
                  Offset[{-3, 0}, {360., 8.535898384862247}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{45., 3.414213562373095}, 
                  Offset[{3, 0}, {45., 3.414213562373095}]}, {{45., 
                  3.414213562373095}, 
                  Offset[{-3, 0}, {45., 3.414213562373095}]}, {{45., 
                  0.5857864376269049}, 
                  Offset[{3, 0}, {45., 0.5857864376269049}]}, {{45., 
                  0.5857864376269049}, 
                  Offset[{-3, 0}, {45., 0.5857864376269049}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{72., 10.82842712474619}, 
                  Offset[{3, 0}, {72., 10.82842712474619}]}, {{72., 
                  10.82842712474619}, 
                  Offset[{-3, 0}, {72., 10.82842712474619}]}, {{72., 
                  5.17157287525381}, 
                  Offset[{3, 0}, {72., 5.17157287525381}]}, {{72., 
                  5.17157287525381}, 
                  Offset[{-3, 0}, {72., 5.17157287525381}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
              Directive[
               RGBColor[1, 0, 0]], 
              GeometricTransformationBox[
               LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
              GeometricTransformationBox[
               LineBox[{{{90., 8.449489742783179}, 
                  Offset[{3, 0}, {90., 8.449489742783179}]}, {{90., 
                  8.449489742783179}, 
                  Offset[{-3, 0}, {90., 8.449489742783179}]}, {{90., 
                  3.550510257216822}, 
                  Offset[{3, 0}, {90., 3.550510257216822}]}, {{90., 
                  3.550510257216822}, 
                  Offset[{-3, 0}, {90., 3.550510257216822}]}}], {{{1., 0.}, {
                0., 1.}}, {0., 0.}}]}}}}, {{{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[0, 0, 1]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 2.}}, {{117., 18.}}, {{
              135., 9.}}, {{162., 4.}}, {{180., 1.}}, {{207., 9.}}, {{225., 
              8.}}, {{252., 13.}}, {{270., 20.}}, {{27., 1.}}, {{297., 
              14.}}, {{315., 14.}}, {{342., 1.}}, {{360., 1.}}, {{45., 
              12.}}, {{72., 10.}}, {{90., 14.}}}]}, {
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             GeometricTransformationBox[
              InsetBox[
               BoxData[
                FormBox[
                 StyleBox[
                 "\[FilledSmallCircle]", 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, StripOnInput -> False], 
                 TraditionalForm]], {0., 0.}], {{{0., 12.}}, {{117., 9.}}, {{
              135., 9.}}, {{162., 15.}}, {{180., 15.}}, {{207., 2.}}, {{225., 
              2.}}, {{252., 3.}}, {{270., 8.}}, {{27., 3.}}, {{297., 13.}}, {{
              315., 14.}}, {{342., 10.}}, {{360., 12.}}, {{45., 2.}}, {{72., 
              8.}}, {{90., 6.}}}]}}}, {{}, {}}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1: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
9y8GwpWdfth/E4b/ATqzcFo=
               "]]}, Annotation[#, "Charting`Private`Tag$677855#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.005], 
               Opacity[0.8]], 
              LineBox[CompressedData["
1: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
arjIzYd49a8xW75qgusMZ27+G16oYYe9/yotGGl8vNp9nRfXd25YeTNQC7Nb
Qxis9rwozhpONxfQxskbMfbnCnlwcNogLN5HBy9/iLzo010Jw39XLM8d0wFr
JpWQ4F+J5ZWiym23dFDSdOT31TFuJChOjvJy66IuTb/jUjY3QlyLXcprdSHF
eeok5wQX7FuWjfpY9WE3slZu4iYneJ+EyPzeoI+dJxaPjWZy4vHrV3+lXfXR
fHisXmE3J4x/VjeFXievj186mr+GE1oKXhtZd2wGh0sZB+PoCkhm3hdXqzDA
s8NFhr5xHBgsWDfv8swA10zWRblu50DBpdN9qb8NwGkiQitR5wD/vciTj2y3
4J/NQdt1v9jB8kOa3Wd+C/46+nIy4tkxw8CCuQKwmSc3amUWGx7ni3/6qQ38
mt53QS6GDRcpv16etQYiHIK0D7mywfpV+Y2pGMBFoMR3gxIbSvetDDzdCrgv
4gnfA1YkToxtN+wHdFKNQw5XscLWpcXo2xeARaxtzKqAFb/XR0ttFTDEU+6O
NXeCWOEw8Kr/k6chau3+bDIQZIWS8c327BhDDHdM75BZYsFS1dEavcOG4E5q
LHP4zILKA5uPn6gyRFLz5K4LLSygqJSaaC0ZYiqkwvlbFAuqD4XXHSo0wnP9
W63+Y1Qc/GFWolJlhEe7NC/q91Hhtkvm5CBhhDYe+Ve+HVSwq74M2fDFCJeD
Fe6XllPh/lZHrl/LGFt/nCr7FkqFmrmQwF4rY3xfSPKx8KSCs/bbX5qnMSr5
RLbP2VNRd6R4MOWQMXpfGGwx06aCW50tR6HPGA28afebyDobOT+c1vvZGF3U
gIclSxQ0cDaGJf4xxpjyyntvf1Lg8y7YolvOBBkXZdsshinQsjTWitcygclt
t4WklxTw1EsqyFiZwN16JPjvIwqajj79x4w2QW51k+mfRgpOzFR+X3vIBE1Z
f57H3aDA32v/m4dnTOB7O2TY6DIFApqajRKECZ4/otzoO03Bpwt85Q9emkD7
r35uYTYFd7m/5EZ+NsHxiScba45SEDhSFNHOZ4pVyd4PB1IoENtA4RRWMAUx
9IklPJ6CrqTdJf66pugyt7jmG0VBUudjvVu2pojqG+tpDqGAsWpTH7u/Ka7e
MUmI2U3BkFd+uHOSKXxMxOqyvCk4dv03x+UTpsi4rJ3F6U7B5kWvi/OXTLF2
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
d/+hYOjtttl//xLBftkgJnyKgv8B0Htb2g==
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$677855#1"]& ]}}, {}}, {{{{}, {}, 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag$677908#1"]& ], 
            TagBox[{
              Directive[
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[0.006], 
               Opacity[0.6], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1: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
gMtf+VC5dksyZvXxMG7Kv3LH/1p2VFmSZkd36uQcJDBsMSDvk2tJRhzlP8HJ
ouqx78jdYwGWZI238pHivQQuSC6mq4hbkqGeJSeKEgjsbPrDRU6BXPZlf/h6
6rzZefW/8H8Psq+rX242msC7spKsqksgN2tnr+AKJSClJTOqGQByx+l9mq99
CLy+8+vqLReQ7mXi955uoPwb9uTwDkOQ2tfK81uofmDVWGh/VgykmO6dKjrV
Pz4lqq3dFMkgj58Umh4zJLD7yhCnzJpBWoiLNCmtpvbDV3n+tRyDVIsrfm24
koBjvoq4f7cF+aF8cYOaBoH6U0t6tstZkLfp2VlPJAjEPF7kxL5uRnqJhbXU
v6Nj37+KrJQjZuTLBr/OpAE6SjW0b2dGmpGqTyNe6Dyh43K8oc1RBTNScVxq
78ZbdPAqeltciTUlC/8waKV1dJQEHtUTUjchb0zkpb2JoeNMztIY6b/G5PYO
8SyrUGp869kGhYfG5LiiS+GhADreCl5evmKXMXn9pvHENw86tOtfank8MSKr
7yY1VerR0TGpqHh8ryF5b9Hf03zjNPQo1Ww6tcmQfH2vgSP9kYa3dsuPXNAx
JG38x1kir2ngOWome+2VAekv1yDZdZcGZ3M/yU+rDcjK13UrltXQ8Cajgld3
WJ88P6fwzsyLBu7FS7922+iRS3dMd/ae0YZGQsDyE0p6pLSMWuXyCm04PK8O
3/lnFalywOLKriJt5B3W+qZ7ZhUZ1Wj9ayxFG0vklo+Xi64i4yMOpkp6aCNS
L3Lwe40O+W5ZKW3vlBZeGpSNbiQJ0v7H0u/nDLXQyPg5rT2lSrJ0FwxzF2og
N9H2vnWVKplY6NL/Y48GQhqPlG91VSUL9s6JPWVpwNIudd9KexVypURpT4KX
BlTF5RaLn1xCjvI3mhrJaVD+cja7576YfOetEnD5mDo6wreJHwgVJlvHFRta
jqnBQ3PuTq4gN7b5O96x3a+Ke3efcY1L06B3cqmih7Y8Xvimip/YSsPGM1af
fwrJY+SblsK68zSsWVwQVz4mB74FiaubHOhYyt12WuqCHBg+Ctvjd1N9e9xi
f9waObSMbbk/93U5JoXXlIXYLcZD/sl7gsO6OD7MdT4pVhb9ax3cB0VWYblr
T2unlyzeHj7+vH3VKsQZbnGSMpbFV7rtcMjuVTD9c+Tz53kZiKwt5dxX0EPm
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

               "]]}, 
             Annotation[#, "Charting`Private`Tag$677908#1"]& ]}}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Coinc. per 10 min\"", TraditionalForm], None}, {
            FormBox["\"Measurement Angle\"", TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 
           Thickness[0.006], FontSize -> 12], FrameTicks -> {{{{-10, 
              FormBox["\"-10\"", TraditionalForm], 0.024}, {0, 
              FormBox["\"0\"", TraditionalForm], 0.024}, {10, 
              FormBox["\"10\"", TraditionalForm], 0.024}, {20, 
              FormBox["\"20\"", TraditionalForm], 0.024}, {30, 
              FormBox["\"30\"", TraditionalForm], 0.024}}, {{-10, "", 
              0.024}, {0, "", 0.024}, {10, "", 0.024}, {20, "", 0.024}, {
             30, "", 0.024}}}, {{{-45, "", 0.024}, {-30, "", 0.012}, {-15, "",
               0.012}, {0, 
              FormBox[
               RowBox[{"\"0\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {15, "", 0.012}, {30, "", 0.012}, {45, "", 0.024}, {
             60, "", 0.012}, {75, "", 0.012}, {90, 
              FormBox[
               RowBox[{"\"90\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {105, "", 0.012}, {120, "", 0.012}, {135, "", 0.024}, {
             150, "", 0.012}, {165, "", 0.012}, {180, 
              FormBox[
               RowBox[{"\"180\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {195, "", 0.012}, {210, "", 0.012}, {225, "", 0.024}, {
             240, "", 0.012}, {255, "", 0.012}, {270, 
              FormBox[
               RowBox[{"\"270\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {285, "", 0.012}, {300, "", 0.012}, {315, "", 0.024}, {
             330, "", 0.012}, {345, "", 0.012}, {360, 
              FormBox[
               RowBox[{"\"360\"", " ", "\"\[Degree]\""}], TraditionalForm], 
              0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}, {{-45, "", 0.024}, {-30, "", 0.012}, {-15, "", 
              0.012}, {0, "", 0.024}, {15, "", 0.012}, {30, "", 0.012}, {
             45, "", 0.024}, {60, "", 0.012}, {75, "", 0.012}, {
             90, "", 0.024}, {105, "", 0.012}, {120, "", 0.012}, {
             135, "", 0.024}, {150, "", 0.012}, {165, "", 0.012}, {
             180, "", 0.024}, {195, "", 0.012}, {210, "", 0.012}, {
             225, "", 0.024}, {240, "", 0.012}, {255, "", 0.012}, {
             270, "", 0.024}, {285, "", 0.012}, {300, "", 0.012}, {
             315, "", 0.024}, {330, "", 0.012}, {345, "", 0.012}, {
             360, "", 0.024}, {375, "", 0.012}, {390, "", 0.012}, {
             405, "", 0.024}}}}, GridLines -> {None, None}, GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 260, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"After Cyc: 2-2\"", TraditionalForm], 
         PlotRange -> {{-14.4, 374.4}, {-4., 24.}}, PlotRangeClipping -> True,
          PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox["\"\"", TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ), 
      InterpretationFunction -> (RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
     TagBox[
      GridBox[{{
         TemplateBox[{"\"HV Basis\""}, "SwatchLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    InsetBox[
                    Graphics3DBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    Specularity[
                    RGBColor[0, 0, 1], 30], 
                    SphereBox[{0, 0, 0}]}, Boxed -> False, Lighting -> 
                    "Neutral", PlotRange -> {{-1, 1}, {-1, 1}, {-1, 1}}, 
                    ViewPoint -> {0, 
                    DirectedInfinity[-1], 0}, BoxRatios -> {1, 1, 1}], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}], {0.5, 0.5}, {1, 1}]}, 
                    AspectRatio -> Full, PlotRangePadding -> None, 
                    ImagePadding -> 1, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 
                 TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                  "RGBColorSwatchTemplate"], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"SphereBubble\""}]}], 
             "]"}]& ), Editable -> True], 
         TemplateBox[{
           RowBox[{
             RowBox[{"\[PlusMinus]", "45"}], " ", "\[Degree]", " ", 
             "Basis"}]}, "SwatchLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    InsetBox[
                    Graphics3DBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    Specularity[
                    RGBColor[1, 0, 0], 30], 
                    SphereBox[{0, 0, 0}]}, Boxed -> False, Lighting -> 
                    "Neutral", PlotRange -> {{-1, 1}, {-1, 1}, {-1, 1}}, 
                    ViewPoint -> {0, 
                    DirectedInfinity[-1], 0}, BoxRatios -> {1, 1, 1}], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}], {0.5, 0.5}, {1, 1}]}, 
                    AspectRatio -> Full, PlotRangePadding -> None, 
                    ImagePadding -> 1, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 
                 TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                  "RGBColorSwatchTemplate"], "}"}], ",", 
               RowBox[{"{", 
                 TagBox[#, HoldForm], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"SphereBubble\""}]}], 
             "]"}]& ), Editable -> True]}, {
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "8.`2.", "\"\[PlusMinus]0.9\""}, {
             "v", "0.93`2.", "\"\[PlusMinus]0.08\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False], 
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "7.6`2.", "\"\[PlusMinus]0.7\""}, {
             "v", "0.73`2.", "\"\[PlusMinus]0.10\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}, {
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "8.2`2.", "\"\[PlusMinus]0.9\""}, {
             "v", "0.95`2.", "\"\[PlusMinus]0.08\""}, {
             "\[Theta]", "95", "\"\[PlusMinus]4\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False], 
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Value\"", "\"\[Sigma]\""}, {
             "a", "7.6`2.", "\"\[PlusMinus]0.7\""}, {
             "v", "0.76`2.", "\"\[PlusMinus]0.10\""}, {"\[Theta]", 
              RowBox[{"-", "39"}], "\"\[PlusMinus]5\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], "DialogStyle", StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]}, 
    "RowWithSeparators"]},
  "RowWithSeparators"]], "Output",
 CellChangeTimes->{3.9392418582082615`*^9, 3.9488337531116805`*^9, 
  3.9488369163303185`*^9, 3.94883736473453*^9, 3.9488376298173213`*^9, 
  3.9488382362954683`*^9, 3.9488388443286953`*^9, 3.9488533071268883`*^9, 
  3.948853348549616*^9},
 CellLabel->
  "Out[964]=",ExpressionUUID->"467808fe-7aed-46de-9343-219a0e2ba456"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nb", "=", 
    RowBox[{"CreateDocument", "[", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Create", " ", "a", " ", "new"}], ",", 
    RowBox[{"empty", " ", "notebook"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"NotebookWrite", "[", 
  RowBox[{"nb", ",", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"BoxData", "[", 
      RowBox[{"ToBoxes", "[", "\[IndentingNewLine]", 
       RowBox[{"Grid", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"tempFittedPlot", "[", 
             RowBox[{"[", 
              RowBox[{";;", "4"}], "]"}], "]"}], ",", 
            RowBox[{"tempFittedPlot", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"-", "4"}], ";;"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ItemSize", "\[Rule]", "All"}], ",", 
         RowBox[{"Spacings", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"2", ",", "2"}], "}"}]}]}], "\[IndentingNewLine]", "]"}], 
       "\[IndentingNewLine]", "]"}], "]"}], ",", "\"\<Output\>\""}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.948839013902733*^9, 3.948839081068595*^9}, {
  3.9488391550769877`*^9, 3.9488391579533405`*^9}, {3.948839209682736*^9, 
  3.9488392123865223`*^9}, {3.9488392776119337`*^9, 3.9488393169301257`*^9}, {
  3.948839387652196*^9, 3.948839390226863*^9}, {3.9488394461975517`*^9, 
  3.948839455504416*^9}, {3.9488527722929945`*^9, 
  3.948852813887019*^9}},ExpressionUUID->"7fac2db8-5a96-4c87-95fb-\
7a7bca7e7397"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nb", "=", 
    RowBox[{"CreateDocument", "[", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Create", " ", "a", " ", "new"}], ",", 
    RowBox[{"empty", " ", "notebook"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"NotebookWrite", "[", 
  RowBox[{"nb", ",", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"BoxData", "[", 
      RowBox[{"ToBoxes", "[", 
       RowBox[{"Row", "[", 
        RowBox[{"tempFittedPlot", ",", "\"\<\\t\>\""}], "]"}], "]"}], "]"}], 
     ",", "\"\<Output\>\""}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{3.9381075782979116`*^9, 3.9381102938430586`*^9, 
  3.9488393834732833`*^9},
 CellLabel->
  "In[915]:=",ExpressionUUID->"03191828-e3bc-45d4-afb1-df229944161e"]
}, Open  ]]
},
WindowSize->{885.5999999999999, 498.},
WindowMargins->{{67.8, Automatic}, {33.60000000000002, Automatic}},
Magnification:>0.9 Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"bf58a030-f4f4-477d-a3b1-397555dec2aa"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 304, 5, 25, "Input",ExpressionUUID->"f6a6007b-8758-471a-a0d0-a300d0a73386"],
Cell[865, 27, 373, 8, 26, "Input",ExpressionUUID->"7be9c41e-c886-47e5-bd42-1f90e345951d"],
Cell[CellGroupData[{
Cell[1263, 39, 689, 12, 95, "Input",ExpressionUUID->"b4dc4ff4-a3c8-4ce9-b533-3f0aefae9e80"],
Cell[1955, 53, 532, 11, 26, "Message",ExpressionUUID->"803fba5a-3591-4297-babe-f76274260684"],
Cell[2490, 66, 532, 11, 26, "Message",ExpressionUUID->"a64d6fdd-dfb5-46c6-80ad-784a16ab0e67"],
Cell[3025, 79, 534, 11, 26, "Message",ExpressionUUID->"a2c6a65c-f3a1-4396-bdb8-37288ebb3dc5"],
Cell[3562, 92, 532, 11, 26, "Message",ExpressionUUID->"4d148b4f-1ffd-41ae-b1c4-80ffc19f05ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4131, 108, 259, 4, 48, "Subsection",ExpressionUUID->"6b05cf01-ac78-4e45-aa2f-d3b2c9ed739a"],
Cell[4393, 114, 1591, 33, 113, "Input",ExpressionUUID->"3833bde7-fd44-45a0-8f91-5f94e6420e00"],
Cell[5987, 149, 1200, 29, 60, "Input",ExpressionUUID->"163d58f7-db67-442b-b038-d9e349a79c56"],
Cell[CellGroupData[{
Cell[7212, 182, 467, 11, 26, "Input",ExpressionUUID->"b9a446aa-4149-4c07-87b5-73e698a7fcb8"],
Cell[7682, 195, 1008, 17, 28, "Output",ExpressionUUID->"dda4aa71-3ed1-41b0-acab-f1b4f98420cc"]
}, Open  ]],
Cell[8705, 215, 815, 21, 30, "Input",ExpressionUUID->"736add2e-814c-4918-b8f3-c32644f0bf55"],
Cell[CellGroupData[{
Cell[9545, 240, 214, 4, 25, "Input",ExpressionUUID->"08cbfb14-0e9d-4089-a99a-9c1de8f8da53"],
Cell[9762, 246, 469, 10, 28, "Output",ExpressionUUID->"d20bb90b-a2dd-47fa-b822-425c1013c248"]
}, Open  ]],
Cell[10246, 259, 4701, 103, 352, "Input",ExpressionUUID->"8277606c-ca38-4ba3-94e7-d51c78e39f97"],
Cell[14950, 364, 3771, 88, 352, "Input",ExpressionUUID->"e6653e94-0128-4304-9078-827e69f9eca6"],
Cell[18724, 454, 2728, 68, 232, "Input",ExpressionUUID->"ab7cbabc-c88c-460b-8825-b13188c33416"],
Cell[CellGroupData[{
Cell[21477, 526, 1383, 34, 95, "Input",ExpressionUUID->"95a0e52a-3c97-443a-abf3-d39f5d704799"],
Cell[22863, 562, 2440, 58, 64, "Output",ExpressionUUID->"0e89a1f5-59eb-46df-8e3a-c554c136ccf0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25340, 625, 370, 9, 25, "Input",ExpressionUUID->"a66b6ba0-d23f-4901-96d2-62fc9d028a51"],
Cell[25713, 636, 638, 10, 28, "Output",ExpressionUUID->"4d7f4a60-f88a-4d29-80db-d6fc626f23d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26388, 651, 169, 3, 40, "Subsubsection",ExpressionUUID->"4be91115-02a6-4b2e-b173-121bbbe5dbc4"],
Cell[26560, 656, 25909, 525, 1340, "Input",ExpressionUUID->"1892aa3a-765d-4e9a-aa37-995e9d3d166b"],
Cell[52472, 1183, 652, 19, 25, "Input",ExpressionUUID->"b1c06ff1-0080-448d-9728-ca3613137cdb",
 CellID->332479036],
Cell[CellGroupData[{
Cell[53149, 1206, 1012, 25, 43, "Input",ExpressionUUID->"a67f4048-5712-465d-9ab8-019592c0dfd1",
 CellID->516331820],
Cell[54164, 1233, 1183, 31, 47, "Output",ExpressionUUID->"c2089713-f223-4ef5-86dd-9f1763fba024"],
Cell[55350, 1266, 1140, 29, 45, "Output",ExpressionUUID->"570382ee-dcc2-414d-9c49-2c138a63fd63"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56527, 1300, 511, 13, 25, "Input",ExpressionUUID->"52dc4b09-331f-4186-b2b6-b847edac6305"],
Cell[57041, 1315, 856, 22, 47, "Output",ExpressionUUID->"71da57be-38c9-4a2d-a2a0-566465284601"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57934, 1342, 445, 13, 25, "Input",ExpressionUUID->"0c6eaca2-11a0-4766-bda0-ce686c91672c"],
Cell[58382, 1357, 509, 14, 28, "Output",ExpressionUUID->"f36ec123-c1a9-4699-9de0-4b7aa5ea40b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58928, 1376, 529, 15, 26, "Input",ExpressionUUID->"41dcc135-a5ea-468c-838c-9d775693ea24"],
Cell[59460, 1393, 197, 5, 28, "Output",ExpressionUUID->"5691c9ae-c7a1-47c4-a0fe-39cf90eb6af7"]
}, Open  ]],
Cell[59672, 1401, 88, 0, 25, "Input",ExpressionUUID->"6aa50d08-dc5b-43be-9aeb-8b3af2ac3d15"],
Cell[CellGroupData[{
Cell[59785, 1405, 506, 12, 25, "Input",ExpressionUUID->"13758b41-5104-4551-a2d8-afd301aba2f8"],
Cell[60294, 1419, 1307, 27, 73, "Output",ExpressionUUID->"c8d5cfc7-d64d-432c-9d54-d0a4307c3a51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61638, 1451, 902, 22, 77, "Input",ExpressionUUID->"a8320667-c675-404b-adae-f3482c05cead"],
Cell[62543, 1475, 2135, 50, 143, "Output",ExpressionUUID->"bcc0210f-81e3-49b0-827b-4d9f13006fe7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64715, 1530, 236, 5, 26, "Input",ExpressionUUID->"b3691541-e794-4684-8af6-42a308115c9d"],
Cell[64954, 1537, 207, 5, 28, "Output",ExpressionUUID->"32127eac-80ed-4578-a187-6135a1ace36c"]
}, Open  ]],
Cell[65176, 1545, 7579, 183, 352, "Input",ExpressionUUID->"feb367e0-6332-4d3d-9634-acd11e7454f0"],
Cell[CellGroupData[{
Cell[72780, 1732, 261, 6, 25, "Input",ExpressionUUID->"0ffa4371-6728-4f11-bafa-70b0e7999c8f"],
Cell[73044, 1740, 158, 3, 28, "Output",ExpressionUUID->"42e44ef7-63b0-4363-ae87-7a820c36f387"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73239, 1748, 246, 5, 25, "Input",ExpressionUUID->"d9f5ec99-ba89-4df5-bc8d-c74abb5eefaa"],
Cell[73488, 1755, 1225, 32, 37, "Output",ExpressionUUID->"a83e7e0f-6959-4880-9791-4fcc17c4514a"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[74774, 1794, 161, 3, 34, "Subsection",ExpressionUUID->"a7a73e6e-4bab-4242-a7a8-6180841a792e"],
Cell[74938, 1799, 33467, 768, 2427, "Input",ExpressionUUID->"bc3e0040-d232-4c1d-8e93-d2acff18a150",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[108430, 2571, 185, 4, 26, "Input",ExpressionUUID->"ea52b85c-6202-4ef8-a478-8f04b2e9958d"],
Cell[108618, 2577, 898072, 15871, 775, "Output",ExpressionUUID->"68b59182-61fb-483f-995a-7ef9c44b48da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1006727, 18453, 185, 4, 26, "Input",ExpressionUUID->"de2fe40c-ef4b-4ecb-a61e-3e5411b06749"],
Cell[1006915, 18459, 961638, 17216, 1561, "Output",ExpressionUUID->"467808fe-7aed-46de-9343-219a0e2ba456"]
}, Open  ]],
Cell[1968568, 35678, 1649, 40, 129, "Input",ExpressionUUID->"7fac2db8-5a96-4c87-95fb-7a7bca7e7397"],
Cell[1970220, 35720, 761, 21, 43, "Input",ExpressionUUID->"03191828-e3bc-45d4-afb1-df229944161e"]
}, Open  ]]
}
]
*)

